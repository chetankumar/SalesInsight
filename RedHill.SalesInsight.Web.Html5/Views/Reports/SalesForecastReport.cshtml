@using RedHill.SalesInsight.Web.Html5.Helpers;
@model RedHill.SalesInsight.Web.Html5.Models.ReportFilter
@{
    ViewBag.Title = "Sales Forecast Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.UsingDatePicker = true;
    ViewBag.UsingChartJs = true;
}
<div class="page-head">
    <h1>Sales Forecast Report</h1>
    <ol class="breadcrumb">
        <li><a href="/Home/Index">Home</a></li>
        <li><a href="/Reports/Index">Reports</a></li>
        <li class="active">Sales Forecast</li>
    </ol>
</div>
<div class="cl-mcont">
    <div class="noPrint">
        <div class="panel-group" id="accordion">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseTwo">
                            <i class="glyphicon glyphicon-record"></i>
                            Modify Filters
                        </a>
                    </h4>
                </div>
                <div id="collapseTwo" class="panel-collapse collapse">
                    <div class="panel-body wonlossFilter">
                        @Html.Partial("~/Views/Partials/_SalesForecastReport.cshtml", Model)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <button class="btn btn-default print_btn">
                <i class="glyphicon glyphicon-print"></i>
                Print
            </button>
        </div>
    </div>
    <div class="col-md-12 panel-body">
        <div class="block-flat">
            <div class="col-md-3 pull-left">
                <img src="/Home/Logo" height="50px" />
            </div>
            <div class="pull-right" style="text-align: right">
                <p>
                    <b>Sales Forecast</b>
                </p>
                <p>
                    @(String.Join(", ", ViewBag.DistrictNames))
                </p>
                <p>
                    @Model.ProjectionMonth
                </p>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
    <div class="block-flat">
        <div class="row">
            <div class="col-md-7">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="panel-title">District Forecast Versus Plan</div>
                    </div>
                    <div class="panel-body">
                        <div class="col-md-12">
                            <div id="forecastversusplan"></div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="panel-title">Plant Projections</div>
                    </div>
                    <div class="panel-body">
                        <div class="col-md-12">
                            <table class="table table-condensed table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th>Plant</th>
                                        @foreach (String month in ViewBag.PlantProjectionMonths)
                                        {
                                            <th class="right">
                                                @month
                                                @if ("backlog".Equals(month.ToLower()))
                                                {
                                                    <i class="fa fa-info-circle backlog" data-toggle="tooltip" title="Backlog includes projections for @(Model.FilterBacklogLimit?"12":"all") months following Projection Date."></i>
                                                }
                                            </th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (String plant in ViewBag.PlantProjectionPlants)
                                    {
                                        if (plant == "Total" || plant == "Budget" || (((List<RedHill.SalesInsight.DAL.DataTypes.SIPlantProjections>)ViewBag.PlantProjections).Where(x => x.PlantName == plant).Where(x => x.MonthName != "Backlog").Where(x => x.DisplayQuantity != "0").Count() > 0))
                                        {
                                            <tr class="@(plant.Replace(" ", "_"))@(plant.Equals("Total") ? " bold" : "")">
                                                <td>@plant</td>
                                                @foreach (String month in ViewBag.PlantProjectionMonths)
                                                {
                                                    <td class="right">
                                                        @(((List<RedHill.SalesInsight.DAL.DataTypes.SIPlantProjections>)ViewBag.PlantProjections).Where(m => m.MonthName == month).Where(m => m.PlantName == plant).FirstOrDefault() == null ? "0" : ((List<RedHill.SalesInsight.DAL.DataTypes.SIPlantProjections>)ViewBag.PlantProjections).Where(m => m.MonthName == month).Where(m => m.PlantName == plant).FirstOrDefault().DisplayQuantity)
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="panel-title">Segmentation Analysis</div>
                    </div>
                    <div class="panel-body">
                        <div class="col-md-12">
                            <table class="table table-condensed table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th>Market Segment</th>
                                        @foreach (String month in ViewBag.SegMonths)
                                        {
                                            <th class="right">
                                                @month
                                                @if ("backlog".Equals(month.ToLower()))
                                                {
                                                    <i class="fa fa-info-circle analysis" data-toggle="tooltip" title="Backlog includes projections for @(Model.FilterBacklogLimit?"12":"all") months following Projection Date."></i>
                                                }
                                            </th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (String segment in ViewBag.SegmentNames)
                                    {
                                        if (((List<RedHill.SalesInsight.DAL.DataTypes.SISegmentationAnalysis>)ViewBag.SegmentationAnalysis).Where(m => m.MarketSegmentName == segment).Where(x => x.MonthName != "Backlog").Where(x => x.ForecastQuantity != 0).Count() > 0)
                                        {
                                            <tr class="@(segment.Equals("Total") ? "bold" : "")">
                                                <td>@segment</td>
                                                @foreach (String month in ViewBag.SegMonths)
                                                {
                                                    <td class="right">@(((List<RedHill.SalesInsight.DAL.DataTypes.SISegmentationAnalysis>)ViewBag.SegmentationAnalysis).Where(m => m.MonthName == month).Where(m => m.MarketSegmentName == segment).Count() == 0 ? "0" : ((List<RedHill.SalesInsight.DAL.DataTypes.SISegmentationAnalysis>)ViewBag.SegmentationAnalysis).Where(m => m.MonthName == month).Where(m => m.MarketSegmentName == segment).FirstOrDefault().ForecastQuantity.ToString("N0"))</td>
                                                }
                                            </tr>
                                         } 
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="panel-title">Projection Accuracy</div>
                    </div>
                    <div class="panel-body">
                        <div class="col-md-12">
                            <table class="table table-condensed table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th class="right">Salesperson</th>
                                        <th class="right">Actual</th>
                                        <th class="right">Proj</th>
                                        <th class="right">Variance</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (RedHill.SalesInsight.DAL.DataTypes.SIProjectionAccuracy accuracy in ViewBag.ProjectionAccuracy)
                                    {
                                        if (accuracy.ForecastQuantity != 0 || accuracy.ActualQuantity != 0)
                                        {
                                            <tr class="@(accuracy.SalesStaffName.Equals("Current Month Total") ? "bold" : "")">
                                                <td class="right">@accuracy.SalesStaffName</td>
                                                <td class="right">@accuracy.ActualQuantity.ToString("###,###")</td>
                                                <td class="right">@accuracy.ForecastQuantity.ToString("###,###")</td>
                                                <td class="right Variance">@(((accuracy.ActualQuantity - accuracy.ForecastQuantity) / (1.00 * accuracy.ForecastQuantity) * 100.00).ToString("N2"))%</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="panel-title">Asset Productivity</div>
                    </div>
                    <div class="panel-body">
                        <div class="col-md-12">
                            <table class="table table-condensed table-striped table-bordered">
                                <thead>
                                    <tr>
                                        @foreach (String header in ViewBag.AssetProductivity.Headers)
                                        {
                                            <th class="right">@header</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (List<String> row in ViewBag.AssetProductivity.Cells)
                                    {
                                        <tr class="@(row.First().Equals("Total") ? "bold" : "")">
                                            @foreach (String cell in row)
                                            {
                                                <td class="right">@cell</td>
                                            }
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="panel-title">Current Month Market Segmentation</div>
                    </div>
                    <div class="panel-body">
                        <div class="col-md-12">
                            <div id="marketShareSummary"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <style type="text/css">
        @@page {
            margin: 0.5cm;
            min-width: 768px;
        }

        @@media print {
            .noPrint {
                display: none;
            }

            body {
                margin: 0;
                padding: 0 !important;
                min-width: 768px;
                font-size: 10px;
            }

            .container {
                width: auto;
                min-width: 750px;
            }
        }
    </style>
    <script type="text/javascript" src="~/Scripts/jquery.mtz.monthpicker.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $('.datepicker').datepicker({
                format: "M, yyyy",
                viewMode: "months",
                minViewMode: "months"
            }).on("changeDate", function (e) {
                $("#filter-form").submit();
                $(this).datepicker('hide');
            });

            $(".print_btn").click(function () {
                $("#Print").val("Print");
                $("form").attr("target", "_blank");
                $("form").not("#support_request_form").submit();
                $("#Print").val("");
                $("form").attr("target", "_self");
            });

            $(".Variance td,.Variance_CYDs td,td.Variance").each(function (index, item) {
                try {
                    d = parseFloat($(item).text().replace("%", ""));
                    console.log(d);
                    if (!isNaN(d)) {
                        if (d < 0) {
                            $(item).addClass("red");
                        } else {
                            $(item).addClass("green");
                        }
                    }
                }
                catch (ex) {
                    console.log(ex);
                }
            });

            var formatter = new google.visualization.NumberFormat({ pattern: '###,###' });

            function drawChart() {
                var data = google.visualization.arrayToDataTable(
                    @(Html.Raw(ViewBag.CurrentSegments))
                    );

                formatter.format(data, 1);

                var options = {
                    title: '',
                    height: 400,
                    chartArea: { left: 0, width: 400, top: 10 },
                    legend: { position: "right", maxlines: 3 }
                };

                var chart = new google.visualization.PieChart(document.getElementById('marketShareSummary'));
                chart.draw(data, options);
            }
            google.setOnLoadCallback(drawChart);

            @*function drawBarChart() {
                console.log(@Html.Raw(Json.Encode(ViewBag.ForecastPlans)));
                // Some raw data (not necessarily accurate)
                var data = google.visualization.arrayToDataTable(@Html.Raw(Json.Encode(ViewBag.ForecastPlans)));
                //console.log("#####");
                //console.log(data);
                formatter.format(data, 1);
                formatter.format(data, 2);

                var options = {
                    title: '',
                    hAxis: { title: "Month" },
                    seriesType: "bars",
                    series: {1: { type: "line" } },
                    legend: { position: "top" }
                };

                var chart = new google.visualization.ComboChart(document.getElementById('forecastversusplan'));
                chart.draw(data, options);
            }*@
                     function drawBarChart() {
                // Some raw data (not necessarily accurate)
                var data = google.visualization.arrayToDataTable(@Html.Raw(ViewBag.ForecastPlans));

                formatter.format(data, 1);
                formatter.format(data, 2);

                var options = {
                    title: '',
                    hAxis: { title: "Month" },
                    seriesType: "bars",
                    series: { 2: {color:'green'} ,1: { type: "line" } },
                    legend: { position: "top" }
                };

                var chart = new google.visualization.ComboChart(document.getElementById('forecastversusplan'));
                chart.draw(data, options);
            }
            google.setOnLoadCallback(drawBarChart);
        });
        //([
        //    [
        //        "Month",
        //        "Projection",
        //        "Budget",
        //        "Actual"

        //    ],
        //    [
        //        "Apr",
        //        -1,
        //        173770.0, 12333
        //    ],
        //    [
        //        "May",
        //        187435,
        //        178647.0, ""],
        //    [
        //        "Jun",
        //        193631,
        //        171584.0, ""
        //    ]

        //]);
    </script>
}