@model RedHill.SalesInsight.Web.Html5.Models.ContractorView


@{
    ViewBag.Title = (Model.ContractorId == 0 ? "New" : Model.Name );
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-head">
    <h2>
        @if (Model.ContractorId > 0)
        {
            <span>Edit GC</span>
        }
        else
        {
            <span>Add GC</span>
        }
    </h2>
    <ol class="breadcrumb">
        <li><a href="/Home/Index">Home</a></li>
        <li><a href="/Home/Settings">Settings</a></li>
        <li><a href="/Home/Companies">Manage Company Settings</a></li>
        <li><a href="/Home/Companies/contractors">GCs</a></li>
        <li class="active">@(Model.ContractorId == 0 ? "New" : Model.Name )</li>
    </ol>
</div>
<div class="cl-mcont">
    <div class="block-flat">
    @using (Html.BeginForm("UpdateContractor", "Home", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.ValidationSummary(true)
        <div>
            @Html.HiddenFor(model => model.ContractorId, new { @class = "form-control" })
            @Html.HiddenFor(model => model.CompanyId, new { @class = "form-control" })
            @Html.HiddenFor(model => model.ProjectId, new { @class = "form-control" })
            <div class="form-group">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model.Name)
                </div>
                <div class="col-md-10">

                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Name, string.Empty, new { @class = "help-inline" })
                </div>
            </div>
            <div class="form-group">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model.Address1)
                </div>
                <div class="col-md-10">

                    @Html.TextBoxFor(model => model.Address1, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Address1, string.Empty, new { @class = "help-inline" })
                </div>
            </div>
            <div class="form-group">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model.Address2)
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Address2, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address2, string.Empty, new { @class = "help-inline" })
                </div>
            </div>
            <div class="form-group">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model.Address3)
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Address3, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address3, string.Empty, new { @class = "help-inline" })
                </div>
            </div>
            <div class="form-group">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model.City)
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.City, string.Empty, new { @class = "help-inline" })
                </div>
            </div>
            <div class="form-group">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model.State)
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.State, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.State, string.Empty, new { @class = "help-inline" })
                </div>
            </div>
            <div class="form-group">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model.Zip)
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Zip, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Zip, string.Empty, new { @class = "help-inline" })
                </div>
            </div>
            <div class="form-group">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model.Phone)
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Phone, string.Empty, new { @class = "help-inline" })
                </div>
            </div>
            <div class="form-group">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model.Fax)
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Fax, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Fax, string.Empty, new { @class = "help-inline" })
                </div>
            </div>
            <div class="form-group">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model.Email)
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email, string.Empty, new { @class = "help-inline" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10 col-sm-offset-2">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.Active)
                            @Html.DisplayNameFor(model => model.Active)
                            @Html.ValidationMessageFor(model => model.Active, string.Empty, new { @class = "help-inline" })
                        </label>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    <input type="submit" value="@(Model.ContractorId > 0 ? "Update" : "Create")" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
        </div>
</div>

@section Scripts {

    <script>

        $.validator.setDefaults({
            highlight: function (element) {
                $(element).closest(".control-group").addClass("error");
            },
            unhighlight: function (element) {
                $(element).closest(".control-group").removeClass("error");
            }
        });
    </script>
}



