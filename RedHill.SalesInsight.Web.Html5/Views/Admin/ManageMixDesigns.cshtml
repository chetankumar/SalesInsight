@model RedHill.SalesInsight.Web.Html5.Models.ManageMixDesign
@{
    ViewBag.Title = "Mix Designs";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool aujsAPIEnabled = (ViewBag.AUJSAPIEnabled != null && ViewBag.AUJSAPIEnabled == true);
    ViewBag.UsingMultiselect = true;
}
<div class="page-head">
    <h2>Manage Sales Infrastructure</h2>
    <ol class="breadcrumb">
        <li><a href="/Home/Index">Home</a></li>
        <li><a href="/Home/Settings">Settings</a></li>
        <li><a href="/Home/Companies">Manage Sales Infrastructure</a></li>
        <li class="active">Mix Designs</li>
    </ol>
</div>
<div class="cl-mcont">
    @Html.Partial("_CompanyTabs", "mixdesigns")
    <div class="tab-content">
        <div class="panel-body well">
            @using (@Html.BeginForm("ManageMixDesigns", "Admin", FormMethod.Post, new { @id = "FilterForm" }))
            {
                <div class="col-md-3">
                    @Html.HiddenFor(m => m.CurrentPage)
                    @Html.HiddenFor(m => m.RowsPerPage)
                    <div class="form-inline">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(x => x.ShowInactives) Inactives
                            </label>
                        </div>
                        &nbsp;&nbsp;
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(x => x.ShowWithNoFormulation) No Formulation
                            </label>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <select class="multiselect udf-toggle" multiple="multiple" placeholder="Add Columns">
                        <option value="MD1" @(Model.MD1Show ? "selected" : "")>@Model.MD1Text</option>
                        <option value="MD2" @(Model.MD2Show ? "selected" : "")>@Model.MD2Text</option>
                        <option value="MD3" @(Model.MD3Show ? "selected" : "")>@Model.MD3Text</option>
                        <option value="MD4" @(Model.MD4Show ? "selected" : "")>@Model.MD4Text</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <div class="input-group">
                        @Html.TextBoxFor(x => x.SearchTerm, new { @class = "form-control" })
                        <div class="input-group-btn">
                            <button class="btn btn-primary reset_page">
                                <span class="glyphicon glyphicon-search"></span>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 text-center">
                    @if (ViewBag.AccessRule.CanUploadMixesFormulations)
                    { <button class="btn btn-primary btn-sm" type="button" data-toggle="modal" @(aujsAPIEnabled ? "disabled" : "") data-target="#upload_mix_designs"><i class="fa fa-fw fa-upload"></i>Mix Designs</button>

                        <button class="btn btn-primary btn-sm" type="button" data-toggle="modal" @(aujsAPIEnabled ? "disabled" : "") data-target="#upload_mix_formulations"><i class="fa fa-fw fa-upload"></i>Mix formulations</button>
                    }
                </div>
                <div class="modal md-modal colored-header fade" data-backdrop="static" id="change_settings_modal">
                    <div class="modal-dialog">
                        <div class="md-content modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-backdrop="static" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <h4 class="modal-title">User Defined Fields</h4>
                            </div>
                            <div class="modal-body form form-horizontal">
                                <div class="form-group">
                                    <label class="col-md-3 control-label">UDF 1</label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(x => x.MD1Text, new { @class = "form-control" })
                                    </div>
                                    <div class="col-md-4">
                                        <p class="form-control-static">
                                            @Html.CheckBoxFor(x => x.MD1Show)
                                        </p>
                                    </div>
                                    <div style="clear: both"></div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">UDF 2</label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(x => x.MD2Text, new { @class = "form-control" })
                                    </div>
                                    <div class="col-md-4">
                                        <p class="form-control-static">
                                            @Html.CheckBoxFor(x => x.MD2Show)
                                        </p>
                                    </div>
                                    <div style="clear: both"></div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">UDF 3</label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(x => x.MD3Text, new { @class = "form-control" })
                                    </div>
                                    <div class="col-md-4">
                                        <p class="form-control-static">
                                            @Html.CheckBoxFor(x => x.MD3Show)
                                        </p>
                                    </div>
                                    <div style="clear: both"></div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3 control-label">UDF 4</label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(x => x.MD4Text, new { @class = "form-control" })
                                    </div>
                                    <div class="col-md-4">
                                        <p class="form-control-static">
                                            @Html.CheckBoxFor(x => x.MD4Show)
                                        </p>
                                    </div>
                                    <div style="clear: both">
                                        @Html.HiddenFor(x => x.SortColumn)
                                        @Html.HiddenFor(x => x.SortDirection)
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default btn-flat md-close" data-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary btn-flat">Apply</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    @if (ViewBag.AccessRule.HasMixDesignsAccess == SIRolePermissionLevelConstants.FULL_ACCESS)
                    {
                        <a type="button" class="btn-sm btn btn-primary" href="/Admin/AddEditStandardMix" @(aujsAPIEnabled ? "disabled" : "")><span class="glyphicon glyphicon-plus"></span>Standard Mix</a>
                    }
                </div>
            }
        </div>
        <table class="table table-bordered table-striped mix_design">
            <thead>
                <tr>
                    <th class="sortable" data-sort="MixNum">Mix Num</th>
                    <th class="sortable" data-sort="MixDesc">Mix Desc</th>
                    <th class="sortable" data-sort="SalesDesc">Sales Desc</th>
                    <th class="sortable" data-sort="PSI">PSI</th>
                    <th class="sortable" data-sort="Air">Air</th>
                    <th class="sortable" data-sort="Slump">Slump</th>
                    <th class="sortable" data-sort="Plant">Plant</th>
                    <th class="sortable" data-sort="AshPercentage">Ash %</th>
                    <th class="sortable" data-sort="FineAggPercentage">Fine Agg %</th>
                    <th class="sortable" data-sort="Sacks">Sacks</th>
                    <th class="sortable" data-sort="Cost">Cost</th>
                    <th class="sortable" data-tag="MD1" data-sort="MD1" style="@(Model.MD1Show ? "" : "display: none")">@Model.MD1Text</th>
                    <th class="sortable" data-tag="MD2" data-sort="MD2" style="@(Model.MD2Show ? "" : "display: none")">@Model.MD2Text</th>
                    <th class="sortable" data-tag="MD3" data-sort="MD3" style="@(Model.MD3Show ? "" : "display: none")">@Model.MD3Text</th>
                    <th class="sortable" data-tag="MD4" data-sort="MD4" style="@(Model.MD4Show ? "" : "display: none")">@Model.MD4Text</th>
                    <th class="sortable" data-sort="Active">Active</th>
                        <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (RedHill.SalesInsight.DAL.DataTypes.SIStandardMixPlant mp in Model.StandardMixes)
                {
                    <tr>
                        <td>@mp.Mix.Number</td>
                        <td>@mp.Mix.Description</td>
                        <td>@mp.Mix.SalesDesc</td>
                        <td>@mp.Mix.PSI</td>
                        <td>@mp.Mix.Air</td>
                        <td>@mp.Mix.Slump</td>
                        <td>@(mp.Formulation != null ? mp.Formulation.Plant.Name : "")</td>
                        <td>@(mp.Formulation != null ? (mp.Formulation.AshPercentage.GetValueOrDefault()).ToString("N0") + "%" : "")</td>
                        <td>@(mp.Formulation != null ? (mp.Formulation.FineAggPercentage.GetValueOrDefault()).ToString("N0") + "%" : "")</td>
                        <td>@(mp.Formulation != null ? (mp.Formulation.Sacks.GetValueOrDefault()).ToString("N1") : "")</td>
                        <td>$@mp.Cost.ToString("N2")</td>
                        <td data-tag="MD1" style="@(Model.MD1Show ? "" : "display: none")">@mp.Mix.MD1</td>
                        <td data-tag="MD2" style="@(Model.MD2Show ? "" : "display: none")">@mp.Mix.MD2</td>
                        <td data-tag="MD3" style="@(Model.MD3Show ? "" : "display: none")">@mp.Mix.MD3</td>
                        <td data-tag="MD4" style="@(Model.MD4Show ? "" : "display: none")">@mp.Mix.MD4</td>
                        <td>
                            @Html.Partial("_Tick", mp.Mix.Active.GetValueOrDefault(false))
                        </td>

                        <td>
                            <a href="/Admin/AddEditStandardMix/@mp.Mix.Id" class="btn btn-xs btn-primary"><span class="glyphicon glyphicon-edit"></span>Mix</a>
                            @if (mp.Formulation != null)
                            {
                            <a href="/Admin/AddEditMixFormulation/@mp.Mix.Id?plant=@mp.Formulation.PlantId" class="btn btn-xs btn-primary"><span class="glyphicon glyphicon-edit"></span>Formulation</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-12">
                    <span>@((Model.CurrentPage) * Model.RowsPerPage + 1) to @((Model.CurrentPage + 1) * Model.RowsPerPage) of @(Model.NumRows) records</span>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="pull-left">
                        <div class="form-inline">
                            <select id="rows_per_page" class="form-control">
                                <option value="1" @(Model.RowsPerPage == 1 ? "selected=selected" : "")>1</option>
                                <option value="10" @(Model.RowsPerPage == 10 ? "selected=selected" : "")>10</option>
                                <option value="25" @(Model.RowsPerPage == 25 ? "selected=selected" : "")>25</option>
                                <option value="50" @(Model.RowsPerPage == 50 ? "selected=selected" : "")>50</option>
                                <option value="100" @(Model.RowsPerPage == 100 ? "selected=selected" : "")>100</option>
                            </select>
                            <label class="control-label">Records per page</label>
                        </div>
                    </div>
                    <div class="pull-right">
                        <ul class="pagination">
                            <li class=""><a href="#" class="pageNumber" data-page-num="1"><span>First</span></a></li>
                            @if (Model.CurrentPage > 0)
                            {
                                <li class="previous"><a href="#"><span class="glyphicon glyphicon-chevron-left"></span><span>Previous</span></a></li>
                            }
                            @if (Model.CurrentPage > 4)
                            {
                                ViewBag.first = Model.CurrentPage - 4;
                            }
                            else
                            {
                                ViewBag.first = 1;
                            }
                            @{ViewBag.last = (int)(Model.NumRows / Model.RowsPerPage) + 1;}
                            @if (Model.CurrentPage + 4 < ViewBag.last)
                            {
                                ViewBag.actualLast = Model.CurrentPage + 4;
                            }
                            else
                            {
                                ViewBag.actualLast = ViewBag.last;
                            }

                            @for (int i = ViewBag.first; i <= ViewBag.actualLast; i++)
                            {
                                <li class="@(Model.CurrentPage + 1 == i ? "active" : "")"><a href="#" class="pageNumber" data-page-num="@i">@(i)</a></li>
                            }
                            @if (Model.CurrentPage < ViewBag.last)
                            {
                                <li class="next"><a href="#"><span>Next</span> <span class="glyphicon glyphicon-chevron-right"></span></a></li>
                            }
                            <li class=""><a href="#" class="pageNumber" data-page-num="@ViewBag.last"><span>Last</span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("UploadMixDesigns", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="modal md-modal colored-header fade" data-backdrop="static" id="upload_mix_designs">
        <div class="modal-dialog">
            <div class="md-content modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-backdrop="static" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Upload Mix Designs</h4>
                </div>
                <div class="modal-body form">
                    <div class="alert alert-info">
                        Please upload the Excel File in <a class="label label-primary" href="/Admin/MixDesignsExcel">this format</a>. Once uploaded, the application will return the excel to you with the import success summary against each row.
                    </div>
                    <div class="form-group">
                        <input type="file" name="excel" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default btn-flat md-close" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary btn-flat">Upload</button>
                </div>
            </div>
        </div>
    </div>
}
@using (Html.BeginForm("UploadMixFormulations", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="modal md-modal colored-header fade" data-backdrop="static" id="upload_mix_formulations">
        <div class="modal-dialog">
            <div class="md-content modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-backdrop="static" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Upload Mix Formulations</h4>
                </div>
                <div class="modal-body form">
                    <div class="alert alert-info">
                        Please upload the Excel File in <a class="label label-primary" href="/Admin/MixFormulationExcel">this format</a>. Once uploaded,
                        the application will return the Excel file to you with the import success summary against each row.
                    </div>
                    <div class="form-group">
                        <input type="file" name="excel" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default btn-flat md-close" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary btn-flat">Upload</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {

            $("th[data-sort]").click(function () {
                column = $(this).data("sort");
                current_col = $("#SortColumn").val();
                direction = $("#SortDirection").val();
                if (current_col == column) {
                    if (direction == "asc") {
                        $("#SortDirection").val("desc");
                    } else {
                        $("#SortDirection").val("asc");
                    }
                } else {
                    $("#SortDirection").val("asc");
                }
                $("#SortColumn").val(column);
                $("#FilterForm").submit();
            });

            $("#ShowInactives").change(function (e) {
                $("#FilterForm").submit();
            });
            $("#ShowWithNoFormulation").change(function (e) {
                $("#FilterForm").submit();
            });

            $("#rows_per_page").change(function (e) {
                $("#RowsPerPage").val($(this).val());
                $("#CurrentPage").val(0);
                $("#FilterForm").submit();
            });

            $(".reset_page").click(function () {
                $("#CurrentPage").val(0);
                $("#FilterForm").submit();
            });

            $("#ShowInactives").change(function (e) {
                $("#filter-form").submit();
            });

            $(".previous a").click(function (e) {
                current = parseInt($("#CurrentPage").val());
                if (current > 0) {
                    $("#CurrentPage").val(current - 1);
                    $("#FilterForm").submit();
                }
                return false;
            });

            $("a.pageNumber").click(function (e) {
                start = (parseInt($(this).data("page-num")) - 1);
                if (start >= 0) {
                    $("#CurrentPage").val(start);
                    $("#FilterForm").submit();
                }
                return false;
            });

            $(".next a").click(function (e) {
                current = parseInt($("#CurrentPage").val());
                if (current + 1 < eval(@ViewBag.Last)) {
                    $("#CurrentPage").val(current + 1);
                    $("#FilterForm").submit();
                }
                return false;
            });

            $(".udf-toggle").change(function (e) {
                var data = {};

                $($(this).find("option")).each(function (i, e) {
                    data[$(e).val()] = $(e).is(":selected");
                    var items = $(".mix_design th[data-tag='" + $(e).val() + "'], .mix_design td[data-tag='" + $(e).val() + "']");
                    if ($(e).is(":selected")) {
                        items.show();
                    } else {
                        items.hide();
                    }
                });

                $.ajax({
                    url: '/Admin/UpdateUDFDisplay',
                    method: 'POST',
                    data: { md1: data.MD1, md2: data.MD2, md3: data.MD3, md4: data.MD4 },
                    success: function (data) {
                        console.log(data);
                    }
                });
            });
        });
    </script>
}




