@model RedHill.SalesInsight.Web.Html5.Models.User
@using RedHill.SalesInsight.Web.Html5.Helpers;
@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var company = ConfigurationHelper.Company;
}
<div class="page-head">
    <h2>Edit User </h2>
    <ol class="breadcrumb">
        <li><a href="/Home/Index">Home</a></li>
        <li><a href="/Home/Settings">Settings</a></li>
        <li><a href="@Url.Action("Users", "Home")">Users</a></li>
        <li class="active">@Model.Username</li>
    </ol>
</div>
<div class="cl-mcont">
    <div class="block-flat">
        @using (Html.BeginForm("EditUser", "Home", FormMethod.Post, new { @id = "user_form", @class = "form-horizontal", @role = "form", @autocomplete = "off" }))
        {
            @Html.ValidationSummary(false)
            <div>
                @Html.HiddenFor(model => model.Guid)
                <div class="form-group">
                    <div class="col-sm-3 control-label">
                        @Html.LabelFor(model => model.Name)
                    </div>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                        <label class="field_error"></label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3 control-label">
                        @Html.LabelFor(model => model.Username)
                    </div>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(model => model.Username, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3 control-label">
                        @Html.LabelFor(model => model.Email)
                    </div>
                    <div class="col-sm-6">

                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                        <label class="field_error">@Html.ValidationMessageFor(model => model.Email)</label>
                    </div>
                </div>
                <div class="form-group password_block" style="display: none;">
                    <div class="col-sm-3 control-label">
                        @Html.LabelFor(model => model.Password)
                    </div>
                    <div class="col-sm-6">
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", @autocomplete = "off" })
                        <label class="field_error">@Html.ValidationMessageFor(model => model.Password)</label>
                    </div>
                </div>

                <div class="form-group password_block" style="display: none;">
                    <div class="col-sm-3 control-label">
                        @Html.LabelFor(model => model.PasswordConfirmation)
                    </div>
                    <div class="col-sm-6">
                        @Html.PasswordFor(model => model.PasswordConfirmation, new { @class = "form-control", @autocomplete = "off" })
                        <label class="field_error">@Html.ValidationMessageFor(model => model.PasswordConfirmation)</label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3 control-label">
                        @Html.LabelFor(model => model.Role)
                    </div>
                    <div class="col-sm-6">
                        @Html.DropDownListFor(model => model.Role, Model.AllRoles, new { @class = "form-control" })
                        <label class="field_error">@Html.ValidationMessageFor(model => model.Role)</label>
                    </div>
                </div>
                @if (ConfigurationHelper.AggregateEnabled == true || ConfigurationHelper.BlockEnabled == true)
                {
                    <div class="form-group">
                        <div class="col-sm-3 control-label">
                            @Html.LabelFor(model => model.PostedProductIds)
                        </div>
                        <div class="col-sm-6">
                            @Html.CheckBoxListFor(model => model.PostedProductIds, model => model.AvailableDefaultQuoteProducts, item => item.Value, item => item.Text, item => item.Selected, Position.Vertical)
                            <label class="field_error">@Html.ValidationMessageFor(model => model.PostedProductIds)</label>
                        </div>
                    </div>
                }
                else
                {
                    @Html.HiddenFor(model => model.PostedProductIds,new { @Value="1"})
                }
                <div class="form-group">
                    <div class="col-sm-3 control-label">
                        @Html.LabelFor(model => model.Company)
                    </div>
                    <div class="col-sm-6">
                        @Html.DropDownListFor(model => model.Company, Model.AllCompanies, new { @class = "form-control" })
                        <label class="field_error">@Html.ValidationMessageFor(model => model.Company)</label>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-3 control-label">
                        @Html.LabelFor(model => model.Districts)
                    </div>
                    <div class="col-sm-6">
                        @Html.CheckBoxListFor(model => model.Districts, model => model.AllDistricts, d => d.DistrictId, d => d.Name, d => d.IsSelected, Position.Vertical)
                        <label class="field_error">@Html.ValidationMessageFor(model => model.Districts)</label>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-sm-3 control-label">
                        Project Entry Form (Default Recipient)
                    </label>
                    <div class="col-sm-6">
                        <p class="form-control-static">
                            @Html.CheckBoxFor(x => x.QuotationAccess)
                        </p>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-sm-3 control-label">
                        Quotation Authorization Limit
                    </label>
                    <div class="col-sm-6">
                        <span class="input-group">
                            @Html.TextBoxFor(x => x.QuotationLimit, "{0:0,0}", new { @class = "form-control comma_field" })
                            <span class="input-group-addon">@company.DeliveryQtyUomPlural</span>
                        </span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-6 col-sm-offset-3">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(model => model.Active)
                                @Html.DisplayNameFor(model => model.Active)
                            </label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3 ">
                    </div>
                    <div class="col-sm-6">
                        <input type="submit" value="Save" class="btn btn-primary remove_commas_btn" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="modal fade" id="max_user_exceed">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">All available user seats currently occupied. Additional user seats may be added by contacting your subscription sales associate.</h4>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function (e) {

        $("#Active").click(function () {
            var maxUserExempt = '@ViewBag.IsMaxUsersExceed';
            var active = '@Model.Active';
            if (maxUserExempt == 'True' && active == 'False') {
                $("#max_user_exceed").modal("show");
                $(this).attr("checked", false);
            }
        });

        var usersAccess = '@(ViewBag.AccessRule.HasUsersAccess == SIRolePermissionLevelConstants.FULL_ACCESS)';
        if (usersAccess == 'False')
        { disableEveryThing(); }

        if ($("#ChangePassword").is(":checked")) {
            $(".password_block").show();
        }

        $("form#user_form").on("submit", function (e) {
            if ($("input[type='checkbox'][name='PostedProductIds']").length != 0) {
                if (!$("[name='PostedProductIds']:checked").length) {
                    $("[data-valmsg-for='PostedProductIds']").html("At least one Default Quote Product must be selected");
                    $("[name='PostedProductIds']").focus();
                    return false;
                }
            }
        });

        $("#ChangePassword").on("change", function (e) {
            if ($(this).is(":checked")) {
                $(".password_block").slideDown();
            } else {
                $(".password_block").slideUp();
            }
        });
    });
</script>
