@model RedHill.SalesInsight.Web.Html5.Models.QuotationStandardMixView
@using RedHill.SalesInsight.Web.Html5.Helpers;
@{
    if (Model.QuotationMixId > 0)
    {
        ViewBag.Title = "Edit Standard Mix";
    }
    else
    {
        ViewBag.Title = "Add Standard Mix";
    }
    ViewBag.UsingMultiselect = true;
    ViewBag.UsingDataTable = true;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var company = ConfigurationHelper.Company;
}

<div class="page-head">
    <h2>
        @if (Model.QuotationMixId > 0)
        {
            <span>Edit Standard Mix</span>
        }
        else
        {
            <span>Add Standard Mix</span>
        }
    </h2>
    <ol class="breadcrumb">
        <li><a href="/Home/Index">Home</a></li>
        <li><a href="/Quote/Index">Quotations</a></li>
        @if (Model.Profile.ProjectId > 0)
        {
            <li><a href="/Home/EditProject/@Model.Profile.ProjectId">@Model.Profile.ProjectName</a></li>
        }
        <li><a href="/Quote/AddEditQuote/@Model.QuotationId">Quote# @Model.QuotationId</a></li>
        @if (Model.QuotationMixId > 0)
        {
            <li>Mix# @Model.MixNumber</li>
        }
        else
        {
            <li>New</li>
        }
</div>
<div class="cl-mcont">
    @Html.Partial("_ErrorView")
    <div class="block-flat">
        @if (Model.QuotationId > 0)
        {
            <div class="well padding-0">
                <div class="col-md-8">
                    @Html.Partial("_BasicQuotationProfile", Model.Profile)
                </div>
                <div class="col-md-4">

                </div>
                <div style="clear:both"></div>
            </div>
        }
        <div class="panel-body row">
            <div class="col-md-8">
                @using (Html.BeginForm("CreateQuotationStandardMix", "Quote", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.HiddenFor(x => x.QuotationId)
                    @Html.HiddenFor(x => x.QuotationMixId)
                    @Html.HiddenFor(x => x.PlantId)
                    <fieldset>
                        <legend>Mix</legend>
                    </fieldset>
                    <div class="form-group">
                        <label class="control-label col-md-3">Mix Selection</label>
                        <div class="col-md-9">
                            <div class="input-group">
                                @Html.DropDownListFor(x => x.StandardMixId, Model.ChooseStandardMix, "Choose a Mix", new { @class = "form-control standard_mix_field multiselect" })
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#SearchMixFormulationModal">
                                        <i class="glyphicon glyphicon-search"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                    if (Model.QuotationMixId > 0)
                    {
                        <div class="form-group">
                            <label class="control-label col-md-3">Quoted Description</label>
                            <div class="col-md-9">
                                <div class="input-group">
                                    @Html.TextBoxFor(x => x.QuotedDescription, new { @class = "form-control" })
                                    <span class="input-group-btn">
                                        <a title="reset" href="/Quote/RefreshQuotationMixDescription/@Model.QuotationMixId" class="btn btn-primary">
                                            <i class="glyphicon glyphicon-refresh"></i>
                                        </a>
                                    </span>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        <label class="control-label col-md-3">Volume</label>
                        <div class="col-md-9">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.Volume, new { @class = "form-control comma_field volume_field" })
                                <span class="input-group-addon">
                                    @company.DeliveryQtyUomPlural
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Price</label>
                        <div class="col-md-9">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.Price, "{0:N2}", new { @class = "form-control comma_field price_field" })
                                @Html.HiddenFor(x => x.MixCost)
                                <span class="input-group-addon">
                                    $/@company.DeliveryQtyUomSingular
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Average Load</label>
                        <div class="col-md-9">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.AverageLoad, new { @class = "form-control avg_load_field" })
                                <span class="input-group-addon">
                                    @company.DeliveryQtyUomPlural
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Unload</label>
                        <div class="col-md-9">
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.Unload, new { @class = "form-control unload_field" })
                                <span class="input-group-addon">
                                    Minutes
                                </span>
                                @Html.HiddenFor(x => x.Spread)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Private Notes</label>
                        <div class="col-md-9">
                            @Html.TextAreaFor(x => x.PrivateNotes, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Public Comments (on quote)</label>
                        <div class="col-md-9">
                            @Html.TextAreaFor(x => x.PublicNotes, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3"></label>
                        <div class="col-md-9">
                            <button type="submit" class="btn btn-primary remove_commas_btn">Save</button>
                        </div>
                    </div>
                }
            </div>
            <div class="col-md-4 ">
                <div class="form-horizontal">
                    <fieldset>
                        <legend>
                            Calculations
                        </legend>
                        <div class="well">
                            <div class="form-group">
                                <label class="control-label col-md-4">Mix Cost</label>
                                <div class="col-md-6">
                                    <p class="form-control-static mix_cost_info_box">
                                        $@Model.MixCost.ToString("N2")/@company.DeliveryQtyUomSingular
                                    </p>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-4">Add-On Cost</label>
                                <div class="col-md-6">
                                    <p class="form-control-static addon_cost_info_box">
                                        $@Model.AddOnCost.ToString("N2")/@company.DeliveryQtyUomSingular
                                    </p>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-4">Spread</label>
                                <div class="col-md-6">
                                    <p class="form-control-static spread_info_box">
                                        $@Model.Spread.ToString("N2")/@company.DeliveryQtyUomSingular
                                    </p>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-4">Contribution</label>
                                <div class="col-md-4">
                                    <p class="form-control-static contribution_info_box">
                                        $@Model.Contribution.ToString("N2")/@company.DeliveryQtyUomSingular
                                    </p>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-4">Profit</label>
                                <div class="col-md-4">
                                    <p class="form-control-static  profit_info_box">
                                        $@Model.Profit.ToString("N2")/@company.DeliveryQtyUomSingular
                                    </p>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>
        @if (Model.QuotationMixId > 0)
        {
            <div class="panel-body">
                <fieldset>
                    <legend>Add/Update Add-On</legend>
                </fieldset>
                @using (Html.BeginForm("SaveMixLevelAddon", "Quote", FormMethod.Post, new { @class = "form-inline" }))
                {
                    if (TempData["AddonError"] != null)
                    {
                        <div class="alert alert-danger">
                            @TempData["AddonError"]
                        </div>
                    }
                    <div class="form-group">
                        @Html.HiddenFor(x => x.QuotationId)
                        @Html.HiddenFor(x => x.QuotationMixId)
                        @Html.HiddenFor(x => x.SelectedAddon.Id)
                        <label class="control-label">Add-On</label>
                        @Html.DropDownListFor(x => x.SelectedAddon.AddonId, Model.SelectedAddon.ChooseActiveAddon(Model.QuotationMixId), new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label class="control-label">Quantity</label>
                        @Html.TextBoxFor(x => x.SelectedAddon.Quantity, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <button class="btn btn-primary" type="submit">Save</button>
                    </div>
                }
            </div>
            <div class="no-more-tables">
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th> Description</th>
                            <th> Code</th>
                            <th> Quantity </th>
                            <th> Cost</th>
                            <th> Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (RedHill.SalesInsight.DAL.MixLevelAddon mixAddon in Model.MixLevelAddons)
                        {
                            <tr>
                                <td data-title="Description">@mixAddon.Addon.Description</td>
                                <td data-title="Code">@mixAddon.Addon.Code</td>
                                <td data-title="Quantity">@mixAddon.Quantity</td>
                                <td data-title="Cost">$@(mixAddon.Cost * (decimal)mixAddon.Quantity.GetValueOrDefault(0)) (@@ $@mixAddon.Cost / quantity)</td>
                                <td data-title="Actions">
                                    <a href="/Quote/EditMixLevelAddon/@mixAddon.Id" class="btn btn-primary btn-xs">Edit</a>
                                    <a href="/Quote/DeleteMixLevelAddon/@mixAddon.Id" data-confirm="Are you sure?" class="btn btn-danger btn-xs">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>
<div id="SearchMixFormulationModal" class="modal fade" role="dialog">
    <div class="modal-dialog search-mix-modal modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Search Mix Formulations</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("_SearchMixFormulations")
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
@section Scripts{
    <link href="~/Content/no-more-tables.css" rel="stylesheet" />
    <script type="text/javascript" src="~/Scripts/search_mix_formulations.js"></script>
    <script type="text/javascript">
        var quotationId = @Model.QuotationId;
        var quoteMixId = @Model.QuotationMixId;
        var addonCost = @Model.AddOnCost;
        var mixCost = @Model.MixCost;

        var pricing_plant_id = @Model.PlantId;
        var pricing_month = new Date(@Model.PricingMonth.Value.Year,@Model.PricingMonth.Value.Month,@Model.PricingMonth.Value.Day);
        var formulation_data = null;  // Container for the formulations json data.

        function update_standard_mix_defaults()
        {
            element = $(".standard_mix_field");
            smId = element.val();

            $.get("/Quote/FindStandardMixCost",{"id":quotationId,"quoteMixId":quoteMixId,"standardMixId":smId,"addonCost":addonCost},function(data){
                if (data == "error"){
                    alert("Error while calculating Mix Cost. Please check the quote's project and plant fields.");
                }else{
                    obj = JSON.parse(data);
                    price = obj["price"].replace(/,/g, '');
                    price = parseFloat(price);
                    $("#QuotedDescription").val(obj["name"]);
                    if (price == 0){
                        alert("The mix cost is 0, and cannot be used. Please check the cost setup, and quotation setup");
                        element.val("");
                    }else{
                        mixCost = parseFloat(obj["mixCost"]);
                        $(".mix_cost_info_box").text("$"+obj["mixCost"]+"/@company.DeliveryQtyUomSingular");
                        $(".price_field").val(obj["price"]).trigger("blur");
                    }
                }
            });
        }

        function quick_add_mix(mixFormulationId){
            fskId = null;
            params = {formulationId:mixFormulationId}
            $.get("/Quote/GetStandardMixFromFormulation",params,function(data){
                sm = JSON.parse(data);
                $(".standard_mix_field").val(sm["Id"]);
                $(".standard_mix_field").multiselect("rebuild");
                update_standard_mix_defaults();
                $("#SearchMixFormulationModal").modal("hide");
            });
        }

        $(document).ready(function () {
            var approved = '@(Model.Profile.Status == "APPROVED")';
            var editEnabled = '@Model.Profile.EnableEdit';
            if(approved == 'True' && editEnabled == 'False')
            {
                $("input,select,button,textarea").prop("disabled",true).attr("title","Cannot change since the quotation is approved");
                $(".btn").hide();
            }

            $(".standard_mix_field").change(function () {
                update_standard_mix_defaults();
            });

            $(".volume_field, .price_field, .avg_load_field, .unload_field").blur(function(){
                volume = $(".volume_field").val().replace(/,/g,'');
                price = $(".price_field").val().replace(/,/g,'');
                avg_load = $(".avg_load_field").val().replace(/,/g,'');
                unload = $(".unload_field").val().replace(/,/g,'');
                $.get("/Quote/CalculateMixMetrics",{"id":quotationId,"volume":volume,"price":price,"averageLoad":avg_load,"unload":unload,"addonCost":addonCost,"mixCost":mixCost},function(data){
                    if (data == "error")
                    {
                        alert("Error in calculating Metrics.");
                    }
                    else
                    {
                        obj = JSON.parse(data);
                        $(".spread_info_box").text("$"+obj["spread"]+"/@company.DeliveryQtyUomSingular");
                        $(".contribution_info_box").text("$"+obj["contribution"]+"/@company.DeliveryQtyUomSingular");
                        $(".profit_info_box").text("$"+obj["profit"]+"/@company.DeliveryQtyUomSingular");
                    }
                });
            });

            $("#SearchMixFormulationModal").on("shown.bs.modal",function(){
                $('#search_mix_formulation_table_wrapper').hide();
                $(".searching_mixes").show();
                update_search_formulation_modal();
            });
        });
    </script>
}



