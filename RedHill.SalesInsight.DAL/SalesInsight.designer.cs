#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RedHill.SalesInsight.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EsiMergedReadyMixInsight")]
	public partial class SalesInsightDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdditionalProduct(AdditionalProduct instance);
    partial void UpdateAdditionalProduct(AdditionalProduct instance);
    partial void DeleteAdditionalProduct(AdditionalProduct instance);
    partial void InsertWorkDayException(WorkDayException instance);
    partial void UpdateWorkDayException(WorkDayException instance);
    partial void DeleteWorkDayException(WorkDayException instance);
    partial void InsertAdditionalProductPlant(AdditionalProductPlant instance);
    partial void UpdateAdditionalProductPlant(AdditionalProductPlant instance);
    partial void DeleteAdditionalProductPlant(AdditionalProductPlant instance);
    partial void InsertAddon(Addon instance);
    partial void UpdateAddon(Addon instance);
    partial void DeleteAddon(Addon instance);
    partial void InsertAddonPriceProjection(AddonPriceProjection instance);
    partial void UpdateAddonPriceProjection(AddonPriceProjection instance);
    partial void DeleteAddonPriceProjection(AddonPriceProjection instance);
    partial void InsertAggregateProduct(AggregateProduct instance);
    partial void UpdateAggregateProduct(AggregateProduct instance);
    partial void DeleteAggregateProduct(AggregateProduct instance);
    partial void InsertAggregateProductPriceProjection(AggregateProductPriceProjection instance);
    partial void UpdateAggregateProductPriceProjection(AggregateProductPriceProjection instance);
    partial void DeleteAggregateProductPriceProjection(AggregateProductPriceProjection instance);
    partial void InsertAPIDataSyncLog(APIDataSyncLog instance);
    partial void UpdateAPIDataSyncLog(APIDataSyncLog instance);
    partial void DeleteAPIDataSyncLog(APIDataSyncLog instance);
    partial void InsertAPIFetchHistory(APIFetchHistory instance);
    partial void UpdateAPIFetchHistory(APIFetchHistory instance);
    partial void DeleteAPIFetchHistory(APIFetchHistory instance);
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Path(aspnet_Path instance);
    partial void Updateaspnet_Path(aspnet_Path instance);
    partial void Deleteaspnet_Path(aspnet_Path instance);
    partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void InsertBlockProduct(BlockProduct instance);
    partial void UpdateBlockProduct(BlockProduct instance);
    partial void DeleteBlockProduct(BlockProduct instance);
    partial void InsertBlockProductPriceProjection(BlockProductPriceProjection instance);
    partial void UpdateBlockProductPriceProjection(BlockProductPriceProjection instance);
    partial void DeleteBlockProductPriceProjection(BlockProductPriceProjection instance);
    partial void InsertChatConversation(ChatConversation instance);
    partial void UpdateChatConversation(ChatConversation instance);
    partial void DeleteChatConversation(ChatConversation instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertCompanySetting(CompanySetting instance);
    partial void UpdateCompanySetting(CompanySetting instance);
    partial void DeleteCompanySetting(CompanySetting instance);
    partial void InsertCompanyUser(CompanyUser instance);
    partial void UpdateCompanyUser(CompanyUser instance);
    partial void DeleteCompanyUser(CompanyUser instance);
    partial void InsertCompetitor(Competitor instance);
    partial void UpdateCompetitor(Competitor instance);
    partial void DeleteCompetitor(Competitor instance);
    partial void InsertCompetitorPlant(CompetitorPlant instance);
    partial void UpdateCompetitorPlant(CompetitorPlant instance);
    partial void DeleteCompetitorPlant(CompetitorPlant instance);
    partial void InsertConcreteProduct(ConcreteProduct instance);
    partial void UpdateConcreteProduct(ConcreteProduct instance);
    partial void DeleteConcreteProduct(ConcreteProduct instance);
    partial void InsertConcreteProductPlant(ConcreteProductPlant instance);
    partial void UpdateConcreteProductPlant(ConcreteProductPlant instance);
    partial void DeleteConcreteProductPlant(ConcreteProductPlant instance);
    partial void InsertContractor(Contractor instance);
    partial void UpdateContractor(Contractor instance);
    partial void DeleteContractor(Contractor instance);
    partial void InsertConversation(Conversation instance);
    partial void UpdateConversation(Conversation instance);
    partial void DeleteConversation(Conversation instance);
    partial void InsertConversationMessage(ConversationMessage instance);
    partial void UpdateConversationMessage(ConversationMessage instance);
    partial void DeleteConversationMessage(ConversationMessage instance);
    partial void InsertConversationParticipant(ConversationParticipant instance);
    partial void UpdateConversationParticipant(ConversationParticipant instance);
    partial void DeleteConversationParticipant(ConversationParticipant instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomerAging(CustomerAging instance);
    partial void UpdateCustomerAging(CustomerAging instance);
    partial void DeleteCustomerAging(CustomerAging instance);
    partial void InsertCustomerArchive(CustomerArchive instance);
    partial void UpdateCustomerArchive(CustomerArchive instance);
    partial void DeleteCustomerArchive(CustomerArchive instance);
    partial void InsertCustomerContact(CustomerContact instance);
    partial void UpdateCustomerContact(CustomerContact instance);
    partial void DeleteCustomerContact(CustomerContact instance);
    partial void InsertCustomerMergeJunkWord(CustomerMergeJunkWord instance);
    partial void UpdateCustomerMergeJunkWord(CustomerMergeJunkWord instance);
    partial void DeleteCustomerMergeJunkWord(CustomerMergeJunkWord instance);
    partial void InsertCustomerOrderChange(CustomerOrderChange instance);
    partial void UpdateCustomerOrderChange(CustomerOrderChange instance);
    partial void DeleteCustomerOrderChange(CustomerOrderChange instance);
    partial void InsertCustomerProductivity(CustomerProductivity instance);
    partial void UpdateCustomerProductivity(CustomerProductivity instance);
    partial void DeleteCustomerProductivity(CustomerProductivity instance);
    partial void InsertCustomerProfitability(CustomerProfitability instance);
    partial void UpdateCustomerProfitability(CustomerProfitability instance);
    partial void DeleteCustomerProfitability(CustomerProfitability instance);
    partial void InsertCustomMixConstituent(CustomMixConstituent instance);
    partial void UpdateCustomMixConstituent(CustomMixConstituent instance);
    partial void DeleteCustomMixConstituent(CustomMixConstituent instance);
    partial void InsertDailyPlantSummary(DailyPlantSummary instance);
    partial void UpdateDailyPlantSummary(DailyPlantSummary instance);
    partial void DeleteDailyPlantSummary(DailyPlantSummary instance);
    partial void InsertDashboardFilter(DashboardFilter instance);
    partial void UpdateDashboardFilter(DashboardFilter instance);
    partial void DeleteDashboardFilter(DashboardFilter instance);
    partial void InsertDashboardSetting(DashboardSetting instance);
    partial void UpdateDashboardSetting(DashboardSetting instance);
    partial void DeleteDashboardSetting(DashboardSetting instance);
    partial void InsertDefaultQuoteProduct(DefaultQuoteProduct instance);
    partial void UpdateDefaultQuoteProduct(DefaultQuoteProduct instance);
    partial void DeleteDefaultQuoteProduct(DefaultQuoteProduct instance);
    partial void InsertDistrict(District instance);
    partial void UpdateDistrict(District instance);
    partial void DeleteDistrict(District instance);
    partial void InsertDistrictAddonDefault(DistrictAddonDefault instance);
    partial void UpdateDistrictAddonDefault(DistrictAddonDefault instance);
    partial void DeleteDistrictAddonDefault(DistrictAddonDefault instance);
    partial void InsertDistrictCompetitor(DistrictCompetitor instance);
    partial void UpdateDistrictCompetitor(DistrictCompetitor instance);
    partial void DeleteDistrictCompetitor(DistrictCompetitor instance);
    partial void InsertDistrictCustomer(DistrictCustomer instance);
    partial void UpdateDistrictCustomer(DistrictCustomer instance);
    partial void DeleteDistrictCustomer(DistrictCustomer instance);
    partial void InsertDistrictMarketSegment(DistrictMarketSegment instance);
    partial void UpdateDistrictMarketSegment(DistrictMarketSegment instance);
    partial void DeleteDistrictMarketSegment(DistrictMarketSegment instance);
    partial void InsertDistrictSalesStaff(DistrictSalesStaff instance);
    partial void UpdateDistrictSalesStaff(DistrictSalesStaff instance);
    partial void DeleteDistrictSalesStaff(DistrictSalesStaff instance);
    partial void InsertDistrictUser(DistrictUser instance);
    partial void UpdateDistrictUser(DistrictUser instance);
    partial void DeleteDistrictUser(DistrictUser instance);
    partial void InsertDrillinReportConfig(DrillinReportConfig instance);
    partial void UpdateDrillinReportConfig(DrillinReportConfig instance);
    partial void DeleteDrillinReportConfig(DrillinReportConfig instance);
    partial void InsertDriverDetail(DriverDetail instance);
    partial void UpdateDriverDetail(DriverDetail instance);
    partial void DeleteDriverDetail(DriverDetail instance);
    partial void InsertDriverLoginTime(DriverLoginTime instance);
    partial void UpdateDriverLoginTime(DriverLoginTime instance);
    partial void DeleteDriverLoginTime(DriverLoginTime instance);
    partial void InsertFSKPrice(FSKPrice instance);
    partial void UpdateFSKPrice(FSKPrice instance);
    partial void DeleteFSKPrice(FSKPrice instance);
    partial void InsertGlobalSetting(GlobalSetting instance);
    partial void UpdateGlobalSetting(GlobalSetting instance);
    partial void DeleteGlobalSetting(GlobalSetting instance);
    partial void InsertMarketSegment(MarketSegment instance);
    partial void UpdateMarketSegment(MarketSegment instance);
    partial void DeleteMarketSegment(MarketSegment instance);
    partial void InsertMessageMention(MessageMention instance);
    partial void UpdateMessageMention(MessageMention instance);
    partial void DeleteMessageMention(MessageMention instance);
    partial void InsertMetricDefinition(MetricDefinition instance);
    partial void UpdateMetricDefinition(MetricDefinition instance);
    partial void DeleteMetricDefinition(MetricDefinition instance);
    partial void InsertMetricIndicatorAllowance(MetricIndicatorAllowance instance);
    partial void UpdateMetricIndicatorAllowance(MetricIndicatorAllowance instance);
    partial void DeleteMetricIndicatorAllowance(MetricIndicatorAllowance instance);
    partial void InsertMixFormulation(MixFormulation instance);
    partial void UpdateMixFormulation(MixFormulation instance);
    partial void DeleteMixFormulation(MixFormulation instance);
    partial void InsertMixFormulationCostProjection(MixFormulationCostProjection instance);
    partial void UpdateMixFormulationCostProjection(MixFormulationCostProjection instance);
    partial void DeleteMixFormulationCostProjection(MixFormulationCostProjection instance);
    partial void InsertMixLevelAddon(MixLevelAddon instance);
    partial void UpdateMixLevelAddon(MixLevelAddon instance);
    partial void DeleteMixLevelAddon(MixLevelAddon instance);
    partial void InsertNotification(Notification instance);
    partial void UpdateNotification(Notification instance);
    partial void DeleteNotification(Notification instance);
    partial void InsertPlant(Plant instance);
    partial void UpdatePlant(Plant instance);
    partial void DeletePlant(Plant instance);
    partial void InsertPlantBudget(PlantBudget instance);
    partial void UpdatePlantBudget(PlantBudget instance);
    partial void DeletePlantBudget(PlantBudget instance);
    partial void InsertPlantBudgetMarketSegment(PlantBudgetMarketSegment instance);
    partial void UpdatePlantBudgetMarketSegment(PlantBudgetMarketSegment instance);
    partial void DeletePlantBudgetMarketSegment(PlantBudgetMarketSegment instance);
    partial void InsertPlantBudgetSalesStaff(PlantBudgetSalesStaff instance);
    partial void UpdatePlantBudgetSalesStaff(PlantBudgetSalesStaff instance);
    partial void DeletePlantBudgetSalesStaff(PlantBudgetSalesStaff instance);
    partial void InsertPlantFinancialBudget(PlantFinancialBudget instance);
    partial void UpdatePlantFinancialBudget(PlantFinancialBudget instance);
    partial void DeletePlantFinancialBudget(PlantFinancialBudget instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertProjectBidder(ProjectBidder instance);
    partial void UpdateProjectBidder(ProjectBidder instance);
    partial void DeleteProjectBidder(ProjectBidder instance);
    partial void InsertProjectCompetitor(ProjectCompetitor instance);
    partial void UpdateProjectCompetitor(ProjectCompetitor instance);
    partial void DeleteProjectCompetitor(ProjectCompetitor instance);
    partial void InsertProjectNote(ProjectNote instance);
    partial void UpdateProjectNote(ProjectNote instance);
    partial void DeleteProjectNote(ProjectNote instance);
    partial void InsertProjectPlant(ProjectPlant instance);
    partial void UpdateProjectPlant(ProjectPlant instance);
    partial void DeleteProjectPlant(ProjectPlant instance);
    partial void InsertProjectProjection(ProjectProjection instance);
    partial void UpdateProjectProjection(ProjectProjection instance);
    partial void DeleteProjectProjection(ProjectProjection instance);
    partial void InsertProjectProjection2(ProjectProjection2 instance);
    partial void UpdateProjectProjection2(ProjectProjection2 instance);
    partial void DeleteProjectProjection2(ProjectProjection2 instance);
    partial void InsertProjectQCRequirement(ProjectQCRequirement instance);
    partial void UpdateProjectQCRequirement(ProjectQCRequirement instance);
    partial void DeleteProjectQCRequirement(ProjectQCRequirement instance);
    partial void InsertProjectSalesStaff(ProjectSalesStaff instance);
    partial void UpdateProjectSalesStaff(ProjectSalesStaff instance);
    partial void DeleteProjectSalesStaff(ProjectSalesStaff instance);
    partial void InsertProjectStatus(ProjectStatus instance);
    partial void UpdateProjectStatus(ProjectStatus instance);
    partial void DeleteProjectStatus(ProjectStatus instance);
    partial void InsertQC_Requirement(QC_Requirement instance);
    partial void UpdateQC_Requirement(QC_Requirement instance);
    partial void DeleteQC_Requirement(QC_Requirement instance);
    partial void InsertQuotation(Quotation instance);
    partial void UpdateQuotation(Quotation instance);
    partial void DeleteQuotation(Quotation instance);
    partial void InsertQuotationAddon(QuotationAddon instance);
    partial void UpdateQuotationAddon(QuotationAddon instance);
    partial void DeleteQuotationAddon(QuotationAddon instance);
    partial void InsertQuotationAggregate(QuotationAggregate instance);
    partial void UpdateQuotationAggregate(QuotationAggregate instance);
    partial void DeleteQuotationAggregate(QuotationAggregate instance);
    partial void InsertQuotationAggregateAddon(QuotationAggregateAddon instance);
    partial void UpdateQuotationAggregateAddon(QuotationAggregateAddon instance);
    partial void DeleteQuotationAggregateAddon(QuotationAggregateAddon instance);
    partial void InsertQuotationBlock(QuotationBlock instance);
    partial void UpdateQuotationBlock(QuotationBlock instance);
    partial void DeleteQuotationBlock(QuotationBlock instance);
    partial void InsertQuotationBlockAddon(QuotationBlockAddon instance);
    partial void UpdateQuotationBlockAddon(QuotationBlockAddon instance);
    partial void DeleteQuotationBlockAddon(QuotationBlockAddon instance);
    partial void InsertQuotationFormSetting(QuotationFormSetting instance);
    partial void UpdateQuotationFormSetting(QuotationFormSetting instance);
    partial void DeleteQuotationFormSetting(QuotationFormSetting instance);
    partial void InsertQuotationMix(QuotationMix instance);
    partial void UpdateQuotationMix(QuotationMix instance);
    partial void DeleteQuotationMix(QuotationMix instance);
    partial void InsertQuotationRecipent(QuotationRecipent instance);
    partial void UpdateQuotationRecipent(QuotationRecipent instance);
    partial void DeleteQuotationRecipent(QuotationRecipent instance);
    partial void InsertQuoteAuditLog(QuoteAuditLog instance);
    partial void UpdateQuoteAuditLog(QuoteAuditLog instance);
    partial void DeleteQuoteAuditLog(QuoteAuditLog instance);
    partial void InsertRawMaterial(RawMaterial instance);
    partial void UpdateRawMaterial(RawMaterial instance);
    partial void DeleteRawMaterial(RawMaterial instance);
    partial void InsertRawMaterialCostProjection(RawMaterialCostProjection instance);
    partial void UpdateRawMaterialCostProjection(RawMaterialCostProjection instance);
    partial void DeleteRawMaterialCostProjection(RawMaterialCostProjection instance);
    partial void InsertRawMaterialType(RawMaterialType instance);
    partial void UpdateRawMaterialType(RawMaterialType instance);
    partial void DeleteRawMaterialType(RawMaterialType instance);
    partial void InsertReasonsForLoss(ReasonsForLoss instance);
    partial void UpdateReasonsForLoss(ReasonsForLoss instance);
    partial void DeleteReasonsForLoss(ReasonsForLoss instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertReportColumnConfig(ReportColumnConfig instance);
    partial void UpdateReportColumnConfig(ReportColumnConfig instance);
    partial void DeleteReportColumnConfig(ReportColumnConfig instance);
    partial void InsertReportFilterSetting(ReportFilterSetting instance);
    partial void UpdateReportFilterSetting(ReportFilterSetting instance);
    partial void DeleteReportFilterSetting(ReportFilterSetting instance);
    partial void InsertReportRowConfig(ReportRowConfig instance);
    partial void UpdateReportRowConfig(ReportRowConfig instance);
    partial void DeleteReportRowConfig(ReportRowConfig instance);
    partial void InsertReportSetting(ReportSetting instance);
    partial void UpdateReportSetting(ReportSetting instance);
    partial void DeleteReportSetting(ReportSetting instance);
    partial void InsertRoleAccess(RoleAccess instance);
    partial void UpdateRoleAccess(RoleAccess instance);
    partial void DeleteRoleAccess(RoleAccess instance);
    partial void InsertSalesStaff(SalesStaff instance);
    partial void UpdateSalesStaff(SalesStaff instance);
    partial void DeleteSalesStaff(SalesStaff instance);
    partial void InsertSpecialReportConfig(SpecialReportConfig instance);
    partial void UpdateSpecialReportConfig(SpecialReportConfig instance);
    partial void DeleteSpecialReportConfig(SpecialReportConfig instance);
    partial void InsertStandardMix(StandardMix instance);
    partial void UpdateStandardMix(StandardMix instance);
    partial void DeleteStandardMix(StandardMix instance);
    partial void InsertStandardMixConstituent(StandardMixConstituent instance);
    partial void UpdateStandardMixConstituent(StandardMixConstituent instance);
    partial void DeleteStandardMixConstituent(StandardMixConstituent instance);
    partial void InsertSupportCategory(SupportCategory instance);
    partial void UpdateSupportCategory(SupportCategory instance);
    partial void DeleteSupportCategory(SupportCategory instance);
    partial void InsertSupportRecipient(SupportRecipient instance);
    partial void UpdateSupportRecipient(SupportRecipient instance);
    partial void DeleteSupportRecipient(SupportRecipient instance);
    partial void InsertSupportRequest(SupportRequest instance);
    partial void UpdateSupportRequest(SupportRequest instance);
    partial void DeleteSupportRequest(SupportRequest instance);
    partial void InsertSupportRequestAttachment(SupportRequestAttachment instance);
    partial void UpdateSupportRequestAttachment(SupportRequestAttachment instance);
    partial void DeleteSupportRequestAttachment(SupportRequestAttachment instance);
    partial void InsertSupportRequestRouting(SupportRequestRouting instance);
    partial void UpdateSupportRequestRouting(SupportRequestRouting instance);
    partial void DeleteSupportRequestRouting(SupportRequestRouting instance);
    partial void InsertTargetIndicatorAllowance(TargetIndicatorAllowance instance);
    partial void UpdateTargetIndicatorAllowance(TargetIndicatorAllowance instance);
    partial void DeleteTargetIndicatorAllowance(TargetIndicatorAllowance instance);
    partial void InsertTaxCode(TaxCode instance);
    partial void UpdateTaxCode(TaxCode instance);
    partial void DeleteTaxCode(TaxCode instance);
    partial void InsertTicketDetail(TicketDetail instance);
    partial void UpdateTicketDetail(TicketDetail instance);
    partial void DeleteTicketDetail(TicketDetail instance);
    partial void InsertTrendAnalysisReportConfig(TrendAnalysisReportConfig instance);
    partial void UpdateTrendAnalysisReportConfig(TrendAnalysisReportConfig instance);
    partial void DeleteTrendAnalysisReportConfig(TrendAnalysisReportConfig instance);
    partial void InsertUnitOfMeasure(UnitOfMeasure instance);
    partial void UpdateUnitOfMeasure(UnitOfMeasure instance);
    partial void DeleteUnitOfMeasure(UnitOfMeasure instance);
    partial void InsertUom(Uom instance);
    partial void UpdateUom(Uom instance);
    partial void DeleteUom(Uom instance);
    partial void InsertUserDashboardSetting(UserDashboardSetting instance);
    partial void UpdateUserDashboardSetting(UserDashboardSetting instance);
    partial void DeleteUserDashboardSetting(UserDashboardSetting instance);
    partial void InsertUserPasswordHistory(UserPasswordHistory instance);
    partial void UpdateUserPasswordHistory(UserPasswordHistory instance);
    partial void DeleteUserPasswordHistory(UserPasswordHistory instance);
    partial void InsertUserPasswordVerification(UserPasswordVerification instance);
    partial void UpdateUserPasswordVerification(UserPasswordVerification instance);
    partial void DeleteUserPasswordVerification(UserPasswordVerification instance);
    partial void InsertUserReportSetting(UserReportSetting instance);
    partial void UpdateUserReportSetting(UserReportSetting instance);
    partial void DeleteUserReportSetting(UserReportSetting instance);
    partial void InsertWeekDayDistribution(WeekDayDistribution instance);
    partial void UpdateWeekDayDistribution(WeekDayDistribution instance);
    partial void DeleteWeekDayDistribution(WeekDayDistribution instance);
    partial void InsertWidgetSetting(WidgetSetting instance);
    partial void UpdateWidgetSetting(WidgetSetting instance);
    partial void DeleteWidgetSetting(WidgetSetting instance);
    partial void InsertWorkDayDistribution(WorkDayDistribution instance);
    partial void UpdateWorkDayDistribution(WorkDayDistribution instance);
    partial void DeleteWorkDayDistribution(WorkDayDistribution instance);
    partial void InsertChatMessage(ChatMessage instance);
    partial void UpdateChatMessage(ChatMessage instance);
    partial void DeleteChatMessage(ChatMessage instance);
    partial void InsertChatSubscription(ChatSubscription instance);
    partial void UpdateChatSubscription(ChatSubscription instance);
    partial void DeleteChatSubscription(ChatSubscription instance);
    partial void InsertChatNotification(ChatNotification instance);
    partial void UpdateChatNotification(ChatNotification instance);
    partial void DeleteChatNotification(ChatNotification instance);
    partial void InsertSuperUserSetting(SuperUserSetting instance);
    partial void UpdateSuperUserSetting(SuperUserSetting instance);
    partial void DeleteSuperUserSetting(SuperUserSetting instance);
    #endregion
		
		public SalesInsightDataContext() : 
				base(global::RedHill.SalesInsight.DAL.Properties.Settings.Default.EsiMergedReadyMixInsightConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SalesInsightDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SalesInsightDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SalesInsightDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SalesInsightDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AdditionalProduct> AdditionalProducts
		{
			get
			{
				return this.GetTable<AdditionalProduct>();
			}
		}
		
		public System.Data.Linq.Table<WorkDayException> WorkDayExceptions
		{
			get
			{
				return this.GetTable<WorkDayException>();
			}
		}
		
		public System.Data.Linq.Table<AdditionalProductPlant> AdditionalProductPlants
		{
			get
			{
				return this.GetTable<AdditionalProductPlant>();
			}
		}
		
		public System.Data.Linq.Table<Addon> Addons
		{
			get
			{
				return this.GetTable<Addon>();
			}
		}
		
		public System.Data.Linq.Table<AddonPriceProjection> AddonPriceProjections
		{
			get
			{
				return this.GetTable<AddonPriceProjection>();
			}
		}
		
		public System.Data.Linq.Table<AggregateProduct> AggregateProducts
		{
			get
			{
				return this.GetTable<AggregateProduct>();
			}
		}
		
		public System.Data.Linq.Table<AggregateProductPriceProjection> AggregateProductPriceProjections
		{
			get
			{
				return this.GetTable<AggregateProductPriceProjection>();
			}
		}
		
		public System.Data.Linq.Table<APIDataSyncLog> APIDataSyncLogs
		{
			get
			{
				return this.GetTable<APIDataSyncLog>();
			}
		}
		
		public System.Data.Linq.Table<APIFetchHistory> APIFetchHistories
		{
			get
			{
				return this.GetTable<APIFetchHistory>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this.GetTable<aspnet_Path>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationAllUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<aspnet_WebEvent_Event>();
			}
		}
		
		public System.Data.Linq.Table<BlockProduct> BlockProducts
		{
			get
			{
				return this.GetTable<BlockProduct>();
			}
		}
		
		public System.Data.Linq.Table<BlockProductPriceProjection> BlockProductPriceProjections
		{
			get
			{
				return this.GetTable<BlockProductPriceProjection>();
			}
		}
		
		public System.Data.Linq.Table<ChatConversation> ChatConversations
		{
			get
			{
				return this.GetTable<ChatConversation>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<CompanySetting> CompanySettings
		{
			get
			{
				return this.GetTable<CompanySetting>();
			}
		}
		
		public System.Data.Linq.Table<CompanyUser> CompanyUsers
		{
			get
			{
				return this.GetTable<CompanyUser>();
			}
		}
		
		public System.Data.Linq.Table<Competitor> Competitors
		{
			get
			{
				return this.GetTable<Competitor>();
			}
		}
		
		public System.Data.Linq.Table<CompetitorPlant> CompetitorPlants
		{
			get
			{
				return this.GetTable<CompetitorPlant>();
			}
		}
		
		public System.Data.Linq.Table<ConcreteProduct> ConcreteProducts
		{
			get
			{
				return this.GetTable<ConcreteProduct>();
			}
		}
		
		public System.Data.Linq.Table<ConcreteProductPlant> ConcreteProductPlants
		{
			get
			{
				return this.GetTable<ConcreteProductPlant>();
			}
		}
		
		public System.Data.Linq.Table<Contractor> Contractors
		{
			get
			{
				return this.GetTable<Contractor>();
			}
		}
		
		public System.Data.Linq.Table<Conversation> Conversations
		{
			get
			{
				return this.GetTable<Conversation>();
			}
		}
		
		public System.Data.Linq.Table<ConversationMessage> ConversationMessages
		{
			get
			{
				return this.GetTable<ConversationMessage>();
			}
		}
		
		public System.Data.Linq.Table<ConversationParticipant> ConversationParticipants
		{
			get
			{
				return this.GetTable<ConversationParticipant>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerAging> CustomerAgings
		{
			get
			{
				return this.GetTable<CustomerAging>();
			}
		}
		
		public System.Data.Linq.Table<CustomerArchive> CustomerArchives
		{
			get
			{
				return this.GetTable<CustomerArchive>();
			}
		}
		
		public System.Data.Linq.Table<CustomerContact> CustomerContacts
		{
			get
			{
				return this.GetTable<CustomerContact>();
			}
		}
		
		public System.Data.Linq.Table<CustomerMergeJunkWord> CustomerMergeJunkWords
		{
			get
			{
				return this.GetTable<CustomerMergeJunkWord>();
			}
		}
		
		public System.Data.Linq.Table<CustomerOrderChange> CustomerOrderChanges
		{
			get
			{
				return this.GetTable<CustomerOrderChange>();
			}
		}
		
		public System.Data.Linq.Table<CustomerProductivity> CustomerProductivities
		{
			get
			{
				return this.GetTable<CustomerProductivity>();
			}
		}
		
		public System.Data.Linq.Table<CustomerProfitability> CustomerProfitabilities
		{
			get
			{
				return this.GetTable<CustomerProfitability>();
			}
		}
		
		public System.Data.Linq.Table<CustomMixConstituent> CustomMixConstituents
		{
			get
			{
				return this.GetTable<CustomMixConstituent>();
			}
		}
		
		public System.Data.Linq.Table<DailyPlantSummary> DailyPlantSummaries
		{
			get
			{
				return this.GetTable<DailyPlantSummary>();
			}
		}
		
		public System.Data.Linq.Table<DashboardFilter> DashboardFilters
		{
			get
			{
				return this.GetTable<DashboardFilter>();
			}
		}
		
		public System.Data.Linq.Table<DashboardSetting> DashboardSettings
		{
			get
			{
				return this.GetTable<DashboardSetting>();
			}
		}
		
		public System.Data.Linq.Table<DefaultQuoteProduct> DefaultQuoteProducts
		{
			get
			{
				return this.GetTable<DefaultQuoteProduct>();
			}
		}
		
		public System.Data.Linq.Table<District> Districts
		{
			get
			{
				return this.GetTable<District>();
			}
		}
		
		public System.Data.Linq.Table<DistrictAddonDefault> DistrictAddonDefaults
		{
			get
			{
				return this.GetTable<DistrictAddonDefault>();
			}
		}
		
		public System.Data.Linq.Table<DistrictCompetitor> DistrictCompetitors
		{
			get
			{
				return this.GetTable<DistrictCompetitor>();
			}
		}
		
		public System.Data.Linq.Table<DistrictCustomer> DistrictCustomers
		{
			get
			{
				return this.GetTable<DistrictCustomer>();
			}
		}
		
		public System.Data.Linq.Table<DistrictMarketSegment> DistrictMarketSegments
		{
			get
			{
				return this.GetTable<DistrictMarketSegment>();
			}
		}
		
		public System.Data.Linq.Table<DistrictSalesStaff> DistrictSalesStaffs
		{
			get
			{
				return this.GetTable<DistrictSalesStaff>();
			}
		}
		
		public System.Data.Linq.Table<DistrictUser> DistrictUsers
		{
			get
			{
				return this.GetTable<DistrictUser>();
			}
		}
		
		public System.Data.Linq.Table<DrillinReportConfig> DrillinReportConfigs
		{
			get
			{
				return this.GetTable<DrillinReportConfig>();
			}
		}
		
		public System.Data.Linq.Table<DriverDetail> DriverDetails
		{
			get
			{
				return this.GetTable<DriverDetail>();
			}
		}
		
		public System.Data.Linq.Table<DriverLoginTime> DriverLoginTimes
		{
			get
			{
				return this.GetTable<DriverLoginTime>();
			}
		}
		
		public System.Data.Linq.Table<FSKPrice> FSKPrices
		{
			get
			{
				return this.GetTable<FSKPrice>();
			}
		}
		
		public System.Data.Linq.Table<GlobalSetting> GlobalSettings
		{
			get
			{
				return this.GetTable<GlobalSetting>();
			}
		}
		
		public System.Data.Linq.Table<MarketSegment> MarketSegments
		{
			get
			{
				return this.GetTable<MarketSegment>();
			}
		}
		
		public System.Data.Linq.Table<MessageMention> MessageMentions
		{
			get
			{
				return this.GetTable<MessageMention>();
			}
		}
		
		public System.Data.Linq.Table<MetricDefinition> MetricDefinitions
		{
			get
			{
				return this.GetTable<MetricDefinition>();
			}
		}
		
		public System.Data.Linq.Table<MetricIndicatorAllowance> MetricIndicatorAllowances
		{
			get
			{
				return this.GetTable<MetricIndicatorAllowance>();
			}
		}
		
		public System.Data.Linq.Table<MixFormulation> MixFormulations
		{
			get
			{
				return this.GetTable<MixFormulation>();
			}
		}
		
		public System.Data.Linq.Table<MixFormulationCostProjection> MixFormulationCostProjections
		{
			get
			{
				return this.GetTable<MixFormulationCostProjection>();
			}
		}
		
		public System.Data.Linq.Table<MixLevelAddon> MixLevelAddons
		{
			get
			{
				return this.GetTable<MixLevelAddon>();
			}
		}
		
		public System.Data.Linq.Table<NameTest> NameTests
		{
			get
			{
				return this.GetTable<NameTest>();
			}
		}
		
		public System.Data.Linq.Table<Notification> Notifications
		{
			get
			{
				return this.GetTable<Notification>();
			}
		}
		
		public System.Data.Linq.Table<Plant> Plants
		{
			get
			{
				return this.GetTable<Plant>();
			}
		}
		
		public System.Data.Linq.Table<PlantBudget> PlantBudgets
		{
			get
			{
				return this.GetTable<PlantBudget>();
			}
		}
		
		public System.Data.Linq.Table<PlantBudgetMarketSegment> PlantBudgetMarketSegments
		{
			get
			{
				return this.GetTable<PlantBudgetMarketSegment>();
			}
		}
		
		public System.Data.Linq.Table<PlantBudgetSalesStaff> PlantBudgetSalesStaffs
		{
			get
			{
				return this.GetTable<PlantBudgetSalesStaff>();
			}
		}
		
		public System.Data.Linq.Table<PlantFinancialBudget> PlantFinancialBudgets
		{
			get
			{
				return this.GetTable<PlantFinancialBudget>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<ProjectBidder> ProjectBidders
		{
			get
			{
				return this.GetTable<ProjectBidder>();
			}
		}
		
		public System.Data.Linq.Table<ProjectCompetitor> ProjectCompetitors
		{
			get
			{
				return this.GetTable<ProjectCompetitor>();
			}
		}
		
		public System.Data.Linq.Table<ProjectNote> ProjectNotes
		{
			get
			{
				return this.GetTable<ProjectNote>();
			}
		}
		
		public System.Data.Linq.Table<ProjectPlant> ProjectPlants
		{
			get
			{
				return this.GetTable<ProjectPlant>();
			}
		}
		
		public System.Data.Linq.Table<ProjectProjection> ProjectProjections
		{
			get
			{
				return this.GetTable<ProjectProjection>();
			}
		}
		
		public System.Data.Linq.Table<ProjectProjection2> ProjectProjection2s
		{
			get
			{
				return this.GetTable<ProjectProjection2>();
			}
		}
		
		public System.Data.Linq.Table<ProjectQCRequirement> ProjectQCRequirements
		{
			get
			{
				return this.GetTable<ProjectQCRequirement>();
			}
		}
		
		public System.Data.Linq.Table<ProjectSalesStaff> ProjectSalesStaffs
		{
			get
			{
				return this.GetTable<ProjectSalesStaff>();
			}
		}
		
		public System.Data.Linq.Table<ProjectStatus> ProjectStatus
		{
			get
			{
				return this.GetTable<ProjectStatus>();
			}
		}
		
		public System.Data.Linq.Table<QC_Requirement> QC_Requirements
		{
			get
			{
				return this.GetTable<QC_Requirement>();
			}
		}
		
		public System.Data.Linq.Table<Quotation> Quotations
		{
			get
			{
				return this.GetTable<Quotation>();
			}
		}
		
		public System.Data.Linq.Table<QuotationAddon> QuotationAddons
		{
			get
			{
				return this.GetTable<QuotationAddon>();
			}
		}
		
		public System.Data.Linq.Table<QuotationAggregate> QuotationAggregates
		{
			get
			{
				return this.GetTable<QuotationAggregate>();
			}
		}
		
		public System.Data.Linq.Table<QuotationAggregateAddon> QuotationAggregateAddons
		{
			get
			{
				return this.GetTable<QuotationAggregateAddon>();
			}
		}
		
		public System.Data.Linq.Table<QuotationBlock> QuotationBlocks
		{
			get
			{
				return this.GetTable<QuotationBlock>();
			}
		}
		
		public System.Data.Linq.Table<QuotationBlockAddon> QuotationBlockAddons
		{
			get
			{
				return this.GetTable<QuotationBlockAddon>();
			}
		}
		
		public System.Data.Linq.Table<QuotationFormSetting> QuotationFormSettings
		{
			get
			{
				return this.GetTable<QuotationFormSetting>();
			}
		}
		
		public System.Data.Linq.Table<QuotationMix> QuotationMixes
		{
			get
			{
				return this.GetTable<QuotationMix>();
			}
		}
		
		public System.Data.Linq.Table<QuotationRecipent> QuotationRecipents
		{
			get
			{
				return this.GetTable<QuotationRecipent>();
			}
		}
		
		public System.Data.Linq.Table<QuoteAuditLog> QuoteAuditLogs
		{
			get
			{
				return this.GetTable<QuoteAuditLog>();
			}
		}
		
		public System.Data.Linq.Table<RawMaterial> RawMaterials
		{
			get
			{
				return this.GetTable<RawMaterial>();
			}
		}
		
		public System.Data.Linq.Table<RawMaterialCostProjection> RawMaterialCostProjections
		{
			get
			{
				return this.GetTable<RawMaterialCostProjection>();
			}
		}
		
		public System.Data.Linq.Table<RawMaterialType> RawMaterialTypes
		{
			get
			{
				return this.GetTable<RawMaterialType>();
			}
		}
		
		public System.Data.Linq.Table<ReasonsForLoss> ReasonsForLosses
		{
			get
			{
				return this.GetTable<ReasonsForLoss>();
			}
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<ReportColumnConfig> ReportColumnConfigs
		{
			get
			{
				return this.GetTable<ReportColumnConfig>();
			}
		}
		
		public System.Data.Linq.Table<ReportFilterSetting> ReportFilterSettings
		{
			get
			{
				return this.GetTable<ReportFilterSetting>();
			}
		}
		
		public System.Data.Linq.Table<ReportRowConfig> ReportRowConfigs
		{
			get
			{
				return this.GetTable<ReportRowConfig>();
			}
		}
		
		public System.Data.Linq.Table<ReportSetting> ReportSettings
		{
			get
			{
				return this.GetTable<ReportSetting>();
			}
		}
		
		public System.Data.Linq.Table<RoleAccess> RoleAccesses
		{
			get
			{
				return this.GetTable<RoleAccess>();
			}
		}
		
		public System.Data.Linq.Table<SalesStaff> SalesStaffs
		{
			get
			{
				return this.GetTable<SalesStaff>();
			}
		}
		
		public System.Data.Linq.Table<SpecialReportConfig> SpecialReportConfigs
		{
			get
			{
				return this.GetTable<SpecialReportConfig>();
			}
		}
		
		public System.Data.Linq.Table<StandardMix> StandardMixes
		{
			get
			{
				return this.GetTable<StandardMix>();
			}
		}
		
		public System.Data.Linq.Table<StandardMixConstituent> StandardMixConstituents
		{
			get
			{
				return this.GetTable<StandardMixConstituent>();
			}
		}
		
		public System.Data.Linq.Table<SupportCategory> SupportCategories
		{
			get
			{
				return this.GetTable<SupportCategory>();
			}
		}
		
		public System.Data.Linq.Table<SupportRecipient> SupportRecipients
		{
			get
			{
				return this.GetTable<SupportRecipient>();
			}
		}
		
		public System.Data.Linq.Table<SupportRequest> SupportRequests
		{
			get
			{
				return this.GetTable<SupportRequest>();
			}
		}
		
		public System.Data.Linq.Table<SupportRequestAttachment> SupportRequestAttachments
		{
			get
			{
				return this.GetTable<SupportRequestAttachment>();
			}
		}
		
		public System.Data.Linq.Table<SupportRequestRouting> SupportRequestRoutings
		{
			get
			{
				return this.GetTable<SupportRequestRouting>();
			}
		}
		
		public System.Data.Linq.Table<TargetIndicatorAllowance> TargetIndicatorAllowances
		{
			get
			{
				return this.GetTable<TargetIndicatorAllowance>();
			}
		}
		
		public System.Data.Linq.Table<TaxCode> TaxCodes
		{
			get
			{
				return this.GetTable<TaxCode>();
			}
		}
		
		public System.Data.Linq.Table<TicketDetail> TicketDetails
		{
			get
			{
				return this.GetTable<TicketDetail>();
			}
		}
		
		public System.Data.Linq.Table<TrendAnalysisReportConfig> TrendAnalysisReportConfigs
		{
			get
			{
				return this.GetTable<TrendAnalysisReportConfig>();
			}
		}
		
		public System.Data.Linq.Table<UnitOfMeasure> UnitOfMeasures
		{
			get
			{
				return this.GetTable<UnitOfMeasure>();
			}
		}
		
		public System.Data.Linq.Table<Uom> Uoms
		{
			get
			{
				return this.GetTable<Uom>();
			}
		}
		
		public System.Data.Linq.Table<UserDashboardSetting> UserDashboardSettings
		{
			get
			{
				return this.GetTable<UserDashboardSetting>();
			}
		}
		
		public System.Data.Linq.Table<UserPasswordHistory> UserPasswordHistories
		{
			get
			{
				return this.GetTable<UserPasswordHistory>();
			}
		}
		
		public System.Data.Linq.Table<UserPasswordVerification> UserPasswordVerifications
		{
			get
			{
				return this.GetTable<UserPasswordVerification>();
			}
		}
		
		public System.Data.Linq.Table<UserReportSetting> UserReportSettings
		{
			get
			{
				return this.GetTable<UserReportSetting>();
			}
		}
		
		public System.Data.Linq.Table<WeekDayDistribution> WeekDayDistributions
		{
			get
			{
				return this.GetTable<WeekDayDistribution>();
			}
		}
		
		public System.Data.Linq.Table<WidgetSetting> WidgetSettings
		{
			get
			{
				return this.GetTable<WidgetSetting>();
			}
		}
		
		public System.Data.Linq.Table<WorkDayDistribution> WorkDayDistributions
		{
			get
			{
				return this.GetTable<WorkDayDistribution>();
			}
		}
		
		public System.Data.Linq.Table<ChatMessage> ChatMessages
		{
			get
			{
				return this.GetTable<ChatMessage>();
			}
		}
		
		public System.Data.Linq.Table<ChatSubscription> ChatSubscriptions
		{
			get
			{
				return this.GetTable<ChatSubscription>();
			}
		}
		
		public System.Data.Linq.Table<ChatNotification> ChatNotifications
		{
			get
			{
				return this.GetTable<ChatNotification>();
			}
		}
		
		public System.Data.Linq.Table<SuperUserSetting> SuperUserSettings
		{
			get
			{
				return this.GetTable<SuperUserSetting>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNextKeyValue")]
		public int GetNextKeyValue([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(30)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Value", DbType="Int")] ref System.Nullable<int> value)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId, name, value);
			value = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AcceptQuote")]
		public int AcceptQuote([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuoteId", DbType="Int")] System.Nullable<int> quoteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SoldStatusId", DbType="Int")] System.Nullable<int> soldStatusId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, quoteId, soldStatusId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchMixFormulations")]
		public ISingleResult<SearchMixFormulationsResult> SearchMixFormulations([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PlantId", DbType="Int")] System.Nullable<int> plantId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AirFilters", DbType="VarChar(250)")] string airFilters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlumpFilters", DbType="VarChar(250)")] string slumpFilters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PSIFilters", DbType="VarChar(250)")] string pSIFilters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MD1Filters", DbType="VarChar(250)")] string mD1Filters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MD2Filters", DbType="VarChar(250)")] string mD2Filters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MD3Filters", DbType="VarChar(250)")] string mD3Filters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MD4Filters", DbType="VarChar(250)")] string mD4Filters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AshFilters", DbType="VarChar(250)")] string ashFilters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FineAggFilters", DbType="VarChar(250)")] string fineAggFilters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SackFilters", DbType="VarChar(250)")] string sackFilters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RawMaterialsIncludedFilters", DbType="VarChar(250)")] string rawMaterialsIncludedFilters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RawMaterialsExcludedFilters", DbType="VarChar(250)")] string rawMaterialsExcludedFilters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AsOfDate", DbType="Date")] System.Nullable<System.DateTime> asOfDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), plantId, airFilters, slumpFilters, pSIFilters, mD1Filters, mD2Filters, mD3Filters, mD4Filters, ashFilters, fineAggFilters, sackFilters, rawMaterialsIncludedFilters, rawMaterialsExcludedFilters, asOfDate);
			return ((ISingleResult<SearchMixFormulationsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdditionalProduct")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AdditionalProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CompanyId;
		
		private System.Nullable<int> _UnitOfMeasureId;
		
		private int _ProductTypeId;
		
		private string _Code;
		
		private string _Description;
		
		private bool _Active;
		
		private bool _StandardProduct;
		
		private bool _FlatRate;
		
		private EntitySet<AdditionalProductPlant> _AdditionalProductPlants;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<UnitOfMeasure> _UnitOfMeasure;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnUnitOfMeasureIdChanging(System.Nullable<int> value);
    partial void OnUnitOfMeasureIdChanged();
    partial void OnProductTypeIdChanging(int value);
    partial void OnProductTypeIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnStandardProductChanging(bool value);
    partial void OnStandardProductChanged();
    partial void OnFlatRateChanging(bool value);
    partial void OnFlatRateChanged();
    #endregion
		
		public AdditionalProduct()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitOfMeasureId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> UnitOfMeasureId
		{
			get
			{
				return this._UnitOfMeasureId;
			}
			set
			{
				if ((this._UnitOfMeasureId != value))
				{
					if (this._UnitOfMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitOfMeasureIdChanging(value);
					this.SendPropertyChanging();
					this._UnitOfMeasureId = value;
					this.SendPropertyChanged("UnitOfMeasureId");
					this.OnUnitOfMeasureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					this.OnProductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeId = value;
					this.SendPropertyChanged("ProductTypeId");
					this.OnProductTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardProduct", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool StandardProduct
		{
			get
			{
				return this._StandardProduct;
			}
			set
			{
				if ((this._StandardProduct != value))
				{
					this.OnStandardProductChanging(value);
					this.SendPropertyChanging();
					this._StandardProduct = value;
					this.SendPropertyChanged("StandardProduct");
					this.OnStandardProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatRate", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool FlatRate
		{
			get
			{
				return this._FlatRate;
			}
			set
			{
				if ((this._FlatRate != value))
				{
					this.OnFlatRateChanging(value);
					this.SendPropertyChanging();
					this._FlatRate = value;
					this.SendPropertyChanged("FlatRate");
					this.OnFlatRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdditionalProduct_AdditionalProductPlant", Storage="_AdditionalProductPlants", ThisKey="Id", OtherKey="AdditionalProductId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<AdditionalProductPlant> AdditionalProductPlants
		{
			get
			{
				if ((this.serializing 
							&& (this._AdditionalProductPlants.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AdditionalProductPlants;
			}
			set
			{
				this._AdditionalProductPlants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_AdditionalProduct", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.AdditionalProducts.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.AdditionalProducts.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasure_AdditionalProduct", Storage="_UnitOfMeasure", ThisKey="UnitOfMeasureId", OtherKey="Id", IsForeignKey=true)]
		public UnitOfMeasure UnitOfMeasure
		{
			get
			{
				return this._UnitOfMeasure.Entity;
			}
			set
			{
				UnitOfMeasure previousValue = this._UnitOfMeasure.Entity;
				if (((previousValue != value) 
							|| (this._UnitOfMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitOfMeasure.Entity = null;
						previousValue.AdditionalProducts.Remove(this);
					}
					this._UnitOfMeasure.Entity = value;
					if ((value != null))
					{
						value.AdditionalProducts.Add(this);
						this._UnitOfMeasureId = value.Id;
					}
					else
					{
						this._UnitOfMeasureId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UnitOfMeasure");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdditionalProductPlants(AdditionalProductPlant entity)
		{
			this.SendPropertyChanging();
			entity.AdditionalProduct = this;
		}
		
		private void detach_AdditionalProductPlants(AdditionalProductPlant entity)
		{
			this.SendPropertyChanging();
			entity.AdditionalProduct = null;
		}
		
		private void Initialize()
		{
			this._AdditionalProductPlants = new EntitySet<AdditionalProductPlant>(new Action<AdditionalProductPlant>(this.attach_AdditionalProductPlants), new Action<AdditionalProductPlant>(this.detach_AdditionalProductPlants));
			this._Company = default(EntityRef<Company>);
			this._UnitOfMeasure = default(EntityRef<UnitOfMeasure>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkDayExceptions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WorkDayException : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _ExceptionDate;
		
		private double _Distribution;
		
		private string _Description;
		
		private System.Nullable<int> _DistrictId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnExceptionDateChanging(System.DateTime value);
    partial void OnExceptionDateChanged();
    partial void OnDistributionChanging(double value);
    partial void OnDistributionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDistrictIdChanging(System.Nullable<int> value);
    partial void OnDistrictIdChanged();
    #endregion
		
		public WorkDayException()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime ExceptionDate
		{
			get
			{
				return this._ExceptionDate;
			}
			set
			{
				if ((this._ExceptionDate != value))
				{
					this.OnExceptionDateChanging(value);
					this.SendPropertyChanging();
					this._ExceptionDate = value;
					this.SendPropertyChanged("ExceptionDate");
					this.OnExceptionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distribution", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public double Distribution
		{
			get
			{
				return this._Distribution;
			}
			set
			{
				if ((this._Distribution != value))
				{
					this.OnDistributionChanging(value);
					this.SendPropertyChanging();
					this._Distribution = value;
					this.SendPropertyChanged("Distribution");
					this.OnDistributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdditionalProductPlant")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AdditionalProductPlant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AdditionalProductId;
		
		private int _PlantId;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Cost;
		
		private bool _Active;
		
		private EntityRef<AdditionalProduct> _AdditionalProduct;
		
		private EntityRef<Plant> _Plant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAdditionalProductIdChanging(int value);
    partial void OnAdditionalProductIdChanged();
    partial void OnPlantIdChanging(int value);
    partial void OnPlantIdChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public AdditionalProductPlant()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalProductId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AdditionalProductId
		{
			get
			{
				return this._AdditionalProductId;
			}
			set
			{
				if ((this._AdditionalProductId != value))
				{
					if (this._AdditionalProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdditionalProductIdChanging(value);
					this.SendPropertyChanging();
					this._AdditionalProductId = value;
					this.SendPropertyChanged("AdditionalProductId");
					this.OnAdditionalProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(8,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdditionalProduct_AdditionalProductPlant", Storage="_AdditionalProduct", ThisKey="AdditionalProductId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AdditionalProduct AdditionalProduct
		{
			get
			{
				return this._AdditionalProduct.Entity;
			}
			set
			{
				AdditionalProduct previousValue = this._AdditionalProduct.Entity;
				if (((previousValue != value) 
							|| (this._AdditionalProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdditionalProduct.Entity = null;
						previousValue.AdditionalProductPlants.Remove(this);
					}
					this._AdditionalProduct.Entity = value;
					if ((value != null))
					{
						value.AdditionalProductPlants.Add(this);
						this._AdditionalProductId = value.Id;
					}
					else
					{
						this._AdditionalProductId = default(int);
					}
					this.SendPropertyChanged("AdditionalProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_AdditionalProductPlant", Storage="_Plant", ThisKey="PlantId", OtherKey="PlantId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.AdditionalProductPlants.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.AdditionalProductPlants.Add(this);
						this._PlantId = value.PlantId;
					}
					else
					{
						this._PlantId = default(int);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._AdditionalProduct = default(EntityRef<AdditionalProduct>);
			this._Plant = default(EntityRef<Plant>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Addon")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Addon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Code;
		
		private string _Description;
		
		private string _AddonType;
		
		private System.Nullable<long> _QuoteUomId;
		
		private System.Nullable<long> _MixCostUomId;
		
		private System.Nullable<bool> _Active;
		
		private string _DispatchId;
		
		private System.Nullable<bool> _Synced;
		
		private System.Nullable<decimal> _Sort;
		
		private EntitySet<AddonPriceProjection> _AddonPriceProjections;
		
		private EntitySet<CustomMixConstituent> _CustomMixConstituents;
		
		private EntitySet<DistrictAddonDefault> _DistrictAddonDefaults;
		
		private EntitySet<MixLevelAddon> _MixLevelAddons;
		
		private EntitySet<QuotationAddon> _QuotationAddons;
		
		private EntitySet<QuotationAggregateAddon> _QuotationAggregateAddons;
		
		private EntitySet<QuotationBlockAddon> _QuotationBlockAddons;
		
		private EntityRef<Uom> _MixUom;
		
		private EntityRef<Uom> _QuoteUom;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAddonTypeChanging(string value);
    partial void OnAddonTypeChanged();
    partial void OnQuoteUomIdChanging(System.Nullable<long> value);
    partial void OnQuoteUomIdChanged();
    partial void OnMixCostUomIdChanging(System.Nullable<long> value);
    partial void OnMixCostUomIdChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnSyncedChanging(System.Nullable<bool> value);
    partial void OnSyncedChanged();
    partial void OnSortChanging(System.Nullable<decimal> value);
    partial void OnSortChanged();
    #endregion
		
		public Addon()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string AddonType
		{
			get
			{
				return this._AddonType;
			}
			set
			{
				if ((this._AddonType != value))
				{
					this.OnAddonTypeChanging(value);
					this.SendPropertyChanging();
					this._AddonType = value;
					this.SendPropertyChanged("AddonType");
					this.OnAddonTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteUomId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<long> QuoteUomId
		{
			get
			{
				return this._QuoteUomId;
			}
			set
			{
				if ((this._QuoteUomId != value))
				{
					if (this._QuoteUom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteUomIdChanging(value);
					this.SendPropertyChanging();
					this._QuoteUomId = value;
					this.SendPropertyChanged("QuoteUomId");
					this.OnQuoteUomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixCostUomId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<long> MixCostUomId
		{
			get
			{
				return this._MixCostUomId;
			}
			set
			{
				if ((this._MixCostUomId != value))
				{
					if (this._MixUom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMixCostUomIdChanging(value);
					this.SendPropertyChanging();
					this._MixCostUomId = value;
					this.SendPropertyChanged("MixCostUomId");
					this.OnMixCostUomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synced", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> Synced
		{
			get
			{
				return this._Synced;
			}
			set
			{
				if ((this._Synced != value))
				{
					this.OnSyncedChanging(value);
					this.SendPropertyChanging();
					this._Synced = value;
					this.SendPropertyChanged("Synced");
					this.OnSyncedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Decimal(6,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<decimal> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_AddonPriceProjection", Storage="_AddonPriceProjections", ThisKey="Id", OtherKey="AddonId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<AddonPriceProjection> AddonPriceProjections
		{
			get
			{
				if ((this.serializing 
							&& (this._AddonPriceProjections.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AddonPriceProjections;
			}
			set
			{
				this._AddonPriceProjections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_CustomMixConstituent", Storage="_CustomMixConstituents", ThisKey="Id", OtherKey="AddonId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<CustomMixConstituent> CustomMixConstituents
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomMixConstituents.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomMixConstituents;
			}
			set
			{
				this._CustomMixConstituents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_DistrictAddonDefault", Storage="_DistrictAddonDefaults", ThisKey="Id", OtherKey="AddonId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<DistrictAddonDefault> DistrictAddonDefaults
		{
			get
			{
				if ((this.serializing 
							&& (this._DistrictAddonDefaults.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DistrictAddonDefaults;
			}
			set
			{
				this._DistrictAddonDefaults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_MixLevelAddon", Storage="_MixLevelAddons", ThisKey="Id", OtherKey="AddonId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<MixLevelAddon> MixLevelAddons
		{
			get
			{
				if ((this.serializing 
							&& (this._MixLevelAddons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MixLevelAddons;
			}
			set
			{
				this._MixLevelAddons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_QuotationAddon", Storage="_QuotationAddons", ThisKey="Id", OtherKey="AddonId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<QuotationAddon> QuotationAddons
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationAddons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationAddons;
			}
			set
			{
				this._QuotationAddons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_QuotationAggregateAddon", Storage="_QuotationAggregateAddons", ThisKey="Id", OtherKey="AddonId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<QuotationAggregateAddon> QuotationAggregateAddons
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationAggregateAddons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationAggregateAddons;
			}
			set
			{
				this._QuotationAggregateAddons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_QuotationBlockAddon", Storage="_QuotationBlockAddons", ThisKey="Id", OtherKey="AddonId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<QuotationBlockAddon> QuotationBlockAddons
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationBlockAddons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationBlockAddons;
			}
			set
			{
				this._QuotationBlockAddons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_Addon", Storage="_MixUom", ThisKey="MixCostUomId", OtherKey="Id", IsForeignKey=true)]
		public Uom MixUom
		{
			get
			{
				return this._MixUom.Entity;
			}
			set
			{
				Uom previousValue = this._MixUom.Entity;
				if (((previousValue != value) 
							|| (this._MixUom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MixUom.Entity = null;
						previousValue.Addons.Remove(this);
					}
					this._MixUom.Entity = value;
					if ((value != null))
					{
						value.Addons.Add(this);
						this._MixCostUomId = value.Id;
					}
					else
					{
						this._MixCostUomId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MixUom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_Addon1", Storage="_QuoteUom", ThisKey="QuoteUomId", OtherKey="Id", IsForeignKey=true)]
		public Uom QuoteUom
		{
			get
			{
				return this._QuoteUom.Entity;
			}
			set
			{
				Uom previousValue = this._QuoteUom.Entity;
				if (((previousValue != value) 
							|| (this._QuoteUom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteUom.Entity = null;
						previousValue.Addons1.Remove(this);
					}
					this._QuoteUom.Entity = value;
					if ((value != null))
					{
						value.Addons1.Add(this);
						this._QuoteUomId = value.Id;
					}
					else
					{
						this._QuoteUomId = default(Nullable<long>);
					}
					this.SendPropertyChanged("QuoteUom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddonPriceProjections(AddonPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.Addon = this;
		}
		
		private void detach_AddonPriceProjections(AddonPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.Addon = null;
		}
		
		private void attach_CustomMixConstituents(CustomMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.Addon = this;
		}
		
		private void detach_CustomMixConstituents(CustomMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.Addon = null;
		}
		
		private void attach_DistrictAddonDefaults(DistrictAddonDefault entity)
		{
			this.SendPropertyChanging();
			entity.Addon = this;
		}
		
		private void detach_DistrictAddonDefaults(DistrictAddonDefault entity)
		{
			this.SendPropertyChanging();
			entity.Addon = null;
		}
		
		private void attach_MixLevelAddons(MixLevelAddon entity)
		{
			this.SendPropertyChanging();
			entity.Addon = this;
		}
		
		private void detach_MixLevelAddons(MixLevelAddon entity)
		{
			this.SendPropertyChanging();
			entity.Addon = null;
		}
		
		private void attach_QuotationAddons(QuotationAddon entity)
		{
			this.SendPropertyChanging();
			entity.Addon = this;
		}
		
		private void detach_QuotationAddons(QuotationAddon entity)
		{
			this.SendPropertyChanging();
			entity.Addon = null;
		}
		
		private void attach_QuotationAggregateAddons(QuotationAggregateAddon entity)
		{
			this.SendPropertyChanging();
			entity.Addon = this;
		}
		
		private void detach_QuotationAggregateAddons(QuotationAggregateAddon entity)
		{
			this.SendPropertyChanging();
			entity.Addon = null;
		}
		
		private void attach_QuotationBlockAddons(QuotationBlockAddon entity)
		{
			this.SendPropertyChanging();
			entity.Addon = this;
		}
		
		private void detach_QuotationBlockAddons(QuotationBlockAddon entity)
		{
			this.SendPropertyChanging();
			entity.Addon = null;
		}
		
		private void Initialize()
		{
			this._AddonPriceProjections = new EntitySet<AddonPriceProjection>(new Action<AddonPriceProjection>(this.attach_AddonPriceProjections), new Action<AddonPriceProjection>(this.detach_AddonPriceProjections));
			this._CustomMixConstituents = new EntitySet<CustomMixConstituent>(new Action<CustomMixConstituent>(this.attach_CustomMixConstituents), new Action<CustomMixConstituent>(this.detach_CustomMixConstituents));
			this._DistrictAddonDefaults = new EntitySet<DistrictAddonDefault>(new Action<DistrictAddonDefault>(this.attach_DistrictAddonDefaults), new Action<DistrictAddonDefault>(this.detach_DistrictAddonDefaults));
			this._MixLevelAddons = new EntitySet<MixLevelAddon>(new Action<MixLevelAddon>(this.attach_MixLevelAddons), new Action<MixLevelAddon>(this.detach_MixLevelAddons));
			this._QuotationAddons = new EntitySet<QuotationAddon>(new Action<QuotationAddon>(this.attach_QuotationAddons), new Action<QuotationAddon>(this.detach_QuotationAddons));
			this._QuotationAggregateAddons = new EntitySet<QuotationAggregateAddon>(new Action<QuotationAggregateAddon>(this.attach_QuotationAggregateAddons), new Action<QuotationAggregateAddon>(this.detach_QuotationAggregateAddons));
			this._QuotationBlockAddons = new EntitySet<QuotationBlockAddon>(new Action<QuotationBlockAddon>(this.attach_QuotationBlockAddons), new Action<QuotationBlockAddon>(this.detach_QuotationBlockAddons));
			this._MixUom = default(EntityRef<Uom>);
			this._QuoteUom = default(EntityRef<Uom>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddonPriceProjection")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AddonPriceProjection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AddonId;
		
		private int _DistrictId;
		
		private System.DateTime _ChangeDate;
		
		private decimal _Price;
		
		private long _UomId;
		
		private string _PriceMode;
		
		private EntityRef<Addon> _Addon;
		
		private EntityRef<District> _District;
		
		private EntityRef<Uom> _Uom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAddonIdChanging(long value);
    partial void OnAddonIdChanged();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnUomIdChanging(long value);
    partial void OnUomIdChanged();
    partial void OnPriceModeChanging(string value);
    partial void OnPriceModeChanged();
    #endregion
		
		public AddonPriceProjection()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long AddonId
		{
			get
			{
				return this._AddonId;
			}
			set
			{
				if ((this._AddonId != value))
				{
					if (this._Addon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddonIdChanging(value);
					this.SendPropertyChanging();
					this._AddonId = value;
					this.SendPropertyChanged("AddonId");
					this.OnAddonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					if (this._District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UomId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long UomId
		{
			get
			{
				return this._UomId;
			}
			set
			{
				if ((this._UomId != value))
				{
					if (this._Uom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUomIdChanging(value);
					this.SendPropertyChanging();
					this._UomId = value;
					this.SendPropertyChanged("UomId");
					this.OnUomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceMode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string PriceMode
		{
			get
			{
				return this._PriceMode;
			}
			set
			{
				if ((this._PriceMode != value))
				{
					this.OnPriceModeChanging(value);
					this.SendPropertyChanging();
					this._PriceMode = value;
					this.SendPropertyChanged("PriceMode");
					this.OnPriceModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_AddonPriceProjection", Storage="_Addon", ThisKey="AddonId", OtherKey="Id", IsForeignKey=true)]
		public Addon Addon
		{
			get
			{
				return this._Addon.Entity;
			}
			set
			{
				Addon previousValue = this._Addon.Entity;
				if (((previousValue != value) 
							|| (this._Addon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Addon.Entity = null;
						previousValue.AddonPriceProjections.Remove(this);
					}
					this._Addon.Entity = value;
					if ((value != null))
					{
						value.AddonPriceProjections.Add(this);
						this._AddonId = value.Id;
					}
					else
					{
						this._AddonId = default(long);
					}
					this.SendPropertyChanged("Addon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_AddonPriceProjection", Storage="_District", ThisKey="DistrictId", OtherKey="DistrictId", IsForeignKey=true)]
		public District District
		{
			get
			{
				return this._District.Entity;
			}
			set
			{
				District previousValue = this._District.Entity;
				if (((previousValue != value) 
							|| (this._District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._District.Entity = null;
						previousValue.AddonPriceProjections.Remove(this);
					}
					this._District.Entity = value;
					if ((value != null))
					{
						value.AddonPriceProjections.Add(this);
						this._DistrictId = value.DistrictId;
					}
					else
					{
						this._DistrictId = default(int);
					}
					this.SendPropertyChanged("District");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_AddonPriceProjection", Storage="_Uom", ThisKey="UomId", OtherKey="Id", IsForeignKey=true)]
		public Uom Uom
		{
			get
			{
				return this._Uom.Entity;
			}
			set
			{
				Uom previousValue = this._Uom.Entity;
				if (((previousValue != value) 
							|| (this._Uom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uom.Entity = null;
						previousValue.AddonPriceProjections.Remove(this);
					}
					this._Uom.Entity = value;
					if ((value != null))
					{
						value.AddonPriceProjections.Add(this);
						this._UomId = value.Id;
					}
					else
					{
						this._UomId = default(long);
					}
					this.SendPropertyChanged("Uom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Addon = default(EntityRef<Addon>);
			this._District = default(EntityRef<District>);
			this._Uom = default(EntityRef<Uom>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AggregateProduct")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AggregateProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Code;
		
		private string _Description;
		
		private System.Nullable<long> _UomId;
		
		private System.Nullable<bool> _Active;
		
		private string _DispatchId;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntitySet<AggregateProductPriceProjection> _AggregateProductPriceProjections;
		
		private EntitySet<QuotationAggregate> _QuotationAggregates;
		
		private EntityRef<Uom> _Uom;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUomIdChanging(System.Nullable<long> value);
    partial void OnUomIdChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public AggregateProduct()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UomId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<long> UomId
		{
			get
			{
				return this._UomId;
			}
			set
			{
				if ((this._UomId != value))
				{
					if (this._Uom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUomIdChanging(value);
					this.SendPropertyChanging();
					this._UomId = value;
					this.SendPropertyChanged("UomId");
					this.OnUomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="NVarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AggregateProduct_AggregateProductPriceProjection", Storage="_AggregateProductPriceProjections", ThisKey="Id", OtherKey="AggregateProductId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<AggregateProductPriceProjection> AggregateProductPriceProjections
		{
			get
			{
				if ((this.serializing 
							&& (this._AggregateProductPriceProjections.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AggregateProductPriceProjections;
			}
			set
			{
				this._AggregateProductPriceProjections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AggregateProduct_QuotationAggregate", Storage="_QuotationAggregates", ThisKey="Id", OtherKey="AggregateProductId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<QuotationAggregate> QuotationAggregates
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationAggregates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationAggregates;
			}
			set
			{
				this._QuotationAggregates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_AggregateProduct", Storage="_Uom", ThisKey="UomId", OtherKey="Id", IsForeignKey=true)]
		public Uom Uom
		{
			get
			{
				return this._Uom.Entity;
			}
			set
			{
				Uom previousValue = this._Uom.Entity;
				if (((previousValue != value) 
							|| (this._Uom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uom.Entity = null;
						previousValue.AggregateProducts.Remove(this);
					}
					this._Uom.Entity = value;
					if ((value != null))
					{
						value.AggregateProducts.Add(this);
						this._UomId = value.Id;
					}
					else
					{
						this._UomId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Uom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AggregateProductPriceProjections(AggregateProductPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.AggregateProduct = this;
		}
		
		private void detach_AggregateProductPriceProjections(AggregateProductPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.AggregateProduct = null;
		}
		
		private void attach_QuotationAggregates(QuotationAggregate entity)
		{
			this.SendPropertyChanging();
			entity.AggregateProduct = this;
		}
		
		private void detach_QuotationAggregates(QuotationAggregate entity)
		{
			this.SendPropertyChanging();
			entity.AggregateProduct = null;
		}
		
		private void Initialize()
		{
			this._AggregateProductPriceProjections = new EntitySet<AggregateProductPriceProjection>(new Action<AggregateProductPriceProjection>(this.attach_AggregateProductPriceProjections), new Action<AggregateProductPriceProjection>(this.detach_AggregateProductPriceProjections));
			this._QuotationAggregates = new EntitySet<QuotationAggregate>(new Action<QuotationAggregate>(this.attach_QuotationAggregates), new Action<QuotationAggregate>(this.detach_QuotationAggregates));
			this._Uom = default(EntityRef<Uom>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AggregateProductPriceProjection")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AggregateProductPriceProjection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AggregateProductId;
		
		private int _PlantId;
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntityRef<AggregateProduct> _AggregateProduct;
		
		private EntityRef<Plant> _Plant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAggregateProductIdChanging(long value);
    partial void OnAggregateProductIdChanged();
    partial void OnPlantIdChanging(int value);
    partial void OnPlantIdChanged();
    partial void OnChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDateChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public AggregateProductPriceProjection()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregateProductId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long AggregateProductId
		{
			get
			{
				return this._AggregateProductId;
			}
			set
			{
				if ((this._AggregateProductId != value))
				{
					if (this._AggregateProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAggregateProductIdChanging(value);
					this.SendPropertyChanging();
					this._AggregateProductId = value;
					this.SendPropertyChanged("AggregateProductId");
					this.OnAggregateProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AggregateProduct_AggregateProductPriceProjection", Storage="_AggregateProduct", ThisKey="AggregateProductId", OtherKey="Id", IsForeignKey=true)]
		public AggregateProduct AggregateProduct
		{
			get
			{
				return this._AggregateProduct.Entity;
			}
			set
			{
				AggregateProduct previousValue = this._AggregateProduct.Entity;
				if (((previousValue != value) 
							|| (this._AggregateProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AggregateProduct.Entity = null;
						previousValue.AggregateProductPriceProjections.Remove(this);
					}
					this._AggregateProduct.Entity = value;
					if ((value != null))
					{
						value.AggregateProductPriceProjections.Add(this);
						this._AggregateProductId = value.Id;
					}
					else
					{
						this._AggregateProductId = default(long);
					}
					this.SendPropertyChanged("AggregateProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_AggregateProductPriceProjection", Storage="_Plant", ThisKey="PlantId", OtherKey="PlantId", IsForeignKey=true)]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.AggregateProductPriceProjections.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.AggregateProductPriceProjections.Add(this);
						this._PlantId = value.PlantId;
					}
					else
					{
						this._PlantId = default(int);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._AggregateProduct = default(EntityRef<AggregateProduct>);
			this._Plant = default(EntityRef<Plant>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.APIDataSyncLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class APIDataSyncLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<int> _CompanyId;
		
		private string _ObjectType;
		
		private System.Nullable<System.DateTime> _ImportDate;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnObjectTypeChanging(string value);
    partial void OnObjectTypeChanged();
    partial void OnImportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportDateChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public APIDataSyncLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> ImportDate
		{
			get
			{
				return this._ImportDate;
			}
			set
			{
				if ((this._ImportDate != value))
				{
					this.OnImportDateChanging(value);
					this.SendPropertyChanging();
					this._ImportDate = value;
					this.SendPropertyChanged("ImportDate");
					this.OnImportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.APIFetchHistory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class APIFetchHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _EntityType;
		
		private System.Nullable<System.DateTime> _LastImportDate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private string _Status;
		
		private System.Nullable<int> _RecordCount;
		
		private string _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnEntityTypeChanging(string value);
    partial void OnEntityTypeChanged();
    partial void OnLastImportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastImportDateChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnRecordCountChanging(System.Nullable<int> value);
    partial void OnRecordCountChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public APIFetchHistory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityType", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string EntityType
		{
			get
			{
				return this._EntityType;
			}
			set
			{
				if ((this._EntityType != value))
				{
					this.OnEntityTypeChanging(value);
					this.SendPropertyChanging();
					this._EntityType = value;
					this.SendPropertyChanged("EntityType");
					this.OnEntityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastImportDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> LastImportDate
		{
			get
			{
				return this._LastImportDate;
			}
			set
			{
				if ((this._LastImportDate != value))
				{
					this.OnLastImportDateChanging(value);
					this.SendPropertyChanging();
					this._LastImportDate = value;
					this.SendPropertyChanged("LastImportDate");
					this.OnLastImportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> RecordCount
		{
			get
			{
				return this._RecordCount;
			}
			set
			{
				if ((this._RecordCount != value))
				{
					this.OnRecordCountChanging(value);
					this.SendPropertyChanging();
					this._RecordCount = value;
					this.SendPropertyChanged("RecordCount");
					this.OnRecordCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships1;
		
		private EntitySet<aspnet_Path> _aspnet_Paths;
		
		private EntitySet<aspnet_Path> _aspnet_Paths1;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_Role> _aspnet_Roles1;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
		private EntitySet<aspnet_User> _aspnet_Users1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_Memberships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership1", Storage="_aspnet_Memberships1", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<aspnet_Membership> aspnet_Memberships1
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_Memberships1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_Memberships1;
			}
			set
			{
				this._aspnet_Memberships1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<aspnet_Path> aspnet_Paths
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_Paths.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path1", Storage="_aspnet_Paths1", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<aspnet_Path> aspnet_Paths1
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_Paths1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_Paths1;
			}
			set
			{
				this._aspnet_Paths1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_Roles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role1", Storage="_aspnet_Roles1", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<aspnet_Role> aspnet_Roles1
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_Roles1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_Roles1;
			}
			set
			{
				this._aspnet_Roles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_Users.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User1", Storage="_aspnet_Users1", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<aspnet_User> aspnet_Users1
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_Users1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_Users1;
			}
			set
			{
				this._aspnet_Users1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Memberships1(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application1 = this;
		}
		
		private void detach_aspnet_Memberships1(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application1 = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Paths1(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application1 = this;
		}
		
		private void detach_aspnet_Paths1(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application1 = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles1(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application1 = this;
		}
		
		private void detach_aspnet_Roles1(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application1 = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users1(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application1 = this;
		}
		
		private void detach_aspnet_Users1(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application1 = null;
		}
		
		private void Initialize()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Memberships1 = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships1), new Action<aspnet_Membership>(this.detach_aspnet_Memberships1));
			this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
			this._aspnet_Paths1 = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths1), new Action<aspnet_Path>(this.detach_aspnet_Paths1));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Roles1 = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles1), new Action<aspnet_Role>(this.detach_aspnet_Roles1));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			this._aspnet_Users1 = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users1), new Action<aspnet_User>(this.detach_aspnet_Users1));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntitySet<DistrictUser> _DistrictUsers;
		
		private EntitySet<ChatSubscription> _ChatSubscriptions;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_Application> _aspnet_Application1;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<aspnet_User> _aspnet_User1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if ((this._aspnet_Application.HasLoadedOrAssignedValue || this._aspnet_Application1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if ((this._aspnet_User.HasLoadedOrAssignedValue || this._aspnet_User1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_DistrictUser", Storage="_DistrictUsers", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<DistrictUser> DistrictUsers
		{
			get
			{
				if ((this.serializing 
							&& (this._DistrictUsers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DistrictUsers;
			}
			set
			{
				this._DistrictUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_ChatSubscription", Storage="_ChatSubscriptions", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<ChatSubscription> ChatSubscriptions
		{
			get
			{
				if ((this.serializing 
							&& (this._ChatSubscriptions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ChatSubscriptions;
			}
			set
			{
				this._ChatSubscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership1", Storage="_aspnet_Application1", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application1
		{
			get
			{
				return this._aspnet_Application1.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application1.Entity = null;
						previousValue.aspnet_Memberships1.Remove(this);
					}
					this._aspnet_Application1.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships1.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership1", Storage="_aspnet_User1", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User1
		{
			get
			{
				return this._aspnet_User1.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User1.Entity = null;
						previousValue.aspnet_Membership1 = null;
					}
					this._aspnet_User1.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership1 = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DistrictUsers(DistrictUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Membership = this;
		}
		
		private void detach_DistrictUsers(DistrictUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Membership = null;
		}
		
		private void attach_ChatSubscriptions(ChatSubscription entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Membership = this;
		}
		
		private void detach_ChatSubscriptions(ChatSubscription entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Membership = null;
		}
		
		private void Initialize()
		{
			this._DistrictUsers = new EntitySet<DistrictUser>(new Action<DistrictUser>(this.attach_DistrictUsers), new Action<DistrictUser>(this.detach_DistrictUsers));
			this._ChatSubscriptions = new EntitySet<ChatSubscription>(new Action<ChatSubscription>(this.attach_ChatSubscriptions), new Action<ChatSubscription>(this.detach_ChatSubscriptions));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_Application1 = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._aspnet_User1 = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
		
		private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser1;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers1;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_Application> _aspnet_Application1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Path()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if ((this._aspnet_Application.HasLoadedOrAssignedValue || this._aspnet_Application1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._aspnet_PersonalizationAllUser.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUser.Entity = null;
						previousValue.aspnet_Path = null;
					}
					this._aspnet_PersonalizationAllUser.Entity = value;
					if ((value != null))
					{
						value.aspnet_Path = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser1", Storage="_aspnet_PersonalizationAllUser1", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser1
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_PersonalizationAllUser1.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._aspnet_PersonalizationAllUser1.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUser1.Entity = null;
						previousValue.aspnet_Path1 = null;
					}
					this._aspnet_PersonalizationAllUser1.Entity = value;
					if ((value != null))
					{
						value.aspnet_Path1 = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_PersonalizationPerUsers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser1", Storage="_aspnet_PersonalizationPerUsers1", ThisKey="PathId", OtherKey="PathId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers1
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_PersonalizationPerUsers1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_PersonalizationPerUsers1;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path1", Storage="_aspnet_Application1", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application1
		{
			get
			{
				return this._aspnet_Application1.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application1.Entity = null;
						previousValue.aspnet_Paths1.Remove(this);
					}
					this._aspnet_Application1.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths1.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = null;
		}
		
		private void attach_aspnet_PersonalizationPerUsers1(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path1 = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers1(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path1 = null;
		}
		
		private void Initialize()
		{
			this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
			this._aspnet_PersonalizationAllUser1 = default(EntityRef<aspnet_PersonalizationAllUser>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_PersonalizationPerUsers1 = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers1), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers1));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_Application1 = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
		private EntityRef<aspnet_Path> _aspnet_Path1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUser()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if ((this._aspnet_Path.HasLoadedOrAssignedValue || this._aspnet_Path1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationAllUser = null;
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUser = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser1", Storage="_aspnet_Path1", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path1
		{
			get
			{
				return this._aspnet_Path1.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path1.Entity = null;
						previousValue.aspnet_PersonalizationAllUser1 = null;
					}
					this._aspnet_Path1.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUser1 = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Path1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			this._aspnet_Path1 = default(EntityRef<aspnet_Path>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
		private EntityRef<aspnet_Path> _aspnet_Path1;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<aspnet_User> _aspnet_User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if ((this._aspnet_Path.HasLoadedOrAssignedValue || this._aspnet_Path1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if ((this._aspnet_User.HasLoadedOrAssignedValue || this._aspnet_User1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser1", Storage="_aspnet_Path1", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path1
		{
			get
			{
				return this._aspnet_Path1.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path1.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers1.Remove(this);
					}
					this._aspnet_Path1.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers1.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Path1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser1", Storage="_aspnet_User1", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User1
		{
			get
			{
				return this._aspnet_User1.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User1.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers1.Remove(this);
					}
					this._aspnet_User1.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers1.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			this._aspnet_Path1 = default(EntityRef<aspnet_Path>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._aspnet_User1 = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<aspnet_User> _aspnet_User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if ((this._aspnet_User.HasLoadedOrAssignedValue || this._aspnet_User1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile1", Storage="_aspnet_User1", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User1
		{
			get
			{
				return this._aspnet_User1.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User1.Entity = null;
						previousValue.aspnet_Profile1 = null;
					}
					this._aspnet_User1.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile1 = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._aspnet_User1 = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles1;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_Application> _aspnet_Application1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if ((this._aspnet_Application.HasLoadedOrAssignedValue || this._aspnet_Application1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_UsersInRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole1", Storage="_aspnet_UsersInRoles1", ThisKey="RoleId", OtherKey="RoleId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles1
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_UsersInRoles1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_UsersInRoles1;
			}
			set
			{
				this._aspnet_UsersInRoles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role1", Storage="_aspnet_Application1", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application1
		{
			get
			{
				return this._aspnet_Application1.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application1.Entity = null;
						previousValue.aspnet_Roles1.Remove(this);
					}
					this._aspnet_Application1.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles1.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
		
		private void attach_aspnet_UsersInRoles1(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role1 = this;
		}
		
		private void detach_aspnet_UsersInRoles1(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role1 = null;
		}
		
		private void Initialize()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_UsersInRoles1 = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles1), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles1));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_Application1 = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership1;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers1;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile1;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles1;
		
		private EntitySet<CompanyUser> _CompanyUsers;
		
		private EntitySet<ProjectBidder> _ProjectBidders;
		
		private EntitySet<ProjectNote> _ProjectNotes;
		
		private EntitySet<QuotationRecipent> _QuotationRecipents;
		
		private EntitySet<SupportRequest> _SupportRequests;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_Application> _aspnet_Application1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if ((this._aspnet_Application.HasLoadedOrAssignedValue || this._aspnet_Application1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership1", Storage="_aspnet_Membership1", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public aspnet_Membership aspnet_Membership1
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_Membership1.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._aspnet_Membership1.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership1.Entity = null;
						previousValue.aspnet_User1 = null;
					}
					this._aspnet_Membership1.Entity = value;
					if ((value != null))
					{
						value.aspnet_User1 = this;
					}
					this.SendPropertyChanged("aspnet_Membership1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_PersonalizationPerUsers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser1", Storage="_aspnet_PersonalizationPerUsers1", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers1
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_PersonalizationPerUsers1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_PersonalizationPerUsers1;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile1", Storage="_aspnet_Profile1", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public aspnet_Profile aspnet_Profile1
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_Profile1.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._aspnet_Profile1.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile1.Entity = null;
						previousValue.aspnet_User1 = null;
					}
					this._aspnet_Profile1.Entity = value;
					if ((value != null))
					{
						value.aspnet_User1 = this;
					}
					this.SendPropertyChanged("aspnet_Profile1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_UsersInRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole1", Storage="_aspnet_UsersInRoles1", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles1
		{
			get
			{
				if ((this.serializing 
							&& (this._aspnet_UsersInRoles1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._aspnet_UsersInRoles1;
			}
			set
			{
				this._aspnet_UsersInRoles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_CompanyUser", Storage="_CompanyUsers", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<CompanyUser> CompanyUsers
		{
			get
			{
				if ((this.serializing 
							&& (this._CompanyUsers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CompanyUsers;
			}
			set
			{
				this._CompanyUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_ProjectBidder", Storage="_ProjectBidders", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<ProjectBidder> ProjectBidders
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectBidders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectBidders;
			}
			set
			{
				this._ProjectBidders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_ProjectNote", Storage="_ProjectNotes", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<ProjectNote> ProjectNotes
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectNotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectNotes;
			}
			set
			{
				this._ProjectNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_QuotationRecipent", Storage="_QuotationRecipents", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<QuotationRecipent> QuotationRecipents
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationRecipents.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationRecipents;
			}
			set
			{
				this._QuotationRecipents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SupportRequest", Storage="_SupportRequests", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<SupportRequest> SupportRequests
		{
			get
			{
				if ((this.serializing 
							&& (this._SupportRequests.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SupportRequests;
			}
			set
			{
				this._SupportRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User1", Storage="_aspnet_Application1", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application1
		{
			get
			{
				return this._aspnet_Application1.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application1.Entity = null;
						previousValue.aspnet_Users1.Remove(this);
					}
					this._aspnet_Application1.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users1.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_PersonalizationPerUsers1(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User1 = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers1(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User1 = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_UsersInRoles1(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User1 = this;
		}
		
		private void detach_aspnet_UsersInRoles1(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User1 = null;
		}
		
		private void attach_CompanyUsers(CompanyUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_CompanyUsers(CompanyUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_ProjectBidders(ProjectBidder entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_ProjectBidders(ProjectBidder entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_ProjectNotes(ProjectNote entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_ProjectNotes(ProjectNote entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_QuotationRecipents(QuotationRecipent entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_QuotationRecipents(QuotationRecipent entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_SupportRequests(SupportRequest entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_SupportRequests(SupportRequest entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void Initialize()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_Membership1 = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_PersonalizationPerUsers1 = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers1), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers1));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_Profile1 = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_UsersInRoles1 = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles1), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles1));
			this._CompanyUsers = new EntitySet<CompanyUser>(new Action<CompanyUser>(this.attach_CompanyUsers), new Action<CompanyUser>(this.detach_CompanyUsers));
			this._ProjectBidders = new EntitySet<ProjectBidder>(new Action<ProjectBidder>(this.attach_ProjectBidders), new Action<ProjectBidder>(this.detach_ProjectBidders));
			this._ProjectNotes = new EntitySet<ProjectNote>(new Action<ProjectNote>(this.attach_ProjectNotes), new Action<ProjectNote>(this.detach_ProjectNotes));
			this._QuotationRecipents = new EntitySet<QuotationRecipent>(new Action<QuotationRecipent>(this.attach_QuotationRecipents), new Action<QuotationRecipent>(this.detach_QuotationRecipents));
			this._SupportRequests = new EntitySet<SupportRequest>(new Action<SupportRequest>(this.attach_SupportRequests), new Action<SupportRequest>(this.detach_SupportRequests));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_Application1 = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_Role> _aspnet_Role1;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<aspnet_User> _aspnet_User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if ((this._aspnet_User.HasLoadedOrAssignedValue || this._aspnet_User1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if ((this._aspnet_Role.HasLoadedOrAssignedValue || this._aspnet_Role1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole1", Storage="_aspnet_Role1", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role1
		{
			get
			{
				return this._aspnet_Role1.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role1.Entity = null;
						previousValue.aspnet_UsersInRoles1.Remove(this);
					}
					this._aspnet_Role1.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles1.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole1", Storage="_aspnet_User1", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User1
		{
			get
			{
				return this._aspnet_User1.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User1.Entity = null;
						previousValue.aspnet_UsersInRoles1.Remove(this);
					}
					this._aspnet_User1.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles1.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_Role1 = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._aspnet_User1 = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Event()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlockProduct")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BlockProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Code;
		
		private string _Description;
		
		private System.Nullable<long> _UomId;
		
		private System.Nullable<bool> _Active;
		
		private string _DispatchId;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntitySet<BlockProductPriceProjection> _BlockProductPriceProjections;
		
		private EntitySet<QuotationBlock> _QuotationBlocks;
		
		private EntityRef<Uom> _Uom;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUomIdChanging(System.Nullable<long> value);
    partial void OnUomIdChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public BlockProduct()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UomId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<long> UomId
		{
			get
			{
				return this._UomId;
			}
			set
			{
				if ((this._UomId != value))
				{
					if (this._Uom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUomIdChanging(value);
					this.SendPropertyChanging();
					this._UomId = value;
					this.SendPropertyChanged("UomId");
					this.OnUomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="NVarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlockProduct_BlockProductPriceProjection", Storage="_BlockProductPriceProjections", ThisKey="Id", OtherKey="BlockProductId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<BlockProductPriceProjection> BlockProductPriceProjections
		{
			get
			{
				if ((this.serializing 
							&& (this._BlockProductPriceProjections.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BlockProductPriceProjections;
			}
			set
			{
				this._BlockProductPriceProjections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlockProduct_QuotationBlock", Storage="_QuotationBlocks", ThisKey="Id", OtherKey="BlockProductId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<QuotationBlock> QuotationBlocks
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationBlocks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationBlocks;
			}
			set
			{
				this._QuotationBlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_BlockProduct", Storage="_Uom", ThisKey="UomId", OtherKey="Id", IsForeignKey=true)]
		public Uom Uom
		{
			get
			{
				return this._Uom.Entity;
			}
			set
			{
				Uom previousValue = this._Uom.Entity;
				if (((previousValue != value) 
							|| (this._Uom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uom.Entity = null;
						previousValue.BlockProducts.Remove(this);
					}
					this._Uom.Entity = value;
					if ((value != null))
					{
						value.BlockProducts.Add(this);
						this._UomId = value.Id;
					}
					else
					{
						this._UomId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Uom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlockProductPriceProjections(BlockProductPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.BlockProduct = this;
		}
		
		private void detach_BlockProductPriceProjections(BlockProductPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.BlockProduct = null;
		}
		
		private void attach_QuotationBlocks(QuotationBlock entity)
		{
			this.SendPropertyChanging();
			entity.BlockProduct = this;
		}
		
		private void detach_QuotationBlocks(QuotationBlock entity)
		{
			this.SendPropertyChanging();
			entity.BlockProduct = null;
		}
		
		private void Initialize()
		{
			this._BlockProductPriceProjections = new EntitySet<BlockProductPriceProjection>(new Action<BlockProductPriceProjection>(this.attach_BlockProductPriceProjections), new Action<BlockProductPriceProjection>(this.detach_BlockProductPriceProjections));
			this._QuotationBlocks = new EntitySet<QuotationBlock>(new Action<QuotationBlock>(this.attach_QuotationBlocks), new Action<QuotationBlock>(this.detach_QuotationBlocks));
			this._Uom = default(EntityRef<Uom>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlockProductPriceProjection")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BlockProductPriceProjection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _BlockProductId;
		
		private int _PlantId;
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntityRef<BlockProduct> _BlockProduct;
		
		private EntityRef<Plant> _Plant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBlockProductIdChanging(long value);
    partial void OnBlockProductIdChanged();
    partial void OnPlantIdChanging(int value);
    partial void OnPlantIdChanged();
    partial void OnChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDateChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public BlockProductPriceProjection()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockProductId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long BlockProductId
		{
			get
			{
				return this._BlockProductId;
			}
			set
			{
				if ((this._BlockProductId != value))
				{
					if (this._BlockProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockProductIdChanging(value);
					this.SendPropertyChanging();
					this._BlockProductId = value;
					this.SendPropertyChanged("BlockProductId");
					this.OnBlockProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlockProduct_BlockProductPriceProjection", Storage="_BlockProduct", ThisKey="BlockProductId", OtherKey="Id", IsForeignKey=true)]
		public BlockProduct BlockProduct
		{
			get
			{
				return this._BlockProduct.Entity;
			}
			set
			{
				BlockProduct previousValue = this._BlockProduct.Entity;
				if (((previousValue != value) 
							|| (this._BlockProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlockProduct.Entity = null;
						previousValue.BlockProductPriceProjections.Remove(this);
					}
					this._BlockProduct.Entity = value;
					if ((value != null))
					{
						value.BlockProductPriceProjections.Add(this);
						this._BlockProductId = value.Id;
					}
					else
					{
						this._BlockProductId = default(long);
					}
					this.SendPropertyChanged("BlockProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_BlockProductPriceProjection", Storage="_Plant", ThisKey="PlantId", OtherKey="PlantId", IsForeignKey=true)]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.BlockProductPriceProjections.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.BlockProductPriceProjections.Add(this);
						this._PlantId = value.PlantId;
					}
					else
					{
						this._PlantId = default(int);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BlockProduct = default(EntityRef<BlockProduct>);
			this._Plant = default(EntityRef<Plant>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChatConversation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ChatConversation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private int _ProjectId;
		
		private System.Nullable<long> _QuoteId;
		
		private System.Nullable<System.Guid> _CreatedByUserId;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntitySet<ChatMessage> _ChatMessages;
		
		private EntitySet<ChatSubscription> _ChatSubscriptions;
		
		private EntitySet<ChatNotification> _ChatNotifications;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnQuoteIdChanging(System.Nullable<long> value);
    partial void OnQuoteIdChanged();
    partial void OnCreatedByUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public ChatConversation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<long> QuoteId
		{
			get
			{
				return this._QuoteId;
			}
			set
			{
				if ((this._QuoteId != value))
				{
					this.OnQuoteIdChanging(value);
					this.SendPropertyChanging();
					this._QuoteId = value;
					this.SendPropertyChanged("QuoteId");
					this.OnQuoteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.Guid> CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatConversation_ChatMessage", Storage="_ChatMessages", ThisKey="Id", OtherKey="ChatConversationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<ChatMessage> ChatMessages
		{
			get
			{
				if ((this.serializing 
							&& (this._ChatMessages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ChatMessages;
			}
			set
			{
				this._ChatMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatConversation_ChatSubscription", Storage="_ChatSubscriptions", ThisKey="Id", OtherKey="ChatConversationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<ChatSubscription> ChatSubscriptions
		{
			get
			{
				if ((this.serializing 
							&& (this._ChatSubscriptions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ChatSubscriptions;
			}
			set
			{
				this._ChatSubscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatConversation_ChatNotification", Storage="_ChatNotifications", ThisKey="Id", OtherKey="ChatConversationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<ChatNotification> ChatNotifications
		{
			get
			{
				if ((this.serializing 
							&& (this._ChatNotifications.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ChatNotifications;
			}
			set
			{
				this._ChatNotifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChatMessages(ChatMessage entity)
		{
			this.SendPropertyChanging();
			entity.ChatConversation = this;
		}
		
		private void detach_ChatMessages(ChatMessage entity)
		{
			this.SendPropertyChanging();
			entity.ChatConversation = null;
		}
		
		private void attach_ChatSubscriptions(ChatSubscription entity)
		{
			this.SendPropertyChanging();
			entity.ChatConversation = this;
		}
		
		private void detach_ChatSubscriptions(ChatSubscription entity)
		{
			this.SendPropertyChanging();
			entity.ChatConversation = null;
		}
		
		private void attach_ChatNotifications(ChatNotification entity)
		{
			this.SendPropertyChanging();
			entity.ChatConversation = this;
		}
		
		private void detach_ChatNotifications(ChatNotification entity)
		{
			this.SendPropertyChanging();
			entity.ChatConversation = null;
		}
		
		private void Initialize()
		{
			this._ChatMessages = new EntitySet<ChatMessage>(new Action<ChatMessage>(this.attach_ChatMessages), new Action<ChatMessage>(this.detach_ChatMessages));
			this._ChatSubscriptions = new EntitySet<ChatSubscription>(new Action<ChatSubscription>(this.attach_ChatSubscriptions), new Action<ChatSubscription>(this.detach_ChatSubscriptions));
			this._ChatNotifications = new EntitySet<ChatNotification>(new Action<ChatNotification>(this.attach_ChatNotifications), new Action<ChatNotification>(this.detach_ChatNotifications));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyId;
		
		private string _Name;
		
		private string _ContactPerson;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private System.Nullable<bool> _Active;
		
		private string _PlantTerm;
		
		private System.DateTime _CurrentMonth;
		
		private string _LocationTerm;
		
		private System.Nullable<bool> _CurrentProjectionFrozen;
		
		private string _ValuationTerm;
		
		private System.Nullable<int> _ForecastNewProjectStatusId;
		
		private System.Nullable<int> _PipelineNewProjectStatusId;
		
		private string _LicenseKey;
		
		private string _DeliveryQtyUomSingular;
		
		private string _DeliveryQtyUomPlural;
		
		private string _DeliveryDistance;
		
		private System.Nullable<bool> _EnableBlock;
		
		private System.Nullable<bool> _EnableAggregate;
		
		private EntitySet<AdditionalProduct> _AdditionalProducts;
		
		private EntitySet<CompanyUser> _CompanyUsers;
		
		private EntitySet<Competitor> _Competitors;
		
		private EntitySet<ConcreteProduct> _ConcreteProducts;
		
		private EntitySet<Contractor> _Contractors;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<District> _Districts;
		
		private EntitySet<MarketSegment> _MarketSegments;
		
		private EntitySet<Plant> _Plants;
		
		private EntitySet<ProjectStatus> _ProjectStatus;
		
		private EntitySet<Region> _Regions;
		
		private EntitySet<SalesStaff> _SalesStaffs;
		
		private EntitySet<UnitOfMeasure> _UnitOfMeasures;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnPlantTermChanging(string value);
    partial void OnPlantTermChanged();
    partial void OnCurrentMonthChanging(System.DateTime value);
    partial void OnCurrentMonthChanged();
    partial void OnLocationTermChanging(string value);
    partial void OnLocationTermChanged();
    partial void OnCurrentProjectionFrozenChanging(System.Nullable<bool> value);
    partial void OnCurrentProjectionFrozenChanged();
    partial void OnValuationTermChanging(string value);
    partial void OnValuationTermChanged();
    partial void OnForecastNewProjectStatusIdChanging(System.Nullable<int> value);
    partial void OnForecastNewProjectStatusIdChanged();
    partial void OnPipelineNewProjectStatusIdChanging(System.Nullable<int> value);
    partial void OnPipelineNewProjectStatusIdChanged();
    partial void OnLicenseKeyChanging(string value);
    partial void OnLicenseKeyChanged();
    partial void OnDeliveryQtyUomSingularChanging(string value);
    partial void OnDeliveryQtyUomSingularChanged();
    partial void OnDeliveryQtyUomPluralChanging(string value);
    partial void OnDeliveryQtyUomPluralChanged();
    partial void OnDeliveryDistanceChanging(string value);
    partial void OnDeliveryDistanceChanged();
    partial void OnEnableBlockChanging(System.Nullable<bool> value);
    partial void OnEnableBlockChanged();
    partial void OnEnableAggregateChanging(System.Nullable<bool> value);
    partial void OnEnableAggregateChanged();
    #endregion
		
		public Company()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantTerm", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string PlantTerm
		{
			get
			{
				return this._PlantTerm;
			}
			set
			{
				if ((this._PlantTerm != value))
				{
					this.OnPlantTermChanging(value);
					this.SendPropertyChanging();
					this._PlantTerm = value;
					this.SendPropertyChanged("PlantTerm");
					this.OnPlantTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentMonth", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.DateTime CurrentMonth
		{
			get
			{
				return this._CurrentMonth;
			}
			set
			{
				if ((this._CurrentMonth != value))
				{
					this.OnCurrentMonthChanging(value);
					this.SendPropertyChanging();
					this._CurrentMonth = value;
					this.SendPropertyChanged("CurrentMonth");
					this.OnCurrentMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationTerm", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string LocationTerm
		{
			get
			{
				return this._LocationTerm;
			}
			set
			{
				if ((this._LocationTerm != value))
				{
					this.OnLocationTermChanging(value);
					this.SendPropertyChanging();
					this._LocationTerm = value;
					this.SendPropertyChanged("LocationTerm");
					this.OnLocationTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentProjectionFrozen", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<bool> CurrentProjectionFrozen
		{
			get
			{
				return this._CurrentProjectionFrozen;
			}
			set
			{
				if ((this._CurrentProjectionFrozen != value))
				{
					this.OnCurrentProjectionFrozenChanging(value);
					this.SendPropertyChanging();
					this._CurrentProjectionFrozen = value;
					this.SendPropertyChanged("CurrentProjectionFrozen");
					this.OnCurrentProjectionFrozenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValuationTerm", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string ValuationTerm
		{
			get
			{
				return this._ValuationTerm;
			}
			set
			{
				if ((this._ValuationTerm != value))
				{
					this.OnValuationTermChanging(value);
					this.SendPropertyChanging();
					this._ValuationTerm = value;
					this.SendPropertyChanged("ValuationTerm");
					this.OnValuationTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForecastNewProjectStatusId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> ForecastNewProjectStatusId
		{
			get
			{
				return this._ForecastNewProjectStatusId;
			}
			set
			{
				if ((this._ForecastNewProjectStatusId != value))
				{
					this.OnForecastNewProjectStatusIdChanging(value);
					this.SendPropertyChanging();
					this._ForecastNewProjectStatusId = value;
					this.SendPropertyChanged("ForecastNewProjectStatusId");
					this.OnForecastNewProjectStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineNewProjectStatusId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> PipelineNewProjectStatusId
		{
			get
			{
				return this._PipelineNewProjectStatusId;
			}
			set
			{
				if ((this._PipelineNewProjectStatusId != value))
				{
					this.OnPipelineNewProjectStatusIdChanging(value);
					this.SendPropertyChanging();
					this._PipelineNewProjectStatusId = value;
					this.SendPropertyChanged("PipelineNewProjectStatusId");
					this.OnPipelineNewProjectStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseKey", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string LicenseKey
		{
			get
			{
				return this._LicenseKey;
			}
			set
			{
				if ((this._LicenseKey != value))
				{
					this.OnLicenseKeyChanging(value);
					this.SendPropertyChanging();
					this._LicenseKey = value;
					this.SendPropertyChanged("LicenseKey");
					this.OnLicenseKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryQtyUomSingular", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string DeliveryQtyUomSingular
		{
			get
			{
				return this._DeliveryQtyUomSingular;
			}
			set
			{
				if ((this._DeliveryQtyUomSingular != value))
				{
					this.OnDeliveryQtyUomSingularChanging(value);
					this.SendPropertyChanging();
					this._DeliveryQtyUomSingular = value;
					this.SendPropertyChanged("DeliveryQtyUomSingular");
					this.OnDeliveryQtyUomSingularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryQtyUomPlural", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string DeliveryQtyUomPlural
		{
			get
			{
				return this._DeliveryQtyUomPlural;
			}
			set
			{
				if ((this._DeliveryQtyUomPlural != value))
				{
					this.OnDeliveryQtyUomPluralChanging(value);
					this.SendPropertyChanging();
					this._DeliveryQtyUomPlural = value;
					this.SendPropertyChanged("DeliveryQtyUomPlural");
					this.OnDeliveryQtyUomPluralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDistance", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string DeliveryDistance
		{
			get
			{
				return this._DeliveryDistance;
			}
			set
			{
				if ((this._DeliveryDistance != value))
				{
					this.OnDeliveryDistanceChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDistance = value;
					this.SendPropertyChanged("DeliveryDistance");
					this.OnDeliveryDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableBlock", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<bool> EnableBlock
		{
			get
			{
				return this._EnableBlock;
			}
			set
			{
				if ((this._EnableBlock != value))
				{
					this.OnEnableBlockChanging(value);
					this.SendPropertyChanging();
					this._EnableBlock = value;
					this.SendPropertyChanged("EnableBlock");
					this.OnEnableBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableAggregate", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<bool> EnableAggregate
		{
			get
			{
				return this._EnableAggregate;
			}
			set
			{
				if ((this._EnableAggregate != value))
				{
					this.OnEnableAggregateChanging(value);
					this.SendPropertyChanging();
					this._EnableAggregate = value;
					this.SendPropertyChanged("EnableAggregate");
					this.OnEnableAggregateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_AdditionalProduct", Storage="_AdditionalProducts", ThisKey="CompanyId", OtherKey="CompanyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<AdditionalProduct> AdditionalProducts
		{
			get
			{
				if ((this.serializing 
							&& (this._AdditionalProducts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AdditionalProducts;
			}
			set
			{
				this._AdditionalProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_CompanyUser", Storage="_CompanyUsers", ThisKey="CompanyId", OtherKey="CompanyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<CompanyUser> CompanyUsers
		{
			get
			{
				if ((this.serializing 
							&& (this._CompanyUsers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CompanyUsers;
			}
			set
			{
				this._CompanyUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Competitor", Storage="_Competitors", ThisKey="CompanyId", OtherKey="CompanyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<Competitor> Competitors
		{
			get
			{
				if ((this.serializing 
							&& (this._Competitors.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Competitors;
			}
			set
			{
				this._Competitors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ConcreteProduct", Storage="_ConcreteProducts", ThisKey="CompanyId", OtherKey="CompanyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public EntitySet<ConcreteProduct> ConcreteProducts
		{
			get
			{
				if ((this.serializing 
							&& (this._ConcreteProducts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ConcreteProducts;
			}
			set
			{
				this._ConcreteProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Contractor", Storage="_Contractors", ThisKey="CompanyId", OtherKey="CompanyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public EntitySet<Contractor> Contractors
		{
			get
			{
				if ((this.serializing 
							&& (this._Contractors.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Contractors;
			}
			set
			{
				this._Contractors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Customer", Storage="_Customers", ThisKey="CompanyId", OtherKey="CompanyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<Customer> Customers
		{
			get
			{
				if ((this.serializing 
							&& (this._Customers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_District", Storage="_Districts", ThisKey="CompanyId", OtherKey="CompanyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public EntitySet<District> Districts
		{
			get
			{
				if ((this.serializing 
							&& (this._Districts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Districts;
			}
			set
			{
				this._Districts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_MarketSegment", Storage="_MarketSegments", ThisKey="CompanyId", OtherKey="CompanyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public EntitySet<MarketSegment> MarketSegments
		{
			get
			{
				if ((this.serializing 
							&& (this._MarketSegments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MarketSegments;
			}
			set
			{
				this._MarketSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Plant", Storage="_Plants", ThisKey="CompanyId", OtherKey="CompanyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35, EmitDefaultValue=false)]
		public EntitySet<Plant> Plants
		{
			get
			{
				if ((this.serializing 
							&& (this._Plants.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Plants;
			}
			set
			{
				this._Plants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ProjectStatus", Storage="_ProjectStatus", ThisKey="CompanyId", OtherKey="CompanyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36, EmitDefaultValue=false)]
		public EntitySet<ProjectStatus> ProjectStatus
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectStatus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectStatus;
			}
			set
			{
				this._ProjectStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Region", Storage="_Regions", ThisKey="CompanyId", OtherKey="CompanyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37, EmitDefaultValue=false)]
		public EntitySet<Region> Regions
		{
			get
			{
				if ((this.serializing 
							&& (this._Regions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Regions;
			}
			set
			{
				this._Regions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_SalesStaff", Storage="_SalesStaffs", ThisKey="CompanyId", OtherKey="CompanyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38, EmitDefaultValue=false)]
		public EntitySet<SalesStaff> SalesStaffs
		{
			get
			{
				if ((this.serializing 
							&& (this._SalesStaffs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SalesStaffs;
			}
			set
			{
				this._SalesStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_UnitOfMeasure", Storage="_UnitOfMeasures", ThisKey="CompanyId", OtherKey="CompanyId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39, EmitDefaultValue=false)]
		public EntitySet<UnitOfMeasure> UnitOfMeasures
		{
			get
			{
				if ((this.serializing 
							&& (this._UnitOfMeasures.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UnitOfMeasures;
			}
			set
			{
				this._UnitOfMeasures.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdditionalProducts(AdditionalProduct entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_AdditionalProducts(AdditionalProduct entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_CompanyUsers(CompanyUser entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_CompanyUsers(CompanyUser entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Competitors(Competitor entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Competitors(Competitor entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_ConcreteProducts(ConcreteProduct entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_ConcreteProducts(ConcreteProduct entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Contractors(Contractor entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Contractors(Contractor entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_MarketSegments(MarketSegment entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_MarketSegments(MarketSegment entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Plants(Plant entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Plants(Plant entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_ProjectStatus(ProjectStatus entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_ProjectStatus(ProjectStatus entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Regions(Region entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Regions(Region entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_SalesStaffs(SalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_SalesStaffs(SalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_UnitOfMeasures(UnitOfMeasure entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_UnitOfMeasures(UnitOfMeasure entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void Initialize()
		{
			this._AdditionalProducts = new EntitySet<AdditionalProduct>(new Action<AdditionalProduct>(this.attach_AdditionalProducts), new Action<AdditionalProduct>(this.detach_AdditionalProducts));
			this._CompanyUsers = new EntitySet<CompanyUser>(new Action<CompanyUser>(this.attach_CompanyUsers), new Action<CompanyUser>(this.detach_CompanyUsers));
			this._Competitors = new EntitySet<Competitor>(new Action<Competitor>(this.attach_Competitors), new Action<Competitor>(this.detach_Competitors));
			this._ConcreteProducts = new EntitySet<ConcreteProduct>(new Action<ConcreteProduct>(this.attach_ConcreteProducts), new Action<ConcreteProduct>(this.detach_ConcreteProducts));
			this._Contractors = new EntitySet<Contractor>(new Action<Contractor>(this.attach_Contractors), new Action<Contractor>(this.detach_Contractors));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Districts = new EntitySet<District>(new Action<District>(this.attach_Districts), new Action<District>(this.detach_Districts));
			this._MarketSegments = new EntitySet<MarketSegment>(new Action<MarketSegment>(this.attach_MarketSegments), new Action<MarketSegment>(this.detach_MarketSegments));
			this._Plants = new EntitySet<Plant>(new Action<Plant>(this.attach_Plants), new Action<Plant>(this.detach_Plants));
			this._ProjectStatus = new EntitySet<ProjectStatus>(new Action<ProjectStatus>(this.attach_ProjectStatus), new Action<ProjectStatus>(this.detach_ProjectStatus));
			this._Regions = new EntitySet<Region>(new Action<Region>(this.attach_Regions), new Action<Region>(this.detach_Regions));
			this._SalesStaffs = new EntitySet<SalesStaff>(new Action<SalesStaff>(this.attach_SalesStaffs), new Action<SalesStaff>(this.detach_SalesStaffs));
			this._UnitOfMeasures = new EntitySet<UnitOfMeasure>(new Action<UnitOfMeasure>(this.attach_UnitOfMeasures), new Action<UnitOfMeasure>(this.detach_UnitOfMeasures));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanySettings")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CompanySetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<bool> _EnableAPI;
		
		private string _APIEndPoint;
		
		private string _ClientId;
		
		private string _ClientKey;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<bool> _ImportCustomers;
		
		private System.Nullable<bool> _ImportProducts;
		
		private System.Nullable<bool> _ImportSalesStaff;
		
		private System.Nullable<bool> _ImportPlants;
		
		private System.Nullable<bool> _ImportRawMaterialsAndTypes;
		
		private System.Nullable<bool> _ImportStatusTypes;
		
		private System.Nullable<bool> _ImportTaxStatus;
		
		private System.Nullable<bool> _ImportMarketSegments;
		
		private System.Nullable<bool> _ImportUOMTypes;
		
		private System.Nullable<bool> _PushQuotes;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<int> _MaxUsers;
		
		private System.Nullable<int> _MaxSalesStaff;
		
		private System.Nullable<bool> _ESIModules;
		
		private System.Nullable<bool> _DisableCustomerStatusSync;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnEnableAPIChanging(System.Nullable<bool> value);
    partial void OnEnableAPIChanged();
    partial void OnAPIEndPointChanging(string value);
    partial void OnAPIEndPointChanged();
    partial void OnClientIdChanging(string value);
    partial void OnClientIdChanged();
    partial void OnClientKeyChanging(string value);
    partial void OnClientKeyChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnImportCustomersChanging(System.Nullable<bool> value);
    partial void OnImportCustomersChanged();
    partial void OnImportProductsChanging(System.Nullable<bool> value);
    partial void OnImportProductsChanged();
    partial void OnImportSalesStaffChanging(System.Nullable<bool> value);
    partial void OnImportSalesStaffChanged();
    partial void OnImportPlantsChanging(System.Nullable<bool> value);
    partial void OnImportPlantsChanged();
    partial void OnImportRawMaterialsAndTypesChanging(System.Nullable<bool> value);
    partial void OnImportRawMaterialsAndTypesChanged();
    partial void OnImportStatusTypesChanging(System.Nullable<bool> value);
    partial void OnImportStatusTypesChanged();
    partial void OnImportTaxStatusChanging(System.Nullable<bool> value);
    partial void OnImportTaxStatusChanged();
    partial void OnImportMarketSegmentsChanging(System.Nullable<bool> value);
    partial void OnImportMarketSegmentsChanged();
    partial void OnImportUOMTypesChanging(System.Nullable<bool> value);
    partial void OnImportUOMTypesChanged();
    partial void OnPushQuotesChanging(System.Nullable<bool> value);
    partial void OnPushQuotesChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnMaxUsersChanging(System.Nullable<int> value);
    partial void OnMaxUsersChanged();
    partial void OnMaxSalesStaffChanging(System.Nullable<int> value);
    partial void OnMaxSalesStaffChanged();
    partial void OnESIModulesChanging(System.Nullable<bool> value);
    partial void OnESIModulesChanged();
    partial void OnDisableCustomerStatusSyncChanging(System.Nullable<bool> value);
    partial void OnDisableCustomerStatusSyncChanged();
    #endregion
		
		public CompanySetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableAPI", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<bool> EnableAPI
		{
			get
			{
				return this._EnableAPI;
			}
			set
			{
				if ((this._EnableAPI != value))
				{
					this.OnEnableAPIChanging(value);
					this.SendPropertyChanging();
					this._EnableAPI = value;
					this.SendPropertyChanged("EnableAPI");
					this.OnEnableAPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIEndPoint", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string APIEndPoint
		{
			get
			{
				return this._APIEndPoint;
			}
			set
			{
				if ((this._APIEndPoint != value))
				{
					this.OnAPIEndPointChanging(value);
					this.SendPropertyChanging();
					this._APIEndPoint = value;
					this.SendPropertyChanged("APIEndPoint");
					this.OnAPIEndPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientKey", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ClientKey
		{
			get
			{
				return this._ClientKey;
			}
			set
			{
				if ((this._ClientKey != value))
				{
					this.OnClientKeyChanging(value);
					this.SendPropertyChanging();
					this._ClientKey = value;
					this.SendPropertyChanged("ClientKey");
					this.OnClientKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportCustomers", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> ImportCustomers
		{
			get
			{
				return this._ImportCustomers;
			}
			set
			{
				if ((this._ImportCustomers != value))
				{
					this.OnImportCustomersChanging(value);
					this.SendPropertyChanging();
					this._ImportCustomers = value;
					this.SendPropertyChanged("ImportCustomers");
					this.OnImportCustomersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportProducts", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> ImportProducts
		{
			get
			{
				return this._ImportProducts;
			}
			set
			{
				if ((this._ImportProducts != value))
				{
					this.OnImportProductsChanging(value);
					this.SendPropertyChanging();
					this._ImportProducts = value;
					this.SendPropertyChanged("ImportProducts");
					this.OnImportProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportSalesStaff", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> ImportSalesStaff
		{
			get
			{
				return this._ImportSalesStaff;
			}
			set
			{
				if ((this._ImportSalesStaff != value))
				{
					this.OnImportSalesStaffChanging(value);
					this.SendPropertyChanging();
					this._ImportSalesStaff = value;
					this.SendPropertyChanged("ImportSalesStaff");
					this.OnImportSalesStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPlants", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> ImportPlants
		{
			get
			{
				return this._ImportPlants;
			}
			set
			{
				if ((this._ImportPlants != value))
				{
					this.OnImportPlantsChanging(value);
					this.SendPropertyChanging();
					this._ImportPlants = value;
					this.SendPropertyChanged("ImportPlants");
					this.OnImportPlantsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportRawMaterialsAndTypes", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> ImportRawMaterialsAndTypes
		{
			get
			{
				return this._ImportRawMaterialsAndTypes;
			}
			set
			{
				if ((this._ImportRawMaterialsAndTypes != value))
				{
					this.OnImportRawMaterialsAndTypesChanging(value);
					this.SendPropertyChanging();
					this._ImportRawMaterialsAndTypes = value;
					this.SendPropertyChanged("ImportRawMaterialsAndTypes");
					this.OnImportRawMaterialsAndTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportStatusTypes", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> ImportStatusTypes
		{
			get
			{
				return this._ImportStatusTypes;
			}
			set
			{
				if ((this._ImportStatusTypes != value))
				{
					this.OnImportStatusTypesChanging(value);
					this.SendPropertyChanging();
					this._ImportStatusTypes = value;
					this.SendPropertyChanged("ImportStatusTypes");
					this.OnImportStatusTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportTaxStatus", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<bool> ImportTaxStatus
		{
			get
			{
				return this._ImportTaxStatus;
			}
			set
			{
				if ((this._ImportTaxStatus != value))
				{
					this.OnImportTaxStatusChanging(value);
					this.SendPropertyChanging();
					this._ImportTaxStatus = value;
					this.SendPropertyChanged("ImportTaxStatus");
					this.OnImportTaxStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportMarketSegments", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> ImportMarketSegments
		{
			get
			{
				return this._ImportMarketSegments;
			}
			set
			{
				if ((this._ImportMarketSegments != value))
				{
					this.OnImportMarketSegmentsChanging(value);
					this.SendPropertyChanging();
					this._ImportMarketSegments = value;
					this.SendPropertyChanged("ImportMarketSegments");
					this.OnImportMarketSegmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUOMTypes", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<bool> ImportUOMTypes
		{
			get
			{
				return this._ImportUOMTypes;
			}
			set
			{
				if ((this._ImportUOMTypes != value))
				{
					this.OnImportUOMTypesChanging(value);
					this.SendPropertyChanging();
					this._ImportUOMTypes = value;
					this.SendPropertyChanged("ImportUOMTypes");
					this.OnImportUOMTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushQuotes", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<bool> PushQuotes
		{
			get
			{
				return this._PushQuotes;
			}
			set
			{
				if ((this._PushQuotes != value))
				{
					this.OnPushQuotesChanging(value);
					this.SendPropertyChanging();
					this._PushQuotes = value;
					this.SendPropertyChanged("PushQuotes");
					this.OnPushQuotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxUsers", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> MaxUsers
		{
			get
			{
				return this._MaxUsers;
			}
			set
			{
				if ((this._MaxUsers != value))
				{
					this.OnMaxUsersChanging(value);
					this.SendPropertyChanging();
					this._MaxUsers = value;
					this.SendPropertyChanged("MaxUsers");
					this.OnMaxUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSalesStaff", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<int> MaxSalesStaff
		{
			get
			{
				return this._MaxSalesStaff;
			}
			set
			{
				if ((this._MaxSalesStaff != value))
				{
					this.OnMaxSalesStaffChanging(value);
					this.SendPropertyChanging();
					this._MaxSalesStaff = value;
					this.SendPropertyChanged("MaxSalesStaff");
					this.OnMaxSalesStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESIModules", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<bool> ESIModules
		{
			get
			{
				return this._ESIModules;
			}
			set
			{
				if ((this._ESIModules != value))
				{
					this.OnESIModulesChanging(value);
					this.SendPropertyChanging();
					this._ESIModules = value;
					this.SendPropertyChanged("ESIModules");
					this.OnESIModulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableCustomerStatusSync", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<bool> DisableCustomerStatusSync
		{
			get
			{
				return this._DisableCustomerStatusSync;
			}
			set
			{
				if ((this._DisableCustomerStatusSync != value))
				{
					this.OnDisableCustomerStatusSyncChanging(value);
					this.SendPropertyChanging();
					this._DisableCustomerStatusSync = value;
					this.SendPropertyChanged("DisableCustomerStatusSync");
					this.OnDisableCustomerStatusSyncChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyUser")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CompanyUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyUserId;
		
		private int _CompanyId;
		
		private System.Guid _UserId;
		
		private string _Name;
		
		private System.Nullable<bool> _ReceiveNotifications;
		
		private System.Nullable<bool> _IsMaxUsersExempt;
		
		private EntitySet<ChatMessage> _ChatMessages;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<Company> _Company;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyUserIdChanging(int value);
    partial void OnCompanyUserIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnReceiveNotificationsChanging(System.Nullable<bool> value);
    partial void OnReceiveNotificationsChanged();
    partial void OnIsMaxUsersExemptChanging(System.Nullable<bool> value);
    partial void OnIsMaxUsersExemptChanged();
    #endregion
		
		public CompanyUser()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyUserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CompanyUserId
		{
			get
			{
				return this._CompanyUserId;
			}
			set
			{
				if ((this._CompanyUserId != value))
				{
					this.OnCompanyUserIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyUserId = value;
					this.SendPropertyChanged("CompanyUserId");
					this.OnCompanyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveNotifications", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> ReceiveNotifications
		{
			get
			{
				return this._ReceiveNotifications;
			}
			set
			{
				if ((this._ReceiveNotifications != value))
				{
					this.OnReceiveNotificationsChanging(value);
					this.SendPropertyChanging();
					this._ReceiveNotifications = value;
					this.SendPropertyChanged("ReceiveNotifications");
					this.OnReceiveNotificationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMaxUsersExempt", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsMaxUsersExempt
		{
			get
			{
				return this._IsMaxUsersExempt;
			}
			set
			{
				if ((this._IsMaxUsersExempt != value))
				{
					this.OnIsMaxUsersExemptChanging(value);
					this.SendPropertyChanging();
					this._IsMaxUsersExempt = value;
					this.SendPropertyChanged("IsMaxUsersExempt");
					this.OnIsMaxUsersExemptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyUser_ChatMessage", Storage="_ChatMessages", ThisKey="CompanyUserId", OtherKey="CompanyUserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<ChatMessage> ChatMessages
		{
			get
			{
				if ((this.serializing 
							&& (this._ChatMessages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ChatMessages;
			}
			set
			{
				this._ChatMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_CompanyUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.CompanyUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.CompanyUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_CompanyUser", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.CompanyUsers.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.CompanyUsers.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChatMessages(ChatMessage entity)
		{
			this.SendPropertyChanging();
			entity.CompanyUser = this;
		}
		
		private void detach_ChatMessages(ChatMessage entity)
		{
			this.SendPropertyChanging();
			entity.CompanyUser = null;
		}
		
		private void Initialize()
		{
			this._ChatMessages = new EntitySet<ChatMessage>(new Action<ChatMessage>(this.attach_ChatMessages), new Action<ChatMessage>(this.detach_ChatMessages));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Competitor")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Competitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompetitorId;
		
		private int _CompanyId;
		
		private int _DistrictId;
		
		private string _Name;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<CompetitorPlant> _CompetitorPlants;
		
		private EntitySet<DistrictCompetitor> _DistrictCompetitors;
		
		private EntitySet<ProjectCompetitor> _ProjectCompetitors;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<District> _District;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompetitorIdChanging(int value);
    partial void OnCompetitorIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Competitor()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CompetitorId
		{
			get
			{
				return this._CompetitorId;
			}
			set
			{
				if ((this._CompetitorId != value))
				{
					this.OnCompetitorIdChanging(value);
					this.SendPropertyChanging();
					this._CompetitorId = value;
					this.SendPropertyChanged("CompetitorId");
					this.OnCompetitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					if (this._District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Competitor_CompetitorPlant", Storage="_CompetitorPlants", ThisKey="CompetitorId", OtherKey="CompetitorId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CompetitorPlant> CompetitorPlants
		{
			get
			{
				if ((this.serializing 
							&& (this._CompetitorPlants.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CompetitorPlants;
			}
			set
			{
				this._CompetitorPlants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Competitor_DistrictCompetitor", Storage="_DistrictCompetitors", ThisKey="CompetitorId", OtherKey="CompetitorId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<DistrictCompetitor> DistrictCompetitors
		{
			get
			{
				if ((this.serializing 
							&& (this._DistrictCompetitors.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DistrictCompetitors;
			}
			set
			{
				this._DistrictCompetitors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Competitor_ProjectCompetitor", Storage="_ProjectCompetitors", ThisKey="CompetitorId", OtherKey="CompetitorId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<ProjectCompetitor> ProjectCompetitors
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectCompetitors.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectCompetitors;
			}
			set
			{
				this._ProjectCompetitors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Competitor", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Competitors.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Competitors.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_Competitor", Storage="_District", ThisKey="DistrictId", OtherKey="DistrictId", IsForeignKey=true)]
		public District District
		{
			get
			{
				return this._District.Entity;
			}
			set
			{
				District previousValue = this._District.Entity;
				if (((previousValue != value) 
							|| (this._District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._District.Entity = null;
						previousValue.Competitors.Remove(this);
					}
					this._District.Entity = value;
					if ((value != null))
					{
						value.Competitors.Add(this);
						this._DistrictId = value.DistrictId;
					}
					else
					{
						this._DistrictId = default(int);
					}
					this.SendPropertyChanged("District");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CompetitorPlants(CompetitorPlant entity)
		{
			this.SendPropertyChanging();
			entity.Competitor = this;
		}
		
		private void detach_CompetitorPlants(CompetitorPlant entity)
		{
			this.SendPropertyChanging();
			entity.Competitor = null;
		}
		
		private void attach_DistrictCompetitors(DistrictCompetitor entity)
		{
			this.SendPropertyChanging();
			entity.Competitor = this;
		}
		
		private void detach_DistrictCompetitors(DistrictCompetitor entity)
		{
			this.SendPropertyChanging();
			entity.Competitor = null;
		}
		
		private void attach_ProjectCompetitors(ProjectCompetitor entity)
		{
			this.SendPropertyChanging();
			entity.Competitor = this;
		}
		
		private void detach_ProjectCompetitors(ProjectCompetitor entity)
		{
			this.SendPropertyChanging();
			entity.Competitor = null;
		}
		
		private void Initialize()
		{
			this._CompetitorPlants = new EntitySet<CompetitorPlant>(new Action<CompetitorPlant>(this.attach_CompetitorPlants), new Action<CompetitorPlant>(this.detach_CompetitorPlants));
			this._DistrictCompetitors = new EntitySet<DistrictCompetitor>(new Action<DistrictCompetitor>(this.attach_DistrictCompetitors), new Action<DistrictCompetitor>(this.detach_DistrictCompetitors));
			this._ProjectCompetitors = new EntitySet<ProjectCompetitor>(new Action<ProjectCompetitor>(this.attach_ProjectCompetitors), new Action<ProjectCompetitor>(this.detach_ProjectCompetitors));
			this._Company = default(EntityRef<Company>);
			this._District = default(EntityRef<District>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitorPlant")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CompetitorPlant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _CompetitorId;
		
		private int _DistrictId;
		
		private string _Name;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Competitor> _Competitor;
		
		private EntityRef<District> _District;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCompetitorIdChanging(int value);
    partial void OnCompetitorIdChanged();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public CompetitorPlant()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitorId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompetitorId
		{
			get
			{
				return this._CompetitorId;
			}
			set
			{
				if ((this._CompetitorId != value))
				{
					if (this._Competitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitorIdChanging(value);
					this.SendPropertyChanging();
					this._CompetitorId = value;
					this.SendPropertyChanged("CompetitorId");
					this.OnCompetitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					if (this._District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Competitor_CompetitorPlant", Storage="_Competitor", ThisKey="CompetitorId", OtherKey="CompetitorId", IsForeignKey=true)]
		public Competitor Competitor
		{
			get
			{
				return this._Competitor.Entity;
			}
			set
			{
				Competitor previousValue = this._Competitor.Entity;
				if (((previousValue != value) 
							|| (this._Competitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Competitor.Entity = null;
						previousValue.CompetitorPlants.Remove(this);
					}
					this._Competitor.Entity = value;
					if ((value != null))
					{
						value.CompetitorPlants.Add(this);
						this._CompetitorId = value.CompetitorId;
					}
					else
					{
						this._CompetitorId = default(int);
					}
					this.SendPropertyChanged("Competitor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_CompetitorPlant", Storage="_District", ThisKey="DistrictId", OtherKey="DistrictId", IsForeignKey=true)]
		public District District
		{
			get
			{
				return this._District.Entity;
			}
			set
			{
				District previousValue = this._District.Entity;
				if (((previousValue != value) 
							|| (this._District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._District.Entity = null;
						previousValue.CompetitorPlants.Remove(this);
					}
					this._District.Entity = value;
					if ((value != null))
					{
						value.CompetitorPlants.Add(this);
						this._DistrictId = value.DistrictId;
					}
					else
					{
						this._DistrictId = default(int);
					}
					this.SendPropertyChanged("District");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Competitor = default(EntityRef<Competitor>);
			this._District = default(EntityRef<District>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConcreteProduct")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ConcreteProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CompanyId;
		
		private string _Code;
		
		private string _Description;
		
		private bool _Active;
		
		private EntitySet<ConcreteProductPlant> _ConcreteProductPlants;
		
		private EntityRef<Company> _Company;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public ConcreteProduct()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConcreteProduct_ConcreteProductPlant", Storage="_ConcreteProductPlants", ThisKey="Id", OtherKey="ConcreteProductId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<ConcreteProductPlant> ConcreteProductPlants
		{
			get
			{
				if ((this.serializing 
							&& (this._ConcreteProductPlants.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ConcreteProductPlants;
			}
			set
			{
				this._ConcreteProductPlants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ConcreteProduct", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.ConcreteProducts.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.ConcreteProducts.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConcreteProductPlants(ConcreteProductPlant entity)
		{
			this.SendPropertyChanging();
			entity.ConcreteProduct = this;
		}
		
		private void detach_ConcreteProductPlants(ConcreteProductPlant entity)
		{
			this.SendPropertyChanging();
			entity.ConcreteProduct = null;
		}
		
		private void Initialize()
		{
			this._ConcreteProductPlants = new EntitySet<ConcreteProductPlant>(new Action<ConcreteProductPlant>(this.attach_ConcreteProductPlants), new Action<ConcreteProductPlant>(this.detach_ConcreteProductPlants));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConcreteProductPlant")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ConcreteProductPlant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ConcreteProductId;
		
		private int _PlantId;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Cost;
		
		private bool _Active;
		
		private EntityRef<ConcreteProduct> _ConcreteProduct;
		
		private EntityRef<Plant> _Plant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnConcreteProductIdChanging(int value);
    partial void OnConcreteProductIdChanged();
    partial void OnPlantIdChanging(int value);
    partial void OnPlantIdChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public ConcreteProductPlant()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcreteProductId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ConcreteProductId
		{
			get
			{
				return this._ConcreteProductId;
			}
			set
			{
				if ((this._ConcreteProductId != value))
				{
					if (this._ConcreteProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConcreteProductIdChanging(value);
					this.SendPropertyChanging();
					this._ConcreteProductId = value;
					this.SendPropertyChanged("ConcreteProductId");
					this.OnConcreteProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(8,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConcreteProduct_ConcreteProductPlant", Storage="_ConcreteProduct", ThisKey="ConcreteProductId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ConcreteProduct ConcreteProduct
		{
			get
			{
				return this._ConcreteProduct.Entity;
			}
			set
			{
				ConcreteProduct previousValue = this._ConcreteProduct.Entity;
				if (((previousValue != value) 
							|| (this._ConcreteProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConcreteProduct.Entity = null;
						previousValue.ConcreteProductPlants.Remove(this);
					}
					this._ConcreteProduct.Entity = value;
					if ((value != null))
					{
						value.ConcreteProductPlants.Add(this);
						this._ConcreteProductId = value.Id;
					}
					else
					{
						this._ConcreteProductId = default(int);
					}
					this.SendPropertyChanged("ConcreteProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_ConcreteProductPlant", Storage="_Plant", ThisKey="PlantId", OtherKey="PlantId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.ConcreteProductPlants.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.ConcreteProductPlants.Add(this);
						this._PlantId = value.PlantId;
					}
					else
					{
						this._PlantId = default(int);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ConcreteProduct = default(EntityRef<ConcreteProduct>);
			this._Plant = default(EntityRef<Plant>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contractor")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Contractor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractorId;
		
		private int _CompanyId;
		
		private string _Name;
		
		private System.Nullable<bool> _Active;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private EntitySet<Project> _Projects;
		
		private EntityRef<Company> _Company;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractorIdChanging(int value);
    partial void OnContractorIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Contractor()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ContractorId
		{
			get
			{
				return this._ContractorId;
			}
			set
			{
				if ((this._ContractorId != value))
				{
					this.OnContractorIdChanging(value);
					this.SendPropertyChanging();
					this._ContractorId = value;
					this.SendPropertyChanged("ContractorId");
					this.OnContractorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_Project", Storage="_Projects", ThisKey="ContractorId", OtherKey="ContractorId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<Project> Projects
		{
			get
			{
				if ((this.serializing 
							&& (this._Projects.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Contractor", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Contractors.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Contractors.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = null;
		}
		
		private void Initialize()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conversation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Conversation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _MessageId;
		
		private System.DateTime _CreatedOn;
		
		private System.DateTime _UpdatedOn;
		
		private System.Nullable<int> _ProjectId;
		
		private System.Nullable<long> _QuotationId;
		
		private System.Nullable<bool> _Archived;
		
		private EntitySet<Notification> _Notifications;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnMessageIdChanging(System.Nullable<long> value);
    partial void OnMessageIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnUpdatedOnChanging(System.DateTime value);
    partial void OnUpdatedOnChanged();
    partial void OnProjectIdChanging(System.Nullable<int> value);
    partial void OnProjectIdChanged();
    partial void OnQuotationIdChanging(System.Nullable<long> value);
    partial void OnQuotationIdChanged();
    partial void OnArchivedChanging(System.Nullable<bool> value);
    partial void OnArchivedChanged();
    #endregion
		
		public Conversation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<long> MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<long> QuotationId
		{
			get
			{
				return this._QuotationId;
			}
			set
			{
				if ((this._QuotationId != value))
				{
					this.OnQuotationIdChanging(value);
					this.SendPropertyChanging();
					this._QuotationId = value;
					this.SendPropertyChanged("QuotationId");
					this.OnQuotationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this.OnArchivedChanging(value);
					this.SendPropertyChanging();
					this._Archived = value;
					this.SendPropertyChanged("Archived");
					this.OnArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conversation_Notification", Storage="_Notifications", ThisKey="Id", OtherKey="ConversationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<Notification> Notifications
		{
			get
			{
				if ((this.serializing 
							&& (this._Notifications.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Notifications;
			}
			set
			{
				this._Notifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.Conversation = this;
		}
		
		private void detach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.Conversation = null;
		}
		
		private void Initialize()
		{
			this._Notifications = new EntitySet<Notification>(new Action<Notification>(this.attach_Notifications), new Action<Notification>(this.detach_Notifications));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConversationMessage")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ConversationMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _Mode;
		
		private long _ConversationId;
		
		private string _Text;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnModeChanging(string value);
    partial void OnModeChanged();
    partial void OnConversationIdChanging(long value);
    partial void OnConversationIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public ConversationMessage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversationId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long ConversationId
		{
			get
			{
				return this._ConversationId;
			}
			set
			{
				if ((this._ConversationId != value))
				{
					this.OnConversationIdChanging(value);
					this.SendPropertyChanging();
					this._ConversationId = value;
					this.SendPropertyChanged("ConversationId");
					this.OnConversationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConversationParticipant")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ConversationParticipant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Guid _UserId;
		
		private long _ConversationId;
		
		private System.Nullable<bool> _Mute;
		
		private System.Nullable<bool> _Starred;
		
		private System.Nullable<bool> _MarkRead;
		
		private System.Nullable<System.DateTime> _LastViewedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnConversationIdChanging(long value);
    partial void OnConversationIdChanged();
    partial void OnMuteChanging(System.Nullable<bool> value);
    partial void OnMuteChanged();
    partial void OnStarredChanging(System.Nullable<bool> value);
    partial void OnStarredChanged();
    partial void OnMarkReadChanging(System.Nullable<bool> value);
    partial void OnMarkReadChanged();
    partial void OnLastViewedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnLastViewedOnChanged();
    #endregion
		
		public ConversationParticipant()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversationId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long ConversationId
		{
			get
			{
				return this._ConversationId;
			}
			set
			{
				if ((this._ConversationId != value))
				{
					this.OnConversationIdChanging(value);
					this.SendPropertyChanging();
					this._ConversationId = value;
					this.SendPropertyChanged("ConversationId");
					this.OnConversationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mute", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> Mute
		{
			get
			{
				return this._Mute;
			}
			set
			{
				if ((this._Mute != value))
				{
					this.OnMuteChanging(value);
					this.SendPropertyChanging();
					this._Mute = value;
					this.SendPropertyChanged("Mute");
					this.OnMuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Starred", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> Starred
		{
			get
			{
				return this._Starred;
			}
			set
			{
				if ((this._Starred != value))
				{
					this.OnStarredChanging(value);
					this.SendPropertyChanging();
					this._Starred = value;
					this.SendPropertyChanged("Starred");
					this.OnStarredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkRead", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> MarkRead
		{
			get
			{
				return this._MarkRead;
			}
			set
			{
				if ((this._MarkRead != value))
				{
					this.OnMarkReadChanging(value);
					this.SendPropertyChanging();
					this._MarkRead = value;
					this.SendPropertyChanged("MarkRead");
					this.OnMarkReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastViewedOn", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> LastViewedOn
		{
			get
			{
				return this._LastViewedOn;
			}
			set
			{
				if ((this._LastViewedOn != value))
				{
					this.OnLastViewedOnChanging(value);
					this.SendPropertyChanging();
					this._LastViewedOn = value;
					this.SendPropertyChanged("LastViewedOn");
					this.OnLastViewedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private int _CompanyId;
		
		private string _Name;
		
		private string _CustomerNumber;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private System.Nullable<bool> _Active;
		
		private string _DispatchId;
		
		private System.Nullable<bool> _Synced;
		
		private string _Source;
		
		private System.Nullable<bool> _PurchaseConcrete;
		
		private System.Nullable<bool> _PurchaseAggregate;
		
		private System.Nullable<bool> _PurchaseBlock;
		
		private System.Nullable<bool> _APIActiveStatus;
		
		private System.Nullable<bool> _OverrideAUStatus;
		
		private EntitySet<CustomerContact> _CustomerContacts;
		
		private EntitySet<DistrictCustomer> _DistrictCustomers;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<ProjectBidder> _ProjectBidders;
		
		private EntitySet<Quotation> _Quotations;
		
		private EntityRef<Company> _Company;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCustomerNumberChanging(string value);
    partial void OnCustomerNumberChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnSyncedChanging(System.Nullable<bool> value);
    partial void OnSyncedChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnPurchaseConcreteChanging(System.Nullable<bool> value);
    partial void OnPurchaseConcreteChanged();
    partial void OnPurchaseAggregateChanging(System.Nullable<bool> value);
    partial void OnPurchaseAggregateChanged();
    partial void OnPurchaseBlockChanging(System.Nullable<bool> value);
    partial void OnPurchaseBlockChanged();
    partial void OnAPIActiveStatusChanging(System.Nullable<bool> value);
    partial void OnAPIActiveStatusChanged();
    partial void OnOverrideAUStatusChanging(System.Nullable<bool> value);
    partial void OnOverrideAUStatusChanged();
    #endregion
		
		public Customer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synced", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> Synced
		{
			get
			{
				return this._Synced;
			}
			set
			{
				if ((this._Synced != value))
				{
					this.OnSyncedChanging(value);
					this.SendPropertyChanging();
					this._Synced = value;
					this.SendPropertyChanged("Synced");
					this.OnSyncedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseConcrete", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> PurchaseConcrete
		{
			get
			{
				return this._PurchaseConcrete;
			}
			set
			{
				if ((this._PurchaseConcrete != value))
				{
					this.OnPurchaseConcreteChanging(value);
					this.SendPropertyChanging();
					this._PurchaseConcrete = value;
					this.SendPropertyChanged("PurchaseConcrete");
					this.OnPurchaseConcreteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseAggregate", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<bool> PurchaseAggregate
		{
			get
			{
				return this._PurchaseAggregate;
			}
			set
			{
				if ((this._PurchaseAggregate != value))
				{
					this.OnPurchaseAggregateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseAggregate = value;
					this.SendPropertyChanged("PurchaseAggregate");
					this.OnPurchaseAggregateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseBlock", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<bool> PurchaseBlock
		{
			get
			{
				return this._PurchaseBlock;
			}
			set
			{
				if ((this._PurchaseBlock != value))
				{
					this.OnPurchaseBlockChanging(value);
					this.SendPropertyChanging();
					this._PurchaseBlock = value;
					this.SendPropertyChanged("PurchaseBlock");
					this.OnPurchaseBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIActiveStatus", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<bool> APIActiveStatus
		{
			get
			{
				return this._APIActiveStatus;
			}
			set
			{
				if ((this._APIActiveStatus != value))
				{
					this.OnAPIActiveStatusChanging(value);
					this.SendPropertyChanging();
					this._APIActiveStatus = value;
					this.SendPropertyChanged("APIActiveStatus");
					this.OnAPIActiveStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideAUStatus", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<bool> OverrideAUStatus
		{
			get
			{
				return this._OverrideAUStatus;
			}
			set
			{
				if ((this._OverrideAUStatus != value))
				{
					this.OnOverrideAUStatusChanging(value);
					this.SendPropertyChanging();
					this._OverrideAUStatus = value;
					this.SendPropertyChanged("OverrideAUStatus");
					this.OnOverrideAUStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerContact", Storage="_CustomerContacts", ThisKey="CustomerId", OtherKey="CustomerId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<CustomerContact> CustomerContacts
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerContacts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerContacts;
			}
			set
			{
				this._CustomerContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_DistrictCustomer", Storage="_DistrictCustomers", ThisKey="CustomerId", OtherKey="CustomerId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<DistrictCustomer> DistrictCustomers
		{
			get
			{
				if ((this.serializing 
							&& (this._DistrictCustomers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DistrictCustomers;
			}
			set
			{
				this._DistrictCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Project", Storage="_Projects", ThisKey="CustomerId", OtherKey="CustomerId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<Project> Projects
		{
			get
			{
				if ((this.serializing 
							&& (this._Projects.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ProjectBidder", Storage="_ProjectBidders", ThisKey="CustomerId", OtherKey="CustomerId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<ProjectBidder> ProjectBidders
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectBidders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectBidders;
			}
			set
			{
				this._ProjectBidders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Quotation", Storage="_Quotations", ThisKey="CustomerId", OtherKey="CustomerId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<Quotation> Quotations
		{
			get
			{
				if ((this.serializing 
							&& (this._Quotations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Quotations;
			}
			set
			{
				this._Quotations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Customer", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerContacts(CustomerContact entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerContacts(CustomerContact entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_DistrictCustomers(DistrictCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_DistrictCustomers(DistrictCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ProjectBidders(ProjectBidder entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ProjectBidders(ProjectBidder entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void Initialize()
		{
			this._CustomerContacts = new EntitySet<CustomerContact>(new Action<CustomerContact>(this.attach_CustomerContacts), new Action<CustomerContact>(this.detach_CustomerContacts));
			this._DistrictCustomers = new EntitySet<DistrictCustomer>(new Action<DistrictCustomer>(this.attach_DistrictCustomers), new Action<DistrictCustomer>(this.detach_DistrictCustomers));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._ProjectBidders = new EntitySet<ProjectBidder>(new Action<ProjectBidder>(this.attach_ProjectBidders), new Action<ProjectBidder>(this.detach_ProjectBidders));
			this._Quotations = new EntitySet<Quotation>(new Action<Quotation>(this.attach_Quotations), new Action<Quotation>(this.detach_Quotations));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerAging")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerAging : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _CustomerNumber;
		
		private string _CustomerName;
		
		private decimal _Balance;
		
		private decimal _CurrentAmount;
		
		private decimal _Over1Month;
		
		private decimal _Over2Month;
		
		private decimal _Over3Month;
		
		private decimal _DSO;
		
		private System.DateTime _ReportDate;
		
		private decimal _Over4Month;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCustomerNumberChanging(string value);
    partial void OnCustomerNumberChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnBalanceChanging(decimal value);
    partial void OnBalanceChanged();
    partial void OnCurrentAmountChanging(decimal value);
    partial void OnCurrentAmountChanged();
    partial void OnOver1MonthChanging(decimal value);
    partial void OnOver1MonthChanged();
    partial void OnOver2MonthChanging(decimal value);
    partial void OnOver2MonthChanged();
    partial void OnOver3MonthChanging(decimal value);
    partial void OnOver3MonthChanged();
    partial void OnDSOChanging(decimal value);
    partial void OnDSOChanged();
    partial void OnReportDateChanging(System.DateTime value);
    partial void OnReportDateChanged();
    partial void OnOver4MonthChanging(decimal value);
    partial void OnOver4MonthChanged();
    #endregion
		
		public CustomerAging()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public decimal Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentAmount", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public decimal CurrentAmount
		{
			get
			{
				return this._CurrentAmount;
			}
			set
			{
				if ((this._CurrentAmount != value))
				{
					this.OnCurrentAmountChanging(value);
					this.SendPropertyChanging();
					this._CurrentAmount = value;
					this.SendPropertyChanged("CurrentAmount");
					this.OnCurrentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Over1Month", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public decimal Over1Month
		{
			get
			{
				return this._Over1Month;
			}
			set
			{
				if ((this._Over1Month != value))
				{
					this.OnOver1MonthChanging(value);
					this.SendPropertyChanging();
					this._Over1Month = value;
					this.SendPropertyChanged("Over1Month");
					this.OnOver1MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Over2Month", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public decimal Over2Month
		{
			get
			{
				return this._Over2Month;
			}
			set
			{
				if ((this._Over2Month != value))
				{
					this.OnOver2MonthChanging(value);
					this.SendPropertyChanging();
					this._Over2Month = value;
					this.SendPropertyChanged("Over2Month");
					this.OnOver2MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Over3Month", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public decimal Over3Month
		{
			get
			{
				return this._Over3Month;
			}
			set
			{
				if ((this._Over3Month != value))
				{
					this.OnOver3MonthChanging(value);
					this.SendPropertyChanging();
					this._Over3Month = value;
					this.SendPropertyChanged("Over3Month");
					this.OnOver3MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSO", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public decimal DSO
		{
			get
			{
				return this._DSO;
			}
			set
			{
				if ((this._DSO != value))
				{
					this.OnDSOChanging(value);
					this.SendPropertyChanging();
					this._DSO = value;
					this.SendPropertyChanged("DSO");
					this.OnDSOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.DateTime ReportDate
		{
			get
			{
				return this._ReportDate;
			}
			set
			{
				if ((this._ReportDate != value))
				{
					this.OnReportDateChanging(value);
					this.SendPropertyChanging();
					this._ReportDate = value;
					this.SendPropertyChanged("ReportDate");
					this.OnReportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Over4Month", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public decimal Over4Month
		{
			get
			{
				return this._Over4Month;
			}
			set
			{
				if ((this._Over4Month != value))
				{
					this.OnOver4MonthChanging(value);
					this.SendPropertyChanging();
					this._Over4Month = value;
					this.SendPropertyChanged("Over4Month");
					this.OnOver4MonthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerArchive")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _CustomerId;
		
		private int _CompanyId;
		
		private string _Name;
		
		private string _CustomerNumber;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private System.Nullable<bool> _Active;
		
		private string _Source;
		
		private string _DispatchId;
		
		private System.Nullable<bool> _Synced;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCustomerNumberChanging(string value);
    partial void OnCustomerNumberChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnSyncedChanging(System.Nullable<bool> value);
    partial void OnSyncedChanged();
    #endregion
		
		public CustomerArchive()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synced", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> Synced
		{
			get
			{
				return this._Synced;
			}
			set
			{
				if ((this._Synced != value))
				{
					this.OnSyncedChanging(value);
					this.SendPropertyChanging();
					this._Synced = value;
					this.SendPropertyChanged("Synced");
					this.OnSyncedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerContact")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CustomerId;
		
		private string _Name;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private System.Nullable<bool> _IsQuoteDefault;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Title;
		
		private EntitySet<Quotation> _Quotations;
		
		private EntityRef<Customer> _Customer;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsQuoteDefaultChanging(System.Nullable<bool> value);
    partial void OnIsQuoteDefaultChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public CustomerContact()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQuoteDefault", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> IsQuoteDefault
		{
			get
			{
				return this._IsQuoteDefault;
			}
			set
			{
				if ((this._IsQuoteDefault != value))
				{
					this.OnIsQuoteDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsQuoteDefault = value;
					this.SendPropertyChanged("IsQuoteDefault");
					this.OnIsQuoteDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(225)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerContact_Quotation", Storage="_Quotations", ThisKey="Id", OtherKey="CustomerContactId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Quotation> Quotations
		{
			get
			{
				if ((this.serializing 
							&& (this._Quotations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Quotations;
			}
			set
			{
				this._Quotations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerContact", Storage="_Customer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerContacts.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerContacts.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.CustomerContact = this;
		}
		
		private void detach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.CustomerContact = null;
		}
		
		private void Initialize()
		{
			this._Quotations = new EntitySet<Quotation>(new Action<Quotation>(this.attach_Quotations), new Action<Quotation>(this.detach_Quotations));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerMergeJunkWord")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerMergeJunkWord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Word;
		
		private System.Nullable<bool> _Active;
		
		private string _MappedField;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnWordChanging(string value);
    partial void OnWordChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnMappedFieldChanging(string value);
    partial void OnMappedFieldChanged();
    #endregion
		
		public CustomerMergeJunkWord()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Word", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Word
		{
			get
			{
				return this._Word;
			}
			set
			{
				if ((this._Word != value))
				{
					this.OnWordChanging(value);
					this.SendPropertyChanging();
					this._Word = value;
					this.SendPropertyChanged("Word");
					this.OnWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MappedField", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string MappedField
		{
			get
			{
				return this._MappedField;
			}
			set
			{
				if ((this._MappedField != value))
				{
					this.OnMappedFieldChanging(value);
					this.SendPropertyChanging();
					this._MappedField = value;
					this.SendPropertyChanged("MappedField");
					this.OnMappedFieldChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerOrderChanges")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerOrderChange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _OrderId;
		
		private string _CustomerNumber;
		
		private string _ConcreteProductId;
		
		private double _ConcreteProductVolume;
		
		private System.DateTime _ReportDate;
		
		private string _CustomerName;
		
		private System.Nullable<double> _VolumeChange;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnOrderIdChanging(string value);
    partial void OnOrderIdChanged();
    partial void OnCustomerNumberChanging(string value);
    partial void OnCustomerNumberChanged();
    partial void OnConcreteProductIdChanging(string value);
    partial void OnConcreteProductIdChanged();
    partial void OnConcreteProductVolumeChanging(double value);
    partial void OnConcreteProductVolumeChanged();
    partial void OnReportDateChanging(System.DateTime value);
    partial void OnReportDateChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnVolumeChangeChanging(System.Nullable<double> value);
    partial void OnVolumeChangeChanged();
    #endregion
		
		public CustomerOrderChange()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcreteProductId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ConcreteProductId
		{
			get
			{
				return this._ConcreteProductId;
			}
			set
			{
				if ((this._ConcreteProductId != value))
				{
					this.OnConcreteProductIdChanging(value);
					this.SendPropertyChanging();
					this._ConcreteProductId = value;
					this.SendPropertyChanged("ConcreteProductId");
					this.OnConcreteProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcreteProductVolume", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public double ConcreteProductVolume
		{
			get
			{
				return this._ConcreteProductVolume;
			}
			set
			{
				if ((this._ConcreteProductVolume != value))
				{
					this.OnConcreteProductVolumeChanging(value);
					this.SendPropertyChanging();
					this._ConcreteProductVolume = value;
					this.SendPropertyChanged("ConcreteProductVolume");
					this.OnConcreteProductVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime ReportDate
		{
			get
			{
				return this._ReportDate;
			}
			set
			{
				if ((this._ReportDate != value))
				{
					this.OnReportDateChanging(value);
					this.SendPropertyChanging();
					this._ReportDate = value;
					this.SendPropertyChanged("ReportDate");
					this.OnReportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolumeChange", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<double> VolumeChange
		{
			get
			{
				return this._VolumeChange;
			}
			set
			{
				if ((this._VolumeChange != value))
				{
					this.OnVolumeChangeChanging(value);
					this.SendPropertyChanging();
					this._VolumeChange = value;
					this.SendPropertyChanged("VolumeChange");
					this.OnVolumeChangeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerProductivity")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerProductivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _ReportDate;
		
		private string _CustomerNumber;
		
		private string _CustomerName;
		
		private string _OrderCode;
		
		private string _TicketCode;
		
		private bool _IsFOB;
		
		private string _PlantDispatchCode;
		
		private string _TruckCode;
		
		private double _Quantity;
		
		private double _Ticketing;
		
		private double _LoadTemper;
		
		private double _ToJob;
		
		private double _Wait;
		
		private double _Unload;
		
		private double _Wash;
		
		private double _FromJob;
		
		private string _SegmentId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnReportDateChanging(System.DateTime value);
    partial void OnReportDateChanged();
    partial void OnCustomerNumberChanging(string value);
    partial void OnCustomerNumberChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnOrderCodeChanging(string value);
    partial void OnOrderCodeChanged();
    partial void OnTicketCodeChanging(string value);
    partial void OnTicketCodeChanged();
    partial void OnIsFOBChanging(bool value);
    partial void OnIsFOBChanged();
    partial void OnPlantDispatchCodeChanging(string value);
    partial void OnPlantDispatchCodeChanged();
    partial void OnTruckCodeChanging(string value);
    partial void OnTruckCodeChanged();
    partial void OnQuantityChanging(double value);
    partial void OnQuantityChanged();
    partial void OnTicketingChanging(double value);
    partial void OnTicketingChanged();
    partial void OnLoadTemperChanging(double value);
    partial void OnLoadTemperChanged();
    partial void OnToJobChanging(double value);
    partial void OnToJobChanged();
    partial void OnWaitChanging(double value);
    partial void OnWaitChanged();
    partial void OnUnloadChanging(double value);
    partial void OnUnloadChanged();
    partial void OnWashChanging(double value);
    partial void OnWashChanged();
    partial void OnFromJobChanging(double value);
    partial void OnFromJobChanged();
    partial void OnSegmentIdChanging(string value);
    partial void OnSegmentIdChanged();
    #endregion
		
		public CustomerProductivity()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime ReportDate
		{
			get
			{
				return this._ReportDate;
			}
			set
			{
				if ((this._ReportDate != value))
				{
					this.OnReportDateChanging(value);
					this.SendPropertyChanging();
					this._ReportDate = value;
					this.SendPropertyChanged("ReportDate");
					this.OnReportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCode", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string OrderCode
		{
			get
			{
				return this._OrderCode;
			}
			set
			{
				if ((this._OrderCode != value))
				{
					this.OnOrderCodeChanging(value);
					this.SendPropertyChanging();
					this._OrderCode = value;
					this.SendPropertyChanged("OrderCode");
					this.OnOrderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string TicketCode
		{
			get
			{
				return this._TicketCode;
			}
			set
			{
				if ((this._TicketCode != value))
				{
					this.OnTicketCodeChanging(value);
					this.SendPropertyChanging();
					this._TicketCode = value;
					this.SendPropertyChanged("TicketCode");
					this.OnTicketCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFOB", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsFOB
		{
			get
			{
				return this._IsFOB;
			}
			set
			{
				if ((this._IsFOB != value))
				{
					this.OnIsFOBChanging(value);
					this.SendPropertyChanging();
					this._IsFOB = value;
					this.SendPropertyChanged("IsFOB");
					this.OnIsFOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantDispatchCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string PlantDispatchCode
		{
			get
			{
				return this._PlantDispatchCode;
			}
			set
			{
				if ((this._PlantDispatchCode != value))
				{
					this.OnPlantDispatchCodeChanging(value);
					this.SendPropertyChanging();
					this._PlantDispatchCode = value;
					this.SendPropertyChanged("PlantDispatchCode");
					this.OnPlantDispatchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckCode", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string TruckCode
		{
			get
			{
				return this._TruckCode;
			}
			set
			{
				if ((this._TruckCode != value))
				{
					this.OnTruckCodeChanging(value);
					this.SendPropertyChanging();
					this._TruckCode = value;
					this.SendPropertyChanged("TruckCode");
					this.OnTruckCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public double Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticketing", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public double Ticketing
		{
			get
			{
				return this._Ticketing;
			}
			set
			{
				if ((this._Ticketing != value))
				{
					this.OnTicketingChanging(value);
					this.SendPropertyChanging();
					this._Ticketing = value;
					this.SendPropertyChanged("Ticketing");
					this.OnTicketingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadTemper", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public double LoadTemper
		{
			get
			{
				return this._LoadTemper;
			}
			set
			{
				if ((this._LoadTemper != value))
				{
					this.OnLoadTemperChanging(value);
					this.SendPropertyChanging();
					this._LoadTemper = value;
					this.SendPropertyChanged("LoadTemper");
					this.OnLoadTemperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToJob", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public double ToJob
		{
			get
			{
				return this._ToJob;
			}
			set
			{
				if ((this._ToJob != value))
				{
					this.OnToJobChanging(value);
					this.SendPropertyChanging();
					this._ToJob = value;
					this.SendPropertyChanged("ToJob");
					this.OnToJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wait", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public double Wait
		{
			get
			{
				return this._Wait;
			}
			set
			{
				if ((this._Wait != value))
				{
					this.OnWaitChanging(value);
					this.SendPropertyChanging();
					this._Wait = value;
					this.SendPropertyChanged("Wait");
					this.OnWaitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unload", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public double Unload
		{
			get
			{
				return this._Unload;
			}
			set
			{
				if ((this._Unload != value))
				{
					this.OnUnloadChanging(value);
					this.SendPropertyChanging();
					this._Unload = value;
					this.SendPropertyChanged("Unload");
					this.OnUnloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wash", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public double Wash
		{
			get
			{
				return this._Wash;
			}
			set
			{
				if ((this._Wash != value))
				{
					this.OnWashChanging(value);
					this.SendPropertyChanging();
					this._Wash = value;
					this.SendPropertyChanged("Wash");
					this.OnWashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromJob", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public double FromJob
		{
			get
			{
				return this._FromJob;
			}
			set
			{
				if ((this._FromJob != value))
				{
					this.OnFromJobChanging(value);
					this.SendPropertyChanging();
					this._FromJob = value;
					this.SendPropertyChanged("FromJob");
					this.OnFromJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentId", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string SegmentId
		{
			get
			{
				return this._SegmentId;
			}
			set
			{
				if ((this._SegmentId != value))
				{
					this.OnSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._SegmentId = value;
					this.SendPropertyChanged("SegmentId");
					this.OnSegmentIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerProfitability")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerProfitability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _ReportDate;
		
		private string _CustomerNumber;
		
		private string _CustomerName;
		
		private string _SegmentId;
		
		private decimal _Revenue;
		
		private decimal _MaterialCost;
		
		private string _PlantCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnReportDateChanging(System.DateTime value);
    partial void OnReportDateChanged();
    partial void OnCustomerNumberChanging(string value);
    partial void OnCustomerNumberChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnSegmentIdChanging(string value);
    partial void OnSegmentIdChanged();
    partial void OnRevenueChanging(decimal value);
    partial void OnRevenueChanged();
    partial void OnMaterialCostChanging(decimal value);
    partial void OnMaterialCostChanged();
    partial void OnPlantCodeChanging(string value);
    partial void OnPlantCodeChanged();
    #endregion
		
		public CustomerProfitability()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime ReportDate
		{
			get
			{
				return this._ReportDate;
			}
			set
			{
				if ((this._ReportDate != value))
				{
					this.OnReportDateChanging(value);
					this.SendPropertyChanging();
					this._ReportDate = value;
					this.SendPropertyChanged("ReportDate");
					this.OnReportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string SegmentId
		{
			get
			{
				return this._SegmentId;
			}
			set
			{
				if ((this._SegmentId != value))
				{
					this.OnSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._SegmentId = value;
					this.SendPropertyChanged("SegmentId");
					this.OnSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revenue", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public decimal Revenue
		{
			get
			{
				return this._Revenue;
			}
			set
			{
				if ((this._Revenue != value))
				{
					this.OnRevenueChanging(value);
					this.SendPropertyChanging();
					this._Revenue = value;
					this.SendPropertyChanged("Revenue");
					this.OnRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCost", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public decimal MaterialCost
		{
			get
			{
				return this._MaterialCost;
			}
			set
			{
				if ((this._MaterialCost != value))
				{
					this.OnMaterialCostChanging(value);
					this.SendPropertyChanging();
					this._MaterialCost = value;
					this.SendPropertyChanged("MaterialCost");
					this.OnMaterialCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string PlantCode
		{
			get
			{
				return this._PlantCode;
			}
			set
			{
				if ((this._PlantCode != value))
				{
					this.OnPlantCodeChanging(value);
					this.SendPropertyChanging();
					this._PlantCode = value;
					this.SendPropertyChanged("PlantCode");
					this.OnPlantCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomMixConstituent")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomMixConstituent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _QuotationMixId;
		
		private System.Nullable<long> _RawMaterialId;
		
		private System.Nullable<long> _AddonId;
		
		private string _Description;
		
		private System.Nullable<bool> _IsCementitious;
		
		private double _Quantity;
		
		private System.Nullable<long> _QuantityUomId;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<long> _CostUomId;
		
		private System.Nullable<bool> _PerCementWeight;
		
		private EntityRef<CustomMixConstituent> _CustomMixConstituent2;
		
		private EntityRef<Addon> _Addon;
		
		private EntityRef<CustomMixConstituent> _CustomMixConstituent1;
		
		private EntityRef<QuotationMix> _QuotationMix;
		
		private EntityRef<RawMaterial> _RawMaterial;
		
		private EntityRef<Uom> _CostUom;
		
		private EntityRef<Uom> _QuantityUom;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnQuotationMixIdChanging(long value);
    partial void OnQuotationMixIdChanged();
    partial void OnRawMaterialIdChanging(System.Nullable<long> value);
    partial void OnRawMaterialIdChanged();
    partial void OnAddonIdChanging(System.Nullable<long> value);
    partial void OnAddonIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsCementitiousChanging(System.Nullable<bool> value);
    partial void OnIsCementitiousChanged();
    partial void OnQuantityChanging(double value);
    partial void OnQuantityChanged();
    partial void OnQuantityUomIdChanging(System.Nullable<long> value);
    partial void OnQuantityUomIdChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnCostUomIdChanging(System.Nullable<long> value);
    partial void OnCostUomIdChanged();
    partial void OnPerCementWeightChanging(System.Nullable<bool> value);
    partial void OnPerCementWeightChanged();
    #endregion
		
		public CustomMixConstituent()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._CustomMixConstituent1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationMixId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long QuotationMixId
		{
			get
			{
				return this._QuotationMixId;
			}
			set
			{
				if ((this._QuotationMixId != value))
				{
					if (this._QuotationMix.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationMixIdChanging(value);
					this.SendPropertyChanging();
					this._QuotationMixId = value;
					this.SendPropertyChanged("QuotationMixId");
					this.OnQuotationMixIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawMaterialId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<long> RawMaterialId
		{
			get
			{
				return this._RawMaterialId;
			}
			set
			{
				if ((this._RawMaterialId != value))
				{
					if (this._RawMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRawMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._RawMaterialId = value;
					this.SendPropertyChanged("RawMaterialId");
					this.OnRawMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<long> AddonId
		{
			get
			{
				return this._AddonId;
			}
			set
			{
				if ((this._AddonId != value))
				{
					if (this._Addon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddonIdChanging(value);
					this.SendPropertyChanging();
					this._AddonId = value;
					this.SendPropertyChanged("AddonId");
					this.OnAddonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCementitious", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsCementitious
		{
			get
			{
				return this._IsCementitious;
			}
			set
			{
				if ((this._IsCementitious != value))
				{
					this.OnIsCementitiousChanging(value);
					this.SendPropertyChanging();
					this._IsCementitious = value;
					this.SendPropertyChanged("IsCementitious");
					this.OnIsCementitiousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public double Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityUomId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<long> QuantityUomId
		{
			get
			{
				return this._QuantityUomId;
			}
			set
			{
				if ((this._QuantityUomId != value))
				{
					if (this._QuantityUom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuantityUomIdChanging(value);
					this.SendPropertyChanging();
					this._QuantityUomId = value;
					this.SendPropertyChanged("QuantityUomId");
					this.OnQuantityUomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostUomId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<long> CostUomId
		{
			get
			{
				return this._CostUomId;
			}
			set
			{
				if ((this._CostUomId != value))
				{
					if (this._CostUom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostUomIdChanging(value);
					this.SendPropertyChanging();
					this._CostUomId = value;
					this.SendPropertyChanged("CostUomId");
					this.OnCostUomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerCementWeight", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> PerCementWeight
		{
			get
			{
				return this._PerCementWeight;
			}
			set
			{
				if ((this._PerCementWeight != value))
				{
					this.OnPerCementWeightChanging(value);
					this.SendPropertyChanging();
					this._PerCementWeight = value;
					this.SendPropertyChanged("PerCementWeight");
					this.OnPerCementWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomMixConstituent_CustomMixConstituent", Storage="_CustomMixConstituent2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public CustomMixConstituent CustomMixConstituent2
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomMixConstituent2.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._CustomMixConstituent2.Entity;
			}
			set
			{
				CustomMixConstituent previousValue = this._CustomMixConstituent2.Entity;
				if (((previousValue != value) 
							|| (this._CustomMixConstituent2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomMixConstituent2.Entity = null;
						previousValue.CustomMixConstituent1 = null;
					}
					this._CustomMixConstituent2.Entity = value;
					if ((value != null))
					{
						value.CustomMixConstituent1 = this;
					}
					this.SendPropertyChanged("CustomMixConstituent2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_CustomMixConstituent", Storage="_Addon", ThisKey="AddonId", OtherKey="Id", IsForeignKey=true)]
		public Addon Addon
		{
			get
			{
				return this._Addon.Entity;
			}
			set
			{
				Addon previousValue = this._Addon.Entity;
				if (((previousValue != value) 
							|| (this._Addon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Addon.Entity = null;
						previousValue.CustomMixConstituents.Remove(this);
					}
					this._Addon.Entity = value;
					if ((value != null))
					{
						value.CustomMixConstituents.Add(this);
						this._AddonId = value.Id;
					}
					else
					{
						this._AddonId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Addon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomMixConstituent_CustomMixConstituent", Storage="_CustomMixConstituent1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public CustomMixConstituent CustomMixConstituent1
		{
			get
			{
				return this._CustomMixConstituent1.Entity;
			}
			set
			{
				CustomMixConstituent previousValue = this._CustomMixConstituent1.Entity;
				if (((previousValue != value) 
							|| (this._CustomMixConstituent1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomMixConstituent1.Entity = null;
						previousValue.CustomMixConstituent2 = null;
					}
					this._CustomMixConstituent1.Entity = value;
					if ((value != null))
					{
						value.CustomMixConstituent2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("CustomMixConstituent1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuotationMix_CustomMixConstituent", Storage="_QuotationMix", ThisKey="QuotationMixId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QuotationMix QuotationMix
		{
			get
			{
				return this._QuotationMix.Entity;
			}
			set
			{
				QuotationMix previousValue = this._QuotationMix.Entity;
				if (((previousValue != value) 
							|| (this._QuotationMix.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuotationMix.Entity = null;
						previousValue.CustomMixConstituents.Remove(this);
					}
					this._QuotationMix.Entity = value;
					if ((value != null))
					{
						value.CustomMixConstituents.Add(this);
						this._QuotationMixId = value.Id;
					}
					else
					{
						this._QuotationMixId = default(long);
					}
					this.SendPropertyChanged("QuotationMix");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RawMaterial_CustomMixConstituent", Storage="_RawMaterial", ThisKey="RawMaterialId", OtherKey="Id", IsForeignKey=true)]
		public RawMaterial RawMaterial
		{
			get
			{
				return this._RawMaterial.Entity;
			}
			set
			{
				RawMaterial previousValue = this._RawMaterial.Entity;
				if (((previousValue != value) 
							|| (this._RawMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RawMaterial.Entity = null;
						previousValue.CustomMixConstituents.Remove(this);
					}
					this._RawMaterial.Entity = value;
					if ((value != null))
					{
						value.CustomMixConstituents.Add(this);
						this._RawMaterialId = value.Id;
					}
					else
					{
						this._RawMaterialId = default(Nullable<long>);
					}
					this.SendPropertyChanged("RawMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_CustomMixConstituent", Storage="_CostUom", ThisKey="CostUomId", OtherKey="Id", IsForeignKey=true)]
		public Uom CostUom
		{
			get
			{
				return this._CostUom.Entity;
			}
			set
			{
				Uom previousValue = this._CostUom.Entity;
				if (((previousValue != value) 
							|| (this._CostUom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostUom.Entity = null;
						previousValue.CustomMixConstituents.Remove(this);
					}
					this._CostUom.Entity = value;
					if ((value != null))
					{
						value.CustomMixConstituents.Add(this);
						this._CostUomId = value.Id;
					}
					else
					{
						this._CostUomId = default(Nullable<long>);
					}
					this.SendPropertyChanged("CostUom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_CustomMixConstituent1", Storage="_QuantityUom", ThisKey="QuantityUomId", OtherKey="Id", IsForeignKey=true)]
		public Uom QuantityUom
		{
			get
			{
				return this._QuantityUom.Entity;
			}
			set
			{
				Uom previousValue = this._QuantityUom.Entity;
				if (((previousValue != value) 
							|| (this._QuantityUom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuantityUom.Entity = null;
						previousValue.CustomMixConstituents1.Remove(this);
					}
					this._QuantityUom.Entity = value;
					if ((value != null))
					{
						value.CustomMixConstituents1.Add(this);
						this._QuantityUomId = value.Id;
					}
					else
					{
						this._QuantityUomId = default(Nullable<long>);
					}
					this.SendPropertyChanged("QuantityUom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CustomMixConstituent2 = default(EntityRef<CustomMixConstituent>);
			this._Addon = default(EntityRef<Addon>);
			this._CustomMixConstituent1 = default(EntityRef<CustomMixConstituent>);
			this._QuotationMix = default(EntityRef<QuotationMix>);
			this._RawMaterial = default(EntityRef<RawMaterial>);
			this._CostUom = default(EntityRef<Uom>);
			this._QuantityUom = default(EntityRef<Uom>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DailyPlantSummary")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DailyPlantSummary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _DayDateTime;
		
		private int _PlantId;
		
		private System.Nullable<double> _ProducedVolume;
		
		private System.Nullable<double> _TrucksAssigned;
		
		private System.Nullable<double> _TruckAvailable;
		
		private System.Nullable<double> _DriversOnPayroll;
		
		private System.Nullable<double> _DriversAvailable;
		
		private System.Nullable<double> _PlantInterruptions;
		
		private System.Nullable<double> _BadOrRejectedLoads;
		
		private System.Nullable<double> _Accidents;
		
		private System.Nullable<double> _TotalLoads;
		
		private System.Nullable<double> _TotalOrders;
		
		private System.Nullable<double> _FirstLoadOnTimePercent;
		
		private System.Nullable<double> _DriverDeliveredVolume;
		
		private System.Nullable<double> _ScheduledVolume;
		
		private System.Nullable<double> _ScheduledTrucks;
		
		private System.Nullable<double> _TotalClockHours;
		
		private System.Nullable<double> _DriversUtilized;
		
		private System.Nullable<double> _AverageLoadSize;
		
		private System.Nullable<double> _StartUpTime;
		
		private System.Nullable<double> _ShutdownTime;
		
		private System.Nullable<double> _InYardTime;
		
		private System.Nullable<double> _TicketTime;
		
		private System.Nullable<double> _LoadTime;
		
		private System.Nullable<double> _TemperingTime;
		
		private System.Nullable<double> _ToJobTime;
		
		private System.Nullable<double> _WaitOnJobTime;
		
		private System.Nullable<double> _PourTime;
		
		private System.Nullable<double> _WashOnJobTime;
		
		private System.Nullable<double> _FromJobTime;
		
		private System.Nullable<double> _TruckBreakdowns;
		
		private System.Nullable<double> _NonDeliveryHours;
		
		private string _Notes;
		
		private System.Nullable<long> _RefId;
		
		private bool _IsMongoUpdated;
		
		private System.Nullable<double> _LeasedTruckUsed;
		
		private EntityRef<Plant> _Plant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDayDateTimeChanging(System.DateTime value);
    partial void OnDayDateTimeChanged();
    partial void OnPlantIdChanging(int value);
    partial void OnPlantIdChanged();
    partial void OnProducedVolumeChanging(System.Nullable<double> value);
    partial void OnProducedVolumeChanged();
    partial void OnTrucksAssignedChanging(System.Nullable<double> value);
    partial void OnTrucksAssignedChanged();
    partial void OnTruckAvailableChanging(System.Nullable<double> value);
    partial void OnTruckAvailableChanged();
    partial void OnDriversOnPayrollChanging(System.Nullable<double> value);
    partial void OnDriversOnPayrollChanged();
    partial void OnDriversAvailableChanging(System.Nullable<double> value);
    partial void OnDriversAvailableChanged();
    partial void OnPlantInterruptionsChanging(System.Nullable<double> value);
    partial void OnPlantInterruptionsChanged();
    partial void OnBadOrRejectedLoadsChanging(System.Nullable<double> value);
    partial void OnBadOrRejectedLoadsChanged();
    partial void OnAccidentsChanging(System.Nullable<double> value);
    partial void OnAccidentsChanged();
    partial void OnTotalLoadsChanging(System.Nullable<double> value);
    partial void OnTotalLoadsChanged();
    partial void OnTotalOrdersChanging(System.Nullable<double> value);
    partial void OnTotalOrdersChanged();
    partial void OnFirstLoadOnTimePercentChanging(System.Nullable<double> value);
    partial void OnFirstLoadOnTimePercentChanged();
    partial void OnDriverDeliveredVolumeChanging(System.Nullable<double> value);
    partial void OnDriverDeliveredVolumeChanged();
    partial void OnScheduledVolumeChanging(System.Nullable<double> value);
    partial void OnScheduledVolumeChanged();
    partial void OnScheduledTrucksChanging(System.Nullable<double> value);
    partial void OnScheduledTrucksChanged();
    partial void OnTotalClockHoursChanging(System.Nullable<double> value);
    partial void OnTotalClockHoursChanged();
    partial void OnDriversUtilizedChanging(System.Nullable<double> value);
    partial void OnDriversUtilizedChanged();
    partial void OnAverageLoadSizeChanging(System.Nullable<double> value);
    partial void OnAverageLoadSizeChanged();
    partial void OnStartUpTimeChanging(System.Nullable<double> value);
    partial void OnStartUpTimeChanged();
    partial void OnShutdownTimeChanging(System.Nullable<double> value);
    partial void OnShutdownTimeChanged();
    partial void OnInYardTimeChanging(System.Nullable<double> value);
    partial void OnInYardTimeChanged();
    partial void OnTicketTimeChanging(System.Nullable<double> value);
    partial void OnTicketTimeChanged();
    partial void OnLoadTimeChanging(System.Nullable<double> value);
    partial void OnLoadTimeChanged();
    partial void OnTemperingTimeChanging(System.Nullable<double> value);
    partial void OnTemperingTimeChanged();
    partial void OnToJobTimeChanging(System.Nullable<double> value);
    partial void OnToJobTimeChanged();
    partial void OnWaitOnJobTimeChanging(System.Nullable<double> value);
    partial void OnWaitOnJobTimeChanged();
    partial void OnPourTimeChanging(System.Nullable<double> value);
    partial void OnPourTimeChanged();
    partial void OnWashOnJobTimeChanging(System.Nullable<double> value);
    partial void OnWashOnJobTimeChanged();
    partial void OnFromJobTimeChanging(System.Nullable<double> value);
    partial void OnFromJobTimeChanged();
    partial void OnTruckBreakdownsChanging(System.Nullable<double> value);
    partial void OnTruckBreakdownsChanged();
    partial void OnNonDeliveryHoursChanging(System.Nullable<double> value);
    partial void OnNonDeliveryHoursChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRefIdChanging(System.Nullable<long> value);
    partial void OnRefIdChanged();
    partial void OnIsMongoUpdatedChanging(bool value);
    partial void OnIsMongoUpdatedChanged();
    partial void OnLeasedTruckUsedChanging(System.Nullable<double> value);
    partial void OnLeasedTruckUsedChanged();
    #endregion
		
		public DailyPlantSummary()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayDateTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime DayDateTime
		{
			get
			{
				return this._DayDateTime;
			}
			set
			{
				if ((this._DayDateTime != value))
				{
					this.OnDayDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DayDateTime = value;
					this.SendPropertyChanged("DayDateTime");
					this.OnDayDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProducedVolume", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<double> ProducedVolume
		{
			get
			{
				return this._ProducedVolume;
			}
			set
			{
				if ((this._ProducedVolume != value))
				{
					this.OnProducedVolumeChanging(value);
					this.SendPropertyChanging();
					this._ProducedVolume = value;
					this.SendPropertyChanged("ProducedVolume");
					this.OnProducedVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrucksAssigned", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<double> TrucksAssigned
		{
			get
			{
				return this._TrucksAssigned;
			}
			set
			{
				if ((this._TrucksAssigned != value))
				{
					this.OnTrucksAssignedChanging(value);
					this.SendPropertyChanging();
					this._TrucksAssigned = value;
					this.SendPropertyChanged("TrucksAssigned");
					this.OnTrucksAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckAvailable", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<double> TruckAvailable
		{
			get
			{
				return this._TruckAvailable;
			}
			set
			{
				if ((this._TruckAvailable != value))
				{
					this.OnTruckAvailableChanging(value);
					this.SendPropertyChanging();
					this._TruckAvailable = value;
					this.SendPropertyChanged("TruckAvailable");
					this.OnTruckAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriversOnPayroll", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<double> DriversOnPayroll
		{
			get
			{
				return this._DriversOnPayroll;
			}
			set
			{
				if ((this._DriversOnPayroll != value))
				{
					this.OnDriversOnPayrollChanging(value);
					this.SendPropertyChanging();
					this._DriversOnPayroll = value;
					this.SendPropertyChanged("DriversOnPayroll");
					this.OnDriversOnPayrollChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriversAvailable", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<double> DriversAvailable
		{
			get
			{
				return this._DriversAvailable;
			}
			set
			{
				if ((this._DriversAvailable != value))
				{
					this.OnDriversAvailableChanging(value);
					this.SendPropertyChanging();
					this._DriversAvailable = value;
					this.SendPropertyChanged("DriversAvailable");
					this.OnDriversAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantInterruptions", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<double> PlantInterruptions
		{
			get
			{
				return this._PlantInterruptions;
			}
			set
			{
				if ((this._PlantInterruptions != value))
				{
					this.OnPlantInterruptionsChanging(value);
					this.SendPropertyChanging();
					this._PlantInterruptions = value;
					this.SendPropertyChanged("PlantInterruptions");
					this.OnPlantInterruptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadOrRejectedLoads", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<double> BadOrRejectedLoads
		{
			get
			{
				return this._BadOrRejectedLoads;
			}
			set
			{
				if ((this._BadOrRejectedLoads != value))
				{
					this.OnBadOrRejectedLoadsChanging(value);
					this.SendPropertyChanging();
					this._BadOrRejectedLoads = value;
					this.SendPropertyChanged("BadOrRejectedLoads");
					this.OnBadOrRejectedLoadsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accidents", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<double> Accidents
		{
			get
			{
				return this._Accidents;
			}
			set
			{
				if ((this._Accidents != value))
				{
					this.OnAccidentsChanging(value);
					this.SendPropertyChanging();
					this._Accidents = value;
					this.SendPropertyChanged("Accidents");
					this.OnAccidentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLoads", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<double> TotalLoads
		{
			get
			{
				return this._TotalLoads;
			}
			set
			{
				if ((this._TotalLoads != value))
				{
					this.OnTotalLoadsChanging(value);
					this.SendPropertyChanging();
					this._TotalLoads = value;
					this.SendPropertyChanged("TotalLoads");
					this.OnTotalLoadsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOrders", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<double> TotalOrders
		{
			get
			{
				return this._TotalOrders;
			}
			set
			{
				if ((this._TotalOrders != value))
				{
					this.OnTotalOrdersChanging(value);
					this.SendPropertyChanging();
					this._TotalOrders = value;
					this.SendPropertyChanged("TotalOrders");
					this.OnTotalOrdersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLoadOnTimePercent", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<double> FirstLoadOnTimePercent
		{
			get
			{
				return this._FirstLoadOnTimePercent;
			}
			set
			{
				if ((this._FirstLoadOnTimePercent != value))
				{
					this.OnFirstLoadOnTimePercentChanging(value);
					this.SendPropertyChanging();
					this._FirstLoadOnTimePercent = value;
					this.SendPropertyChanged("FirstLoadOnTimePercent");
					this.OnFirstLoadOnTimePercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverDeliveredVolume", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<double> DriverDeliveredVolume
		{
			get
			{
				return this._DriverDeliveredVolume;
			}
			set
			{
				if ((this._DriverDeliveredVolume != value))
				{
					this.OnDriverDeliveredVolumeChanging(value);
					this.SendPropertyChanging();
					this._DriverDeliveredVolume = value;
					this.SendPropertyChanged("DriverDeliveredVolume");
					this.OnDriverDeliveredVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledVolume", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<double> ScheduledVolume
		{
			get
			{
				return this._ScheduledVolume;
			}
			set
			{
				if ((this._ScheduledVolume != value))
				{
					this.OnScheduledVolumeChanging(value);
					this.SendPropertyChanging();
					this._ScheduledVolume = value;
					this.SendPropertyChanged("ScheduledVolume");
					this.OnScheduledVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledTrucks", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<double> ScheduledTrucks
		{
			get
			{
				return this._ScheduledTrucks;
			}
			set
			{
				if ((this._ScheduledTrucks != value))
				{
					this.OnScheduledTrucksChanging(value);
					this.SendPropertyChanging();
					this._ScheduledTrucks = value;
					this.SendPropertyChanged("ScheduledTrucks");
					this.OnScheduledTrucksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalClockHours", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<double> TotalClockHours
		{
			get
			{
				return this._TotalClockHours;
			}
			set
			{
				if ((this._TotalClockHours != value))
				{
					this.OnTotalClockHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalClockHours = value;
					this.SendPropertyChanged("TotalClockHours");
					this.OnTotalClockHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriversUtilized", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<double> DriversUtilized
		{
			get
			{
				return this._DriversUtilized;
			}
			set
			{
				if ((this._DriversUtilized != value))
				{
					this.OnDriversUtilizedChanging(value);
					this.SendPropertyChanging();
					this._DriversUtilized = value;
					this.SendPropertyChanged("DriversUtilized");
					this.OnDriversUtilizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageLoadSize", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<double> AverageLoadSize
		{
			get
			{
				return this._AverageLoadSize;
			}
			set
			{
				if ((this._AverageLoadSize != value))
				{
					this.OnAverageLoadSizeChanging(value);
					this.SendPropertyChanging();
					this._AverageLoadSize = value;
					this.SendPropertyChanged("AverageLoadSize");
					this.OnAverageLoadSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUpTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<double> StartUpTime
		{
			get
			{
				return this._StartUpTime;
			}
			set
			{
				if ((this._StartUpTime != value))
				{
					this.OnStartUpTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUpTime = value;
					this.SendPropertyChanged("StartUpTime");
					this.OnStartUpTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShutdownTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<double> ShutdownTime
		{
			get
			{
				return this._ShutdownTime;
			}
			set
			{
				if ((this._ShutdownTime != value))
				{
					this.OnShutdownTimeChanging(value);
					this.SendPropertyChanging();
					this._ShutdownTime = value;
					this.SendPropertyChanged("ShutdownTime");
					this.OnShutdownTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InYardTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<double> InYardTime
		{
			get
			{
				return this._InYardTime;
			}
			set
			{
				if ((this._InYardTime != value))
				{
					this.OnInYardTimeChanging(value);
					this.SendPropertyChanging();
					this._InYardTime = value;
					this.SendPropertyChanged("InYardTime");
					this.OnInYardTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public System.Nullable<double> TicketTime
		{
			get
			{
				return this._TicketTime;
			}
			set
			{
				if ((this._TicketTime != value))
				{
					this.OnTicketTimeChanging(value);
					this.SendPropertyChanging();
					this._TicketTime = value;
					this.SendPropertyChanged("TicketTime");
					this.OnTicketTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<double> LoadTime
		{
			get
			{
				return this._LoadTime;
			}
			set
			{
				if ((this._LoadTime != value))
				{
					this.OnLoadTimeChanging(value);
					this.SendPropertyChanging();
					this._LoadTime = value;
					this.SendPropertyChanged("LoadTime");
					this.OnLoadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemperingTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<double> TemperingTime
		{
			get
			{
				return this._TemperingTime;
			}
			set
			{
				if ((this._TemperingTime != value))
				{
					this.OnTemperingTimeChanging(value);
					this.SendPropertyChanging();
					this._TemperingTime = value;
					this.SendPropertyChanged("TemperingTime");
					this.OnTemperingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToJobTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<double> ToJobTime
		{
			get
			{
				return this._ToJobTime;
			}
			set
			{
				if ((this._ToJobTime != value))
				{
					this.OnToJobTimeChanging(value);
					this.SendPropertyChanging();
					this._ToJobTime = value;
					this.SendPropertyChanged("ToJobTime");
					this.OnToJobTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitOnJobTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<double> WaitOnJobTime
		{
			get
			{
				return this._WaitOnJobTime;
			}
			set
			{
				if ((this._WaitOnJobTime != value))
				{
					this.OnWaitOnJobTimeChanging(value);
					this.SendPropertyChanging();
					this._WaitOnJobTime = value;
					this.SendPropertyChanged("WaitOnJobTime");
					this.OnWaitOnJobTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PourTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public System.Nullable<double> PourTime
		{
			get
			{
				return this._PourTime;
			}
			set
			{
				if ((this._PourTime != value))
				{
					this.OnPourTimeChanging(value);
					this.SendPropertyChanging();
					this._PourTime = value;
					this.SendPropertyChanged("PourTime");
					this.OnPourTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WashOnJobTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<double> WashOnJobTime
		{
			get
			{
				return this._WashOnJobTime;
			}
			set
			{
				if ((this._WashOnJobTime != value))
				{
					this.OnWashOnJobTimeChanging(value);
					this.SendPropertyChanging();
					this._WashOnJobTime = value;
					this.SendPropertyChanged("WashOnJobTime");
					this.OnWashOnJobTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromJobTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public System.Nullable<double> FromJobTime
		{
			get
			{
				return this._FromJobTime;
			}
			set
			{
				if ((this._FromJobTime != value))
				{
					this.OnFromJobTimeChanging(value);
					this.SendPropertyChanging();
					this._FromJobTime = value;
					this.SendPropertyChanged("FromJobTime");
					this.OnFromJobTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckBreakdowns", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public System.Nullable<double> TruckBreakdowns
		{
			get
			{
				return this._TruckBreakdowns;
			}
			set
			{
				if ((this._TruckBreakdowns != value))
				{
					this.OnTruckBreakdownsChanging(value);
					this.SendPropertyChanging();
					this._TruckBreakdowns = value;
					this.SendPropertyChanged("TruckBreakdowns");
					this.OnTruckBreakdownsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonDeliveryHours", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public System.Nullable<double> NonDeliveryHours
		{
			get
			{
				return this._NonDeliveryHours;
			}
			set
			{
				if ((this._NonDeliveryHours != value))
				{
					this.OnNonDeliveryHoursChanging(value);
					this.SendPropertyChanging();
					this._NonDeliveryHours = value;
					this.SendPropertyChanged("NonDeliveryHours");
					this.OnNonDeliveryHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public System.Nullable<long> RefId
		{
			get
			{
				return this._RefId;
			}
			set
			{
				if ((this._RefId != value))
				{
					this.OnRefIdChanging(value);
					this.SendPropertyChanging();
					this._RefId = value;
					this.SendPropertyChanged("RefId");
					this.OnRefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMongoUpdated", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36)]
		public bool IsMongoUpdated
		{
			get
			{
				return this._IsMongoUpdated;
			}
			set
			{
				if ((this._IsMongoUpdated != value))
				{
					this.OnIsMongoUpdatedChanging(value);
					this.SendPropertyChanging();
					this._IsMongoUpdated = value;
					this.SendPropertyChanged("IsMongoUpdated");
					this.OnIsMongoUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeasedTruckUsed", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37)]
		public System.Nullable<double> LeasedTruckUsed
		{
			get
			{
				return this._LeasedTruckUsed;
			}
			set
			{
				if ((this._LeasedTruckUsed != value))
				{
					this.OnLeasedTruckUsedChanging(value);
					this.SendPropertyChanging();
					this._LeasedTruckUsed = value;
					this.SendPropertyChanged("LeasedTruckUsed");
					this.OnLeasedTruckUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_DailyPlantSummary", Storage="_Plant", ThisKey="PlantId", OtherKey="PlantId", IsForeignKey=true)]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.DailyPlantSummaries.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.DailyPlantSummaries.Add(this);
						this._PlantId = value.PlantId;
					}
					else
					{
						this._PlantId = default(int);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Plant = default(EntityRef<Plant>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DashboardFilter")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DashboardFilter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _DashboardId;
		
		private string _EntityType;
		
		private long _EntityRefId;
		
		private System.DateTime _CreatedAt;
		
		private EntityRef<DashboardSetting> _DashboardSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDashboardIdChanging(long value);
    partial void OnDashboardIdChanged();
    partial void OnEntityTypeChanging(string value);
    partial void OnEntityTypeChanged();
    partial void OnEntityRefIdChanging(long value);
    partial void OnEntityRefIdChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public DashboardFilter()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long DashboardId
		{
			get
			{
				return this._DashboardId;
			}
			set
			{
				if ((this._DashboardId != value))
				{
					if (this._DashboardSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDashboardIdChanging(value);
					this.SendPropertyChanging();
					this._DashboardId = value;
					this.SendPropertyChanged("DashboardId");
					this.OnDashboardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string EntityType
		{
			get
			{
				return this._EntityType;
			}
			set
			{
				if ((this._EntityType != value))
				{
					this.OnEntityTypeChanging(value);
					this.SendPropertyChanging();
					this._EntityType = value;
					this.SendPropertyChanged("EntityType");
					this.OnEntityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityRefId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long EntityRefId
		{
			get
			{
				return this._EntityRefId;
			}
			set
			{
				if ((this._EntityRefId != value))
				{
					this.OnEntityRefIdChanging(value);
					this.SendPropertyChanging();
					this._EntityRefId = value;
					this.SendPropertyChanged("EntityRefId");
					this.OnEntityRefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DashboardSetting_DashboardFilter", Storage="_DashboardSetting", ThisKey="DashboardId", OtherKey="Id", IsForeignKey=true)]
		public DashboardSetting DashboardSetting
		{
			get
			{
				return this._DashboardSetting.Entity;
			}
			set
			{
				DashboardSetting previousValue = this._DashboardSetting.Entity;
				if (((previousValue != value) 
							|| (this._DashboardSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DashboardSetting.Entity = null;
						previousValue.DashboardFilters.Remove(this);
					}
					this._DashboardSetting.Entity = value;
					if ((value != null))
					{
						value.DashboardFilters.Add(this);
						this._DashboardId = value.Id;
					}
					else
					{
						this._DashboardId = default(long);
					}
					this.SendPropertyChanged("DashboardSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DashboardSetting = default(EntityRef<DashboardSetting>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DashboardSettings")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DashboardSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private bool _Favorite;
		
		private bool _Default;
		
		private int _MaxColumn;
		
		private System.Guid _UserId;
		
		private string _AccessType;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private EntitySet<DashboardFilter> _DashboardFilters;
		
		private EntitySet<UserDashboardSetting> _UserDashboardSettings;
		
		private EntitySet<WidgetSetting> _WidgetSettings;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFavoriteChanging(bool value);
    partial void OnFavoriteChanged();
    partial void OnDefaultChanging(bool value);
    partial void OnDefaultChanged();
    partial void OnMaxColumnChanging(int value);
    partial void OnMaxColumnChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnAccessTypeChanging(string value);
    partial void OnAccessTypeChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    #endregion
		
		public DashboardSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Favorite", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool Favorite
		{
			get
			{
				return this._Favorite;
			}
			set
			{
				if ((this._Favorite != value))
				{
					this.OnFavoriteChanging(value);
					this.SendPropertyChanging();
					this._Favorite = value;
					this.SendPropertyChanged("Favorite");
					this.OnFavoriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Default]", Storage="_Default", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool Default
		{
			get
			{
				return this._Default;
			}
			set
			{
				if ((this._Default != value))
				{
					this.OnDefaultChanging(value);
					this.SendPropertyChanging();
					this._Default = value;
					this.SendPropertyChanged("Default");
					this.OnDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxColumn", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int MaxColumn
		{
			get
			{
				return this._MaxColumn;
			}
			set
			{
				if ((this._MaxColumn != value))
				{
					this.OnMaxColumnChanging(value);
					this.SendPropertyChanging();
					this._MaxColumn = value;
					this.SendPropertyChanged("MaxColumn");
					this.OnMaxColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessType", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string AccessType
		{
			get
			{
				return this._AccessType;
			}
			set
			{
				if ((this._AccessType != value))
				{
					this.OnAccessTypeChanging(value);
					this.SendPropertyChanging();
					this._AccessType = value;
					this.SendPropertyChanged("AccessType");
					this.OnAccessTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DashboardSetting_DashboardFilter", Storage="_DashboardFilters", ThisKey="Id", OtherKey="DashboardId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<DashboardFilter> DashboardFilters
		{
			get
			{
				if ((this.serializing 
							&& (this._DashboardFilters.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DashboardFilters;
			}
			set
			{
				this._DashboardFilters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DashboardSetting_UserDashboardSetting", Storage="_UserDashboardSettings", ThisKey="Id", OtherKey="DashboardId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<UserDashboardSetting> UserDashboardSettings
		{
			get
			{
				if ((this.serializing 
							&& (this._UserDashboardSettings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserDashboardSettings;
			}
			set
			{
				this._UserDashboardSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DashboardSetting_WidgetSetting", Storage="_WidgetSettings", ThisKey="Id", OtherKey="DashboardId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<WidgetSetting> WidgetSettings
		{
			get
			{
				if ((this.serializing 
							&& (this._WidgetSettings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WidgetSettings;
			}
			set
			{
				this._WidgetSettings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DashboardFilters(DashboardFilter entity)
		{
			this.SendPropertyChanging();
			entity.DashboardSetting = this;
		}
		
		private void detach_DashboardFilters(DashboardFilter entity)
		{
			this.SendPropertyChanging();
			entity.DashboardSetting = null;
		}
		
		private void attach_UserDashboardSettings(UserDashboardSetting entity)
		{
			this.SendPropertyChanging();
			entity.DashboardSetting = this;
		}
		
		private void detach_UserDashboardSettings(UserDashboardSetting entity)
		{
			this.SendPropertyChanging();
			entity.DashboardSetting = null;
		}
		
		private void attach_WidgetSettings(WidgetSetting entity)
		{
			this.SendPropertyChanging();
			entity.DashboardSetting = this;
		}
		
		private void detach_WidgetSettings(WidgetSetting entity)
		{
			this.SendPropertyChanging();
			entity.DashboardSetting = null;
		}
		
		private void Initialize()
		{
			this._DashboardFilters = new EntitySet<DashboardFilter>(new Action<DashboardFilter>(this.attach_DashboardFilters), new Action<DashboardFilter>(this.detach_DashboardFilters));
			this._UserDashboardSettings = new EntitySet<UserDashboardSetting>(new Action<UserDashboardSetting>(this.attach_UserDashboardSettings), new Action<UserDashboardSetting>(this.detach_UserDashboardSettings));
			this._WidgetSettings = new EntitySet<WidgetSetting>(new Action<WidgetSetting>(this.attach_WidgetSettings), new Action<WidgetSetting>(this.detach_WidgetSettings));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DefaultQuoteProduct")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DefaultQuoteProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductTypeId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductTypeIdChanging(int value);
    partial void OnProductTypeIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public DefaultQuoteProduct()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					this.OnProductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeId = value;
					this.SendPropertyChanged("ProductTypeId");
					this.OnProductTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.District")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class District : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictId;
		
		private int _CompanyId;
		
		private int _RegionId;
		
		private string _Name;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<double> _Load;
		
		private System.Nullable<double> _Wash;
		
		private System.Nullable<double> _Unload;
		
		private System.Nullable<double> _ToJob;
		
		private System.Nullable<double> _Return;
		
		private System.Nullable<int> _AcceptanceExpiration;
		
		private System.Nullable<int> _QuoteExpiration;
		
		private string _QuoteApprovalRequestText;
		
		private string _ProjectEntryFormNotification;
		
		private string _EmailQuoteToCustomer;
		
		private string _Disclaimers;
		
		private string _Disclosures;
		
		private string _TermsAndConditions;
		
		private string _Acceptance;
		
		private string _DispatchAddress;
		
		private string _DispatchCityStateZip;
		
		private string _DispatchPhone;
		
		private string _DispatchFax;
		
		private System.Nullable<bool> _PriceInclude;
		
		private System.Nullable<int> _PriceSequence;
		
		private System.Nullable<bool> _QuantityInclude;
		
		private System.Nullable<int> _QuantitySequence;
		
		private System.Nullable<bool> _MixIdInclude;
		
		private System.Nullable<int> _MixIdSequence;
		
		private System.Nullable<bool> _DescriptionInclude;
		
		private System.Nullable<int> _DescriptionSequence;
		
		private System.Nullable<bool> _PsiInclude;
		
		private System.Nullable<int> _PsiSequence;
		
		private System.Nullable<bool> _PublicCommentsInclude;
		
		private System.Nullable<int> _PublicCommentsSequence;
		
		private System.Nullable<bool> _SlumpInclude;
		
		private System.Nullable<int> _SlumpSequence;
		
		private System.Nullable<bool> _AirInclude;
		
		private System.Nullable<int> _AirSequence;
		
		private string _MapCenterLat;
		
		private string _MapCenterLong;
		
		private System.Nullable<int> _MapZoomLevel;
		
		private System.Nullable<int> _MapScaleRadius10;
		
		private System.Nullable<int> _MapScaleRadius100;
		
		private System.Nullable<bool> _AshInclude;
		
		private System.Nullable<int> _AshSequence;
		
		private System.Nullable<bool> _FineAggInclude;
		
		private System.Nullable<int> _FineAggSequence;
		
		private System.Nullable<bool> _SacksInclude;
		
		private System.Nullable<int> _SacksSequence;
		
		private System.Nullable<bool> _MD1Include;
		
		private System.Nullable<int> _MD1Sequence;
		
		private System.Nullable<bool> _MD2Include;
		
		private System.Nullable<int> _MD2Sequence;
		
		private System.Nullable<bool> _MD3Include;
		
		private System.Nullable<int> _MD3Sequence;
		
		private System.Nullable<bool> _MD4Include;
		
		private System.Nullable<int> _MD4Sequence;
		
		private string _FileName;
		
		private string _FileKey;
		
		private System.Nullable<bool> _IncludeByDefault;
		
		private System.Nullable<bool> _QCRequirement;
		
		private System.Nullable<double> _AdjustMixPrice;
		
		private System.Nullable<bool> _LettingDate;
		
		private System.Nullable<bool> _CustomerNumberOnPDF;
		
		private string _PricingAvailabilityDisclaimer;
		
		private string _ExpirationDateLabel;
		
		private EntitySet<AddonPriceProjection> _AddonPriceProjections;
		
		private EntitySet<Competitor> _Competitors;
		
		private EntitySet<CompetitorPlant> _CompetitorPlants;
		
		private EntitySet<DistrictAddonDefault> _DistrictAddonDefaults;
		
		private EntitySet<DistrictCompetitor> _DistrictCompetitors;
		
		private EntitySet<DistrictCustomer> _DistrictCustomers;
		
		private EntitySet<DistrictMarketSegment> _DistrictMarketSegments;
		
		private EntitySet<DistrictSalesStaff> _DistrictSalesStaffs;
		
		private EntitySet<DistrictUser> _DistrictUsers;
		
		private EntitySet<Plant> _Plants;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Region> _Region;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnLoadChanging(System.Nullable<double> value);
    partial void OnLoadChanged();
    partial void OnWashChanging(System.Nullable<double> value);
    partial void OnWashChanged();
    partial void OnUnloadChanging(System.Nullable<double> value);
    partial void OnUnloadChanged();
    partial void OnToJobChanging(System.Nullable<double> value);
    partial void OnToJobChanged();
    partial void OnReturnChanging(System.Nullable<double> value);
    partial void OnReturnChanged();
    partial void OnAcceptanceExpirationChanging(System.Nullable<int> value);
    partial void OnAcceptanceExpirationChanged();
    partial void OnQuoteExpirationChanging(System.Nullable<int> value);
    partial void OnQuoteExpirationChanged();
    partial void OnQuoteApprovalRequestTextChanging(string value);
    partial void OnQuoteApprovalRequestTextChanged();
    partial void OnProjectEntryFormNotificationChanging(string value);
    partial void OnProjectEntryFormNotificationChanged();
    partial void OnEmailQuoteToCustomerChanging(string value);
    partial void OnEmailQuoteToCustomerChanged();
    partial void OnDisclaimersChanging(string value);
    partial void OnDisclaimersChanged();
    partial void OnDisclosuresChanging(string value);
    partial void OnDisclosuresChanged();
    partial void OnTermsAndConditionsChanging(string value);
    partial void OnTermsAndConditionsChanged();
    partial void OnAcceptanceChanging(string value);
    partial void OnAcceptanceChanged();
    partial void OnDispatchAddressChanging(string value);
    partial void OnDispatchAddressChanged();
    partial void OnDispatchCityStateZipChanging(string value);
    partial void OnDispatchCityStateZipChanged();
    partial void OnDispatchPhoneChanging(string value);
    partial void OnDispatchPhoneChanged();
    partial void OnDispatchFaxChanging(string value);
    partial void OnDispatchFaxChanged();
    partial void OnPriceIncludeChanging(System.Nullable<bool> value);
    partial void OnPriceIncludeChanged();
    partial void OnPriceSequenceChanging(System.Nullable<int> value);
    partial void OnPriceSequenceChanged();
    partial void OnQuantityIncludeChanging(System.Nullable<bool> value);
    partial void OnQuantityIncludeChanged();
    partial void OnQuantitySequenceChanging(System.Nullable<int> value);
    partial void OnQuantitySequenceChanged();
    partial void OnMixIdIncludeChanging(System.Nullable<bool> value);
    partial void OnMixIdIncludeChanged();
    partial void OnMixIdSequenceChanging(System.Nullable<int> value);
    partial void OnMixIdSequenceChanged();
    partial void OnDescriptionIncludeChanging(System.Nullable<bool> value);
    partial void OnDescriptionIncludeChanged();
    partial void OnDescriptionSequenceChanging(System.Nullable<int> value);
    partial void OnDescriptionSequenceChanged();
    partial void OnPsiIncludeChanging(System.Nullable<bool> value);
    partial void OnPsiIncludeChanged();
    partial void OnPsiSequenceChanging(System.Nullable<int> value);
    partial void OnPsiSequenceChanged();
    partial void OnPublicCommentsIncludeChanging(System.Nullable<bool> value);
    partial void OnPublicCommentsIncludeChanged();
    partial void OnPublicCommentsSequenceChanging(System.Nullable<int> value);
    partial void OnPublicCommentsSequenceChanged();
    partial void OnSlumpIncludeChanging(System.Nullable<bool> value);
    partial void OnSlumpIncludeChanged();
    partial void OnSlumpSequenceChanging(System.Nullable<int> value);
    partial void OnSlumpSequenceChanged();
    partial void OnAirIncludeChanging(System.Nullable<bool> value);
    partial void OnAirIncludeChanged();
    partial void OnAirSequenceChanging(System.Nullable<int> value);
    partial void OnAirSequenceChanged();
    partial void OnMapCenterLatChanging(string value);
    partial void OnMapCenterLatChanged();
    partial void OnMapCenterLongChanging(string value);
    partial void OnMapCenterLongChanged();
    partial void OnMapZoomLevelChanging(System.Nullable<int> value);
    partial void OnMapZoomLevelChanged();
    partial void OnMapScaleRadius10Changing(System.Nullable<int> value);
    partial void OnMapScaleRadius10Changed();
    partial void OnMapScaleRadius100Changing(System.Nullable<int> value);
    partial void OnMapScaleRadius100Changed();
    partial void OnAshIncludeChanging(System.Nullable<bool> value);
    partial void OnAshIncludeChanged();
    partial void OnAshSequenceChanging(System.Nullable<int> value);
    partial void OnAshSequenceChanged();
    partial void OnFineAggIncludeChanging(System.Nullable<bool> value);
    partial void OnFineAggIncludeChanged();
    partial void OnFineAggSequenceChanging(System.Nullable<int> value);
    partial void OnFineAggSequenceChanged();
    partial void OnSacksIncludeChanging(System.Nullable<bool> value);
    partial void OnSacksIncludeChanged();
    partial void OnSacksSequenceChanging(System.Nullable<int> value);
    partial void OnSacksSequenceChanged();
    partial void OnMD1IncludeChanging(System.Nullable<bool> value);
    partial void OnMD1IncludeChanged();
    partial void OnMD1SequenceChanging(System.Nullable<int> value);
    partial void OnMD1SequenceChanged();
    partial void OnMD2IncludeChanging(System.Nullable<bool> value);
    partial void OnMD2IncludeChanged();
    partial void OnMD2SequenceChanging(System.Nullable<int> value);
    partial void OnMD2SequenceChanged();
    partial void OnMD3IncludeChanging(System.Nullable<bool> value);
    partial void OnMD3IncludeChanged();
    partial void OnMD3SequenceChanging(System.Nullable<int> value);
    partial void OnMD3SequenceChanged();
    partial void OnMD4IncludeChanging(System.Nullable<bool> value);
    partial void OnMD4IncludeChanged();
    partial void OnMD4SequenceChanging(System.Nullable<int> value);
    partial void OnMD4SequenceChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileKeyChanging(string value);
    partial void OnFileKeyChanged();
    partial void OnIncludeByDefaultChanging(System.Nullable<bool> value);
    partial void OnIncludeByDefaultChanged();
    partial void OnQCRequirementChanging(System.Nullable<bool> value);
    partial void OnQCRequirementChanged();
    partial void OnAdjustMixPriceChanging(System.Nullable<double> value);
    partial void OnAdjustMixPriceChanged();
    partial void OnLettingDateChanging(System.Nullable<bool> value);
    partial void OnLettingDateChanged();
    partial void OnCustomerNumberOnPDFChanging(System.Nullable<bool> value);
    partial void OnCustomerNumberOnPDFChanged();
    partial void OnPricingAvailabilityDisclaimerChanging(string value);
    partial void OnPricingAvailabilityDisclaimerChanged();
    partial void OnExpirationDateLabelChanging(string value);
    partial void OnExpirationDateLabelChanged();
    #endregion
		
		public District()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Load]", Storage="_Load", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<double> Load
		{
			get
			{
				return this._Load;
			}
			set
			{
				if ((this._Load != value))
				{
					this.OnLoadChanging(value);
					this.SendPropertyChanging();
					this._Load = value;
					this.SendPropertyChanged("Load");
					this.OnLoadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wash", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<double> Wash
		{
			get
			{
				return this._Wash;
			}
			set
			{
				if ((this._Wash != value))
				{
					this.OnWashChanging(value);
					this.SendPropertyChanging();
					this._Wash = value;
					this.SendPropertyChanged("Wash");
					this.OnWashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unload", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<double> Unload
		{
			get
			{
				return this._Unload;
			}
			set
			{
				if ((this._Unload != value))
				{
					this.OnUnloadChanging(value);
					this.SendPropertyChanging();
					this._Unload = value;
					this.SendPropertyChanged("Unload");
					this.OnUnloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToJob", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<double> ToJob
		{
			get
			{
				return this._ToJob;
			}
			set
			{
				if ((this._ToJob != value))
				{
					this.OnToJobChanging(value);
					this.SendPropertyChanging();
					this._ToJob = value;
					this.SendPropertyChanged("ToJob");
					this.OnToJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Return]", Storage="_Return", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<double> Return
		{
			get
			{
				return this._Return;
			}
			set
			{
				if ((this._Return != value))
				{
					this.OnReturnChanging(value);
					this.SendPropertyChanging();
					this._Return = value;
					this.SendPropertyChanged("Return");
					this.OnReturnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceExpiration", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> AcceptanceExpiration
		{
			get
			{
				return this._AcceptanceExpiration;
			}
			set
			{
				if ((this._AcceptanceExpiration != value))
				{
					this.OnAcceptanceExpirationChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceExpiration = value;
					this.SendPropertyChanged("AcceptanceExpiration");
					this.OnAcceptanceExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteExpiration", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> QuoteExpiration
		{
			get
			{
				return this._QuoteExpiration;
			}
			set
			{
				if ((this._QuoteExpiration != value))
				{
					this.OnQuoteExpirationChanging(value);
					this.SendPropertyChanging();
					this._QuoteExpiration = value;
					this.SendPropertyChanged("QuoteExpiration");
					this.OnQuoteExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteApprovalRequestText", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string QuoteApprovalRequestText
		{
			get
			{
				return this._QuoteApprovalRequestText;
			}
			set
			{
				if ((this._QuoteApprovalRequestText != value))
				{
					this.OnQuoteApprovalRequestTextChanging(value);
					this.SendPropertyChanging();
					this._QuoteApprovalRequestText = value;
					this.SendPropertyChanged("QuoteApprovalRequestText");
					this.OnQuoteApprovalRequestTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectEntryFormNotification", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string ProjectEntryFormNotification
		{
			get
			{
				return this._ProjectEntryFormNotification;
			}
			set
			{
				if ((this._ProjectEntryFormNotification != value))
				{
					this.OnProjectEntryFormNotificationChanging(value);
					this.SendPropertyChanging();
					this._ProjectEntryFormNotification = value;
					this.SendPropertyChanged("ProjectEntryFormNotification");
					this.OnProjectEntryFormNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailQuoteToCustomer", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string EmailQuoteToCustomer
		{
			get
			{
				return this._EmailQuoteToCustomer;
			}
			set
			{
				if ((this._EmailQuoteToCustomer != value))
				{
					this.OnEmailQuoteToCustomerChanging(value);
					this.SendPropertyChanging();
					this._EmailQuoteToCustomer = value;
					this.SendPropertyChanged("EmailQuoteToCustomer");
					this.OnEmailQuoteToCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disclaimers", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string Disclaimers
		{
			get
			{
				return this._Disclaimers;
			}
			set
			{
				if ((this._Disclaimers != value))
				{
					this.OnDisclaimersChanging(value);
					this.SendPropertyChanging();
					this._Disclaimers = value;
					this.SendPropertyChanged("Disclaimers");
					this.OnDisclaimersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disclosures", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string Disclosures
		{
			get
			{
				return this._Disclosures;
			}
			set
			{
				if ((this._Disclosures != value))
				{
					this.OnDisclosuresChanging(value);
					this.SendPropertyChanging();
					this._Disclosures = value;
					this.SendPropertyChanged("Disclosures");
					this.OnDisclosuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermsAndConditions", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string TermsAndConditions
		{
			get
			{
				return this._TermsAndConditions;
			}
			set
			{
				if ((this._TermsAndConditions != value))
				{
					this.OnTermsAndConditionsChanging(value);
					this.SendPropertyChanging();
					this._TermsAndConditions = value;
					this.SendPropertyChanged("TermsAndConditions");
					this.OnTermsAndConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acceptance", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string Acceptance
		{
			get
			{
				return this._Acceptance;
			}
			set
			{
				if ((this._Acceptance != value))
				{
					this.OnAcceptanceChanging(value);
					this.SendPropertyChanging();
					this._Acceptance = value;
					this.SendPropertyChanged("Acceptance");
					this.OnAcceptanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchAddress", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string DispatchAddress
		{
			get
			{
				return this._DispatchAddress;
			}
			set
			{
				if ((this._DispatchAddress != value))
				{
					this.OnDispatchAddressChanging(value);
					this.SendPropertyChanging();
					this._DispatchAddress = value;
					this.SendPropertyChanged("DispatchAddress");
					this.OnDispatchAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchCityStateZip", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string DispatchCityStateZip
		{
			get
			{
				return this._DispatchCityStateZip;
			}
			set
			{
				if ((this._DispatchCityStateZip != value))
				{
					this.OnDispatchCityStateZipChanging(value);
					this.SendPropertyChanging();
					this._DispatchCityStateZip = value;
					this.SendPropertyChanged("DispatchCityStateZip");
					this.OnDispatchCityStateZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchPhone", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string DispatchPhone
		{
			get
			{
				return this._DispatchPhone;
			}
			set
			{
				if ((this._DispatchPhone != value))
				{
					this.OnDispatchPhoneChanging(value);
					this.SendPropertyChanging();
					this._DispatchPhone = value;
					this.SendPropertyChanged("DispatchPhone");
					this.OnDispatchPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchFax", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string DispatchFax
		{
			get
			{
				return this._DispatchFax;
			}
			set
			{
				if ((this._DispatchFax != value))
				{
					this.OnDispatchFaxChanging(value);
					this.SendPropertyChanging();
					this._DispatchFax = value;
					this.SendPropertyChanged("DispatchFax");
					this.OnDispatchFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public System.Nullable<bool> PriceInclude
		{
			get
			{
				return this._PriceInclude;
			}
			set
			{
				if ((this._PriceInclude != value))
				{
					this.OnPriceIncludeChanging(value);
					this.SendPropertyChanging();
					this._PriceInclude = value;
					this.SendPropertyChanged("PriceInclude");
					this.OnPriceIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<int> PriceSequence
		{
			get
			{
				return this._PriceSequence;
			}
			set
			{
				if ((this._PriceSequence != value))
				{
					this.OnPriceSequenceChanging(value);
					this.SendPropertyChanging();
					this._PriceSequence = value;
					this.SendPropertyChanged("PriceSequence");
					this.OnPriceSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<bool> QuantityInclude
		{
			get
			{
				return this._QuantityInclude;
			}
			set
			{
				if ((this._QuantityInclude != value))
				{
					this.OnQuantityIncludeChanging(value);
					this.SendPropertyChanging();
					this._QuantityInclude = value;
					this.SendPropertyChanged("QuantityInclude");
					this.OnQuantityIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantitySequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<int> QuantitySequence
		{
			get
			{
				return this._QuantitySequence;
			}
			set
			{
				if ((this._QuantitySequence != value))
				{
					this.OnQuantitySequenceChanging(value);
					this.SendPropertyChanging();
					this._QuantitySequence = value;
					this.SendPropertyChanged("QuantitySequence");
					this.OnQuantitySequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixIdInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<bool> MixIdInclude
		{
			get
			{
				return this._MixIdInclude;
			}
			set
			{
				if ((this._MixIdInclude != value))
				{
					this.OnMixIdIncludeChanging(value);
					this.SendPropertyChanging();
					this._MixIdInclude = value;
					this.SendPropertyChanged("MixIdInclude");
					this.OnMixIdIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixIdSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public System.Nullable<int> MixIdSequence
		{
			get
			{
				return this._MixIdSequence;
			}
			set
			{
				if ((this._MixIdSequence != value))
				{
					this.OnMixIdSequenceChanging(value);
					this.SendPropertyChanging();
					this._MixIdSequence = value;
					this.SendPropertyChanged("MixIdSequence");
					this.OnMixIdSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<bool> DescriptionInclude
		{
			get
			{
				return this._DescriptionInclude;
			}
			set
			{
				if ((this._DescriptionInclude != value))
				{
					this.OnDescriptionIncludeChanging(value);
					this.SendPropertyChanging();
					this._DescriptionInclude = value;
					this.SendPropertyChanged("DescriptionInclude");
					this.OnDescriptionIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public System.Nullable<int> DescriptionSequence
		{
			get
			{
				return this._DescriptionSequence;
			}
			set
			{
				if ((this._DescriptionSequence != value))
				{
					this.OnDescriptionSequenceChanging(value);
					this.SendPropertyChanging();
					this._DescriptionSequence = value;
					this.SendPropertyChanged("DescriptionSequence");
					this.OnDescriptionSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsiInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public System.Nullable<bool> PsiInclude
		{
			get
			{
				return this._PsiInclude;
			}
			set
			{
				if ((this._PsiInclude != value))
				{
					this.OnPsiIncludeChanging(value);
					this.SendPropertyChanging();
					this._PsiInclude = value;
					this.SendPropertyChanged("PsiInclude");
					this.OnPsiIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsiSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public System.Nullable<int> PsiSequence
		{
			get
			{
				return this._PsiSequence;
			}
			set
			{
				if ((this._PsiSequence != value))
				{
					this.OnPsiSequenceChanging(value);
					this.SendPropertyChanging();
					this._PsiSequence = value;
					this.SendPropertyChanged("PsiSequence");
					this.OnPsiSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicCommentsInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public System.Nullable<bool> PublicCommentsInclude
		{
			get
			{
				return this._PublicCommentsInclude;
			}
			set
			{
				if ((this._PublicCommentsInclude != value))
				{
					this.OnPublicCommentsIncludeChanging(value);
					this.SendPropertyChanging();
					this._PublicCommentsInclude = value;
					this.SendPropertyChanged("PublicCommentsInclude");
					this.OnPublicCommentsIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicCommentsSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public System.Nullable<int> PublicCommentsSequence
		{
			get
			{
				return this._PublicCommentsSequence;
			}
			set
			{
				if ((this._PublicCommentsSequence != value))
				{
					this.OnPublicCommentsSequenceChanging(value);
					this.SendPropertyChanging();
					this._PublicCommentsSequence = value;
					this.SendPropertyChanged("PublicCommentsSequence");
					this.OnPublicCommentsSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlumpInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36)]
		public System.Nullable<bool> SlumpInclude
		{
			get
			{
				return this._SlumpInclude;
			}
			set
			{
				if ((this._SlumpInclude != value))
				{
					this.OnSlumpIncludeChanging(value);
					this.SendPropertyChanging();
					this._SlumpInclude = value;
					this.SendPropertyChanged("SlumpInclude");
					this.OnSlumpIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlumpSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37)]
		public System.Nullable<int> SlumpSequence
		{
			get
			{
				return this._SlumpSequence;
			}
			set
			{
				if ((this._SlumpSequence != value))
				{
					this.OnSlumpSequenceChanging(value);
					this.SendPropertyChanging();
					this._SlumpSequence = value;
					this.SendPropertyChanged("SlumpSequence");
					this.OnSlumpSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38)]
		public System.Nullable<bool> AirInclude
		{
			get
			{
				return this._AirInclude;
			}
			set
			{
				if ((this._AirInclude != value))
				{
					this.OnAirIncludeChanging(value);
					this.SendPropertyChanging();
					this._AirInclude = value;
					this.SendPropertyChanged("AirInclude");
					this.OnAirIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39)]
		public System.Nullable<int> AirSequence
		{
			get
			{
				return this._AirSequence;
			}
			set
			{
				if ((this._AirSequence != value))
				{
					this.OnAirSequenceChanging(value);
					this.SendPropertyChanging();
					this._AirSequence = value;
					this.SendPropertyChanged("AirSequence");
					this.OnAirSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapCenterLat", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40)]
		public string MapCenterLat
		{
			get
			{
				return this._MapCenterLat;
			}
			set
			{
				if ((this._MapCenterLat != value))
				{
					this.OnMapCenterLatChanging(value);
					this.SendPropertyChanging();
					this._MapCenterLat = value;
					this.SendPropertyChanged("MapCenterLat");
					this.OnMapCenterLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapCenterLong", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41)]
		public string MapCenterLong
		{
			get
			{
				return this._MapCenterLong;
			}
			set
			{
				if ((this._MapCenterLong != value))
				{
					this.OnMapCenterLongChanging(value);
					this.SendPropertyChanging();
					this._MapCenterLong = value;
					this.SendPropertyChanged("MapCenterLong");
					this.OnMapCenterLongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapZoomLevel", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=42)]
		public System.Nullable<int> MapZoomLevel
		{
			get
			{
				return this._MapZoomLevel;
			}
			set
			{
				if ((this._MapZoomLevel != value))
				{
					this.OnMapZoomLevelChanging(value);
					this.SendPropertyChanging();
					this._MapZoomLevel = value;
					this.SendPropertyChanged("MapZoomLevel");
					this.OnMapZoomLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapScaleRadius10", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=43)]
		public System.Nullable<int> MapScaleRadius10
		{
			get
			{
				return this._MapScaleRadius10;
			}
			set
			{
				if ((this._MapScaleRadius10 != value))
				{
					this.OnMapScaleRadius10Changing(value);
					this.SendPropertyChanging();
					this._MapScaleRadius10 = value;
					this.SendPropertyChanged("MapScaleRadius10");
					this.OnMapScaleRadius10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapScaleRadius100", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=44)]
		public System.Nullable<int> MapScaleRadius100
		{
			get
			{
				return this._MapScaleRadius100;
			}
			set
			{
				if ((this._MapScaleRadius100 != value))
				{
					this.OnMapScaleRadius100Changing(value);
					this.SendPropertyChanging();
					this._MapScaleRadius100 = value;
					this.SendPropertyChanged("MapScaleRadius100");
					this.OnMapScaleRadius100Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AshInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=45)]
		public System.Nullable<bool> AshInclude
		{
			get
			{
				return this._AshInclude;
			}
			set
			{
				if ((this._AshInclude != value))
				{
					this.OnAshIncludeChanging(value);
					this.SendPropertyChanging();
					this._AshInclude = value;
					this.SendPropertyChanged("AshInclude");
					this.OnAshIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AshSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=46)]
		public System.Nullable<int> AshSequence
		{
			get
			{
				return this._AshSequence;
			}
			set
			{
				if ((this._AshSequence != value))
				{
					this.OnAshSequenceChanging(value);
					this.SendPropertyChanging();
					this._AshSequence = value;
					this.SendPropertyChanged("AshSequence");
					this.OnAshSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineAggInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=47)]
		public System.Nullable<bool> FineAggInclude
		{
			get
			{
				return this._FineAggInclude;
			}
			set
			{
				if ((this._FineAggInclude != value))
				{
					this.OnFineAggIncludeChanging(value);
					this.SendPropertyChanging();
					this._FineAggInclude = value;
					this.SendPropertyChanged("FineAggInclude");
					this.OnFineAggIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineAggSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=48)]
		public System.Nullable<int> FineAggSequence
		{
			get
			{
				return this._FineAggSequence;
			}
			set
			{
				if ((this._FineAggSequence != value))
				{
					this.OnFineAggSequenceChanging(value);
					this.SendPropertyChanging();
					this._FineAggSequence = value;
					this.SendPropertyChanged("FineAggSequence");
					this.OnFineAggSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SacksInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=49)]
		public System.Nullable<bool> SacksInclude
		{
			get
			{
				return this._SacksInclude;
			}
			set
			{
				if ((this._SacksInclude != value))
				{
					this.OnSacksIncludeChanging(value);
					this.SendPropertyChanging();
					this._SacksInclude = value;
					this.SendPropertyChanged("SacksInclude");
					this.OnSacksIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SacksSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=50)]
		public System.Nullable<int> SacksSequence
		{
			get
			{
				return this._SacksSequence;
			}
			set
			{
				if ((this._SacksSequence != value))
				{
					this.OnSacksSequenceChanging(value);
					this.SendPropertyChanging();
					this._SacksSequence = value;
					this.SendPropertyChanged("SacksSequence");
					this.OnSacksSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD1Include", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=51)]
		public System.Nullable<bool> MD1Include
		{
			get
			{
				return this._MD1Include;
			}
			set
			{
				if ((this._MD1Include != value))
				{
					this.OnMD1IncludeChanging(value);
					this.SendPropertyChanging();
					this._MD1Include = value;
					this.SendPropertyChanged("MD1Include");
					this.OnMD1IncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD1Sequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=52)]
		public System.Nullable<int> MD1Sequence
		{
			get
			{
				return this._MD1Sequence;
			}
			set
			{
				if ((this._MD1Sequence != value))
				{
					this.OnMD1SequenceChanging(value);
					this.SendPropertyChanging();
					this._MD1Sequence = value;
					this.SendPropertyChanged("MD1Sequence");
					this.OnMD1SequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD2Include", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=53)]
		public System.Nullable<bool> MD2Include
		{
			get
			{
				return this._MD2Include;
			}
			set
			{
				if ((this._MD2Include != value))
				{
					this.OnMD2IncludeChanging(value);
					this.SendPropertyChanging();
					this._MD2Include = value;
					this.SendPropertyChanged("MD2Include");
					this.OnMD2IncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD2Sequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=54)]
		public System.Nullable<int> MD2Sequence
		{
			get
			{
				return this._MD2Sequence;
			}
			set
			{
				if ((this._MD2Sequence != value))
				{
					this.OnMD2SequenceChanging(value);
					this.SendPropertyChanging();
					this._MD2Sequence = value;
					this.SendPropertyChanged("MD2Sequence");
					this.OnMD2SequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD3Include", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=55)]
		public System.Nullable<bool> MD3Include
		{
			get
			{
				return this._MD3Include;
			}
			set
			{
				if ((this._MD3Include != value))
				{
					this.OnMD3IncludeChanging(value);
					this.SendPropertyChanging();
					this._MD3Include = value;
					this.SendPropertyChanged("MD3Include");
					this.OnMD3IncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD3Sequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=56)]
		public System.Nullable<int> MD3Sequence
		{
			get
			{
				return this._MD3Sequence;
			}
			set
			{
				if ((this._MD3Sequence != value))
				{
					this.OnMD3SequenceChanging(value);
					this.SendPropertyChanging();
					this._MD3Sequence = value;
					this.SendPropertyChanged("MD3Sequence");
					this.OnMD3SequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD4Include", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=57)]
		public System.Nullable<bool> MD4Include
		{
			get
			{
				return this._MD4Include;
			}
			set
			{
				if ((this._MD4Include != value))
				{
					this.OnMD4IncludeChanging(value);
					this.SendPropertyChanging();
					this._MD4Include = value;
					this.SendPropertyChanged("MD4Include");
					this.OnMD4IncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD4Sequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=58)]
		public System.Nullable<int> MD4Sequence
		{
			get
			{
				return this._MD4Sequence;
			}
			set
			{
				if ((this._MD4Sequence != value))
				{
					this.OnMD4SequenceChanging(value);
					this.SendPropertyChanging();
					this._MD4Sequence = value;
					this.SendPropertyChanged("MD4Sequence");
					this.OnMD4SequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=59)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileKey", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=60)]
		public string FileKey
		{
			get
			{
				return this._FileKey;
			}
			set
			{
				if ((this._FileKey != value))
				{
					this.OnFileKeyChanging(value);
					this.SendPropertyChanging();
					this._FileKey = value;
					this.SendPropertyChanged("FileKey");
					this.OnFileKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeByDefault", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=61)]
		public System.Nullable<bool> IncludeByDefault
		{
			get
			{
				return this._IncludeByDefault;
			}
			set
			{
				if ((this._IncludeByDefault != value))
				{
					this.OnIncludeByDefaultChanging(value);
					this.SendPropertyChanging();
					this._IncludeByDefault = value;
					this.SendPropertyChanged("IncludeByDefault");
					this.OnIncludeByDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QCRequirement", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=62)]
		public System.Nullable<bool> QCRequirement
		{
			get
			{
				return this._QCRequirement;
			}
			set
			{
				if ((this._QCRequirement != value))
				{
					this.OnQCRequirementChanging(value);
					this.SendPropertyChanging();
					this._QCRequirement = value;
					this.SendPropertyChanged("QCRequirement");
					this.OnQCRequirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustMixPrice", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=63)]
		public System.Nullable<double> AdjustMixPrice
		{
			get
			{
				return this._AdjustMixPrice;
			}
			set
			{
				if ((this._AdjustMixPrice != value))
				{
					this.OnAdjustMixPriceChanging(value);
					this.SendPropertyChanging();
					this._AdjustMixPrice = value;
					this.SendPropertyChanged("AdjustMixPrice");
					this.OnAdjustMixPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LettingDate", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=64)]
		public System.Nullable<bool> LettingDate
		{
			get
			{
				return this._LettingDate;
			}
			set
			{
				if ((this._LettingDate != value))
				{
					this.OnLettingDateChanging(value);
					this.SendPropertyChanging();
					this._LettingDate = value;
					this.SendPropertyChanged("LettingDate");
					this.OnLettingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumberOnPDF", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=65)]
		public System.Nullable<bool> CustomerNumberOnPDF
		{
			get
			{
				return this._CustomerNumberOnPDF;
			}
			set
			{
				if ((this._CustomerNumberOnPDF != value))
				{
					this.OnCustomerNumberOnPDFChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumberOnPDF = value;
					this.SendPropertyChanged("CustomerNumberOnPDF");
					this.OnCustomerNumberOnPDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricingAvailabilityDisclaimer", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=66)]
		public string PricingAvailabilityDisclaimer
		{
			get
			{
				return this._PricingAvailabilityDisclaimer;
			}
			set
			{
				if ((this._PricingAvailabilityDisclaimer != value))
				{
					this.OnPricingAvailabilityDisclaimerChanging(value);
					this.SendPropertyChanging();
					this._PricingAvailabilityDisclaimer = value;
					this.SendPropertyChanged("PricingAvailabilityDisclaimer");
					this.OnPricingAvailabilityDisclaimerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDateLabel", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=67)]
		public string ExpirationDateLabel
		{
			get
			{
				return this._ExpirationDateLabel;
			}
			set
			{
				if ((this._ExpirationDateLabel != value))
				{
					this.OnExpirationDateLabelChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDateLabel = value;
					this.SendPropertyChanged("ExpirationDateLabel");
					this.OnExpirationDateLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_AddonPriceProjection", Storage="_AddonPriceProjections", ThisKey="DistrictId", OtherKey="DistrictId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=68, EmitDefaultValue=false)]
		public EntitySet<AddonPriceProjection> AddonPriceProjections
		{
			get
			{
				if ((this.serializing 
							&& (this._AddonPriceProjections.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AddonPriceProjections;
			}
			set
			{
				this._AddonPriceProjections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_Competitor", Storage="_Competitors", ThisKey="DistrictId", OtherKey="DistrictId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=69, EmitDefaultValue=false)]
		public EntitySet<Competitor> Competitors
		{
			get
			{
				if ((this.serializing 
							&& (this._Competitors.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Competitors;
			}
			set
			{
				this._Competitors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_CompetitorPlant", Storage="_CompetitorPlants", ThisKey="DistrictId", OtherKey="DistrictId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=70, EmitDefaultValue=false)]
		public EntitySet<CompetitorPlant> CompetitorPlants
		{
			get
			{
				if ((this.serializing 
							&& (this._CompetitorPlants.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CompetitorPlants;
			}
			set
			{
				this._CompetitorPlants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_DistrictAddonDefault", Storage="_DistrictAddonDefaults", ThisKey="DistrictId", OtherKey="DistrictId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=71, EmitDefaultValue=false)]
		public EntitySet<DistrictAddonDefault> DistrictAddonDefaults
		{
			get
			{
				if ((this.serializing 
							&& (this._DistrictAddonDefaults.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DistrictAddonDefaults;
			}
			set
			{
				this._DistrictAddonDefaults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_DistrictCompetitor", Storage="_DistrictCompetitors", ThisKey="DistrictId", OtherKey="DistrictId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=72, EmitDefaultValue=false)]
		public EntitySet<DistrictCompetitor> DistrictCompetitors
		{
			get
			{
				if ((this.serializing 
							&& (this._DistrictCompetitors.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DistrictCompetitors;
			}
			set
			{
				this._DistrictCompetitors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_DistrictCustomer", Storage="_DistrictCustomers", ThisKey="DistrictId", OtherKey="DistrictId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=73, EmitDefaultValue=false)]
		public EntitySet<DistrictCustomer> DistrictCustomers
		{
			get
			{
				if ((this.serializing 
							&& (this._DistrictCustomers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DistrictCustomers;
			}
			set
			{
				this._DistrictCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_DistrictMarketSegment", Storage="_DistrictMarketSegments", ThisKey="DistrictId", OtherKey="DistrictId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=74, EmitDefaultValue=false)]
		public EntitySet<DistrictMarketSegment> DistrictMarketSegments
		{
			get
			{
				if ((this.serializing 
							&& (this._DistrictMarketSegments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DistrictMarketSegments;
			}
			set
			{
				this._DistrictMarketSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_DistrictSalesStaff", Storage="_DistrictSalesStaffs", ThisKey="DistrictId", OtherKey="DistrictId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=75, EmitDefaultValue=false)]
		public EntitySet<DistrictSalesStaff> DistrictSalesStaffs
		{
			get
			{
				if ((this.serializing 
							&& (this._DistrictSalesStaffs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DistrictSalesStaffs;
			}
			set
			{
				this._DistrictSalesStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_DistrictUser", Storage="_DistrictUsers", ThisKey="DistrictId", OtherKey="DistrictId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=76, EmitDefaultValue=false)]
		public EntitySet<DistrictUser> DistrictUsers
		{
			get
			{
				if ((this.serializing 
							&& (this._DistrictUsers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DistrictUsers;
			}
			set
			{
				this._DistrictUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_Plant", Storage="_Plants", ThisKey="DistrictId", OtherKey="DistrictId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=77, EmitDefaultValue=false)]
		public EntitySet<Plant> Plants
		{
			get
			{
				if ((this.serializing 
							&& (this._Plants.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Plants;
			}
			set
			{
				this._Plants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_District", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Districts.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Districts.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_District", Storage="_Region", ThisKey="RegionId", OtherKey="RegionId", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.Districts.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.Districts.Add(this);
						this._RegionId = value.RegionId;
					}
					else
					{
						this._RegionId = default(int);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddonPriceProjections(AddonPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.District = this;
		}
		
		private void detach_AddonPriceProjections(AddonPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.District = null;
		}
		
		private void attach_Competitors(Competitor entity)
		{
			this.SendPropertyChanging();
			entity.District = this;
		}
		
		private void detach_Competitors(Competitor entity)
		{
			this.SendPropertyChanging();
			entity.District = null;
		}
		
		private void attach_CompetitorPlants(CompetitorPlant entity)
		{
			this.SendPropertyChanging();
			entity.District = this;
		}
		
		private void detach_CompetitorPlants(CompetitorPlant entity)
		{
			this.SendPropertyChanging();
			entity.District = null;
		}
		
		private void attach_DistrictAddonDefaults(DistrictAddonDefault entity)
		{
			this.SendPropertyChanging();
			entity.District = this;
		}
		
		private void detach_DistrictAddonDefaults(DistrictAddonDefault entity)
		{
			this.SendPropertyChanging();
			entity.District = null;
		}
		
		private void attach_DistrictCompetitors(DistrictCompetitor entity)
		{
			this.SendPropertyChanging();
			entity.District = this;
		}
		
		private void detach_DistrictCompetitors(DistrictCompetitor entity)
		{
			this.SendPropertyChanging();
			entity.District = null;
		}
		
		private void attach_DistrictCustomers(DistrictCustomer entity)
		{
			this.SendPropertyChanging();
			entity.District = this;
		}
		
		private void detach_DistrictCustomers(DistrictCustomer entity)
		{
			this.SendPropertyChanging();
			entity.District = null;
		}
		
		private void attach_DistrictMarketSegments(DistrictMarketSegment entity)
		{
			this.SendPropertyChanging();
			entity.District = this;
		}
		
		private void detach_DistrictMarketSegments(DistrictMarketSegment entity)
		{
			this.SendPropertyChanging();
			entity.District = null;
		}
		
		private void attach_DistrictSalesStaffs(DistrictSalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.District = this;
		}
		
		private void detach_DistrictSalesStaffs(DistrictSalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.District = null;
		}
		
		private void attach_DistrictUsers(DistrictUser entity)
		{
			this.SendPropertyChanging();
			entity.District = this;
		}
		
		private void detach_DistrictUsers(DistrictUser entity)
		{
			this.SendPropertyChanging();
			entity.District = null;
		}
		
		private void attach_Plants(Plant entity)
		{
			this.SendPropertyChanging();
			entity.District = this;
		}
		
		private void detach_Plants(Plant entity)
		{
			this.SendPropertyChanging();
			entity.District = null;
		}
		
		private void Initialize()
		{
			this._AddonPriceProjections = new EntitySet<AddonPriceProjection>(new Action<AddonPriceProjection>(this.attach_AddonPriceProjections), new Action<AddonPriceProjection>(this.detach_AddonPriceProjections));
			this._Competitors = new EntitySet<Competitor>(new Action<Competitor>(this.attach_Competitors), new Action<Competitor>(this.detach_Competitors));
			this._CompetitorPlants = new EntitySet<CompetitorPlant>(new Action<CompetitorPlant>(this.attach_CompetitorPlants), new Action<CompetitorPlant>(this.detach_CompetitorPlants));
			this._DistrictAddonDefaults = new EntitySet<DistrictAddonDefault>(new Action<DistrictAddonDefault>(this.attach_DistrictAddonDefaults), new Action<DistrictAddonDefault>(this.detach_DistrictAddonDefaults));
			this._DistrictCompetitors = new EntitySet<DistrictCompetitor>(new Action<DistrictCompetitor>(this.attach_DistrictCompetitors), new Action<DistrictCompetitor>(this.detach_DistrictCompetitors));
			this._DistrictCustomers = new EntitySet<DistrictCustomer>(new Action<DistrictCustomer>(this.attach_DistrictCustomers), new Action<DistrictCustomer>(this.detach_DistrictCustomers));
			this._DistrictMarketSegments = new EntitySet<DistrictMarketSegment>(new Action<DistrictMarketSegment>(this.attach_DistrictMarketSegments), new Action<DistrictMarketSegment>(this.detach_DistrictMarketSegments));
			this._DistrictSalesStaffs = new EntitySet<DistrictSalesStaff>(new Action<DistrictSalesStaff>(this.attach_DistrictSalesStaffs), new Action<DistrictSalesStaff>(this.detach_DistrictSalesStaffs));
			this._DistrictUsers = new EntitySet<DistrictUser>(new Action<DistrictUser>(this.attach_DistrictUsers), new Action<DistrictUser>(this.detach_DistrictUsers));
			this._Plants = new EntitySet<Plant>(new Action<Plant>(this.attach_Plants), new Action<Plant>(this.detach_Plants));
			this._Company = default(EntityRef<Company>);
			this._Region = default(EntityRef<Region>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictAddonDefaults")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DistrictAddonDefault : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _DistrictId;
		
		private System.Nullable<long> _AddonId;
		
		private System.Nullable<bool> _IsDefault;
		
		private System.Nullable<bool> _IsHidden;
		
		private System.Nullable<bool> _IsAggregateDefault;
		
		private System.Nullable<bool> _IsBlockDefault;
		
		private EntityRef<Addon> _Addon;
		
		private EntityRef<District> _District;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDistrictIdChanging(System.Nullable<int> value);
    partial void OnDistrictIdChanged();
    partial void OnAddonIdChanging(System.Nullable<long> value);
    partial void OnAddonIdChanged();
    partial void OnIsDefaultChanging(System.Nullable<bool> value);
    partial void OnIsDefaultChanged();
    partial void OnIsHiddenChanging(System.Nullable<bool> value);
    partial void OnIsHiddenChanged();
    partial void OnIsAggregateDefaultChanging(System.Nullable<bool> value);
    partial void OnIsAggregateDefaultChanged();
    partial void OnIsBlockDefaultChanging(System.Nullable<bool> value);
    partial void OnIsBlockDefaultChanged();
    #endregion
		
		public DistrictAddonDefault()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					if (this._District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<long> AddonId
		{
			get
			{
				return this._AddonId;
			}
			set
			{
				if ((this._AddonId != value))
				{
					if (this._Addon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddonIdChanging(value);
					this.SendPropertyChanging();
					this._AddonId = value;
					this.SendPropertyChanged("AddonId");
					this.OnAddonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this.OnIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._IsHidden = value;
					this.SendPropertyChanged("IsHidden");
					this.OnIsHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAggregateDefault", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsAggregateDefault
		{
			get
			{
				return this._IsAggregateDefault;
			}
			set
			{
				if ((this._IsAggregateDefault != value))
				{
					this.OnIsAggregateDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsAggregateDefault = value;
					this.SendPropertyChanged("IsAggregateDefault");
					this.OnIsAggregateDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlockDefault", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> IsBlockDefault
		{
			get
			{
				return this._IsBlockDefault;
			}
			set
			{
				if ((this._IsBlockDefault != value))
				{
					this.OnIsBlockDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsBlockDefault = value;
					this.SendPropertyChanged("IsBlockDefault");
					this.OnIsBlockDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_DistrictAddonDefault", Storage="_Addon", ThisKey="AddonId", OtherKey="Id", IsForeignKey=true)]
		public Addon Addon
		{
			get
			{
				return this._Addon.Entity;
			}
			set
			{
				Addon previousValue = this._Addon.Entity;
				if (((previousValue != value) 
							|| (this._Addon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Addon.Entity = null;
						previousValue.DistrictAddonDefaults.Remove(this);
					}
					this._Addon.Entity = value;
					if ((value != null))
					{
						value.DistrictAddonDefaults.Add(this);
						this._AddonId = value.Id;
					}
					else
					{
						this._AddonId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Addon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_DistrictAddonDefault", Storage="_District", ThisKey="DistrictId", OtherKey="DistrictId", IsForeignKey=true)]
		public District District
		{
			get
			{
				return this._District.Entity;
			}
			set
			{
				District previousValue = this._District.Entity;
				if (((previousValue != value) 
							|| (this._District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._District.Entity = null;
						previousValue.DistrictAddonDefaults.Remove(this);
					}
					this._District.Entity = value;
					if ((value != null))
					{
						value.DistrictAddonDefaults.Add(this);
						this._DistrictId = value.DistrictId;
					}
					else
					{
						this._DistrictId = default(Nullable<int>);
					}
					this.SendPropertyChanged("District");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Addon = default(EntityRef<Addon>);
			this._District = default(EntityRef<District>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictCompetitor")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DistrictCompetitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _DistrictId;
		
		private int _CompetitorId;
		
		private EntityRef<Competitor> _Competitor;
		
		private EntityRef<District> _District;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    partial void OnCompetitorIdChanging(int value);
    partial void OnCompetitorIdChanged();
    #endregion
		
		public DistrictCompetitor()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					if (this._District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitorId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CompetitorId
		{
			get
			{
				return this._CompetitorId;
			}
			set
			{
				if ((this._CompetitorId != value))
				{
					if (this._Competitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitorIdChanging(value);
					this.SendPropertyChanging();
					this._CompetitorId = value;
					this.SendPropertyChanged("CompetitorId");
					this.OnCompetitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Competitor_DistrictCompetitor", Storage="_Competitor", ThisKey="CompetitorId", OtherKey="CompetitorId", IsForeignKey=true)]
		public Competitor Competitor
		{
			get
			{
				return this._Competitor.Entity;
			}
			set
			{
				Competitor previousValue = this._Competitor.Entity;
				if (((previousValue != value) 
							|| (this._Competitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Competitor.Entity = null;
						previousValue.DistrictCompetitors.Remove(this);
					}
					this._Competitor.Entity = value;
					if ((value != null))
					{
						value.DistrictCompetitors.Add(this);
						this._CompetitorId = value.CompetitorId;
					}
					else
					{
						this._CompetitorId = default(int);
					}
					this.SendPropertyChanged("Competitor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_DistrictCompetitor", Storage="_District", ThisKey="DistrictId", OtherKey="DistrictId", IsForeignKey=true)]
		public District District
		{
			get
			{
				return this._District.Entity;
			}
			set
			{
				District previousValue = this._District.Entity;
				if (((previousValue != value) 
							|| (this._District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._District.Entity = null;
						previousValue.DistrictCompetitors.Remove(this);
					}
					this._District.Entity = value;
					if ((value != null))
					{
						value.DistrictCompetitors.Add(this);
						this._DistrictId = value.DistrictId;
					}
					else
					{
						this._DistrictId = default(int);
					}
					this.SendPropertyChanged("District");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Competitor = default(EntityRef<Competitor>);
			this._District = default(EntityRef<District>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictCustomer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DistrictCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _DistrictId;
		
		private int _CustomerId;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<District> _District;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    #endregion
		
		public DistrictCustomer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					if (this._District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_DistrictCustomer", Storage="_Customer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.DistrictCustomers.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.DistrictCustomers.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_DistrictCustomer", Storage="_District", ThisKey="DistrictId", OtherKey="DistrictId", IsForeignKey=true)]
		public District District
		{
			get
			{
				return this._District.Entity;
			}
			set
			{
				District previousValue = this._District.Entity;
				if (((previousValue != value) 
							|| (this._District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._District.Entity = null;
						previousValue.DistrictCustomers.Remove(this);
					}
					this._District.Entity = value;
					if ((value != null))
					{
						value.DistrictCustomers.Add(this);
						this._DistrictId = value.DistrictId;
					}
					else
					{
						this._DistrictId = default(int);
					}
					this.SendPropertyChanged("District");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Customer = default(EntityRef<Customer>);
			this._District = default(EntityRef<District>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictMarketSegment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DistrictMarketSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _DistrictId;
		
		private int _MarketSegmentId;
		
		private System.Nullable<decimal> _Spread;
		
		private System.Nullable<decimal> _ContMarg;
		
		private System.Nullable<decimal> _Profit;
		
		private System.Nullable<double> _CydHr;
		
		private System.Nullable<double> _WinRate;
		
		private EntityRef<District> _District;
		
		private EntityRef<MarketSegment> _MarketSegment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    partial void OnMarketSegmentIdChanging(int value);
    partial void OnMarketSegmentIdChanged();
    partial void OnSpreadChanging(System.Nullable<decimal> value);
    partial void OnSpreadChanged();
    partial void OnContMargChanging(System.Nullable<decimal> value);
    partial void OnContMargChanged();
    partial void OnProfitChanging(System.Nullable<decimal> value);
    partial void OnProfitChanged();
    partial void OnCydHrChanging(System.Nullable<double> value);
    partial void OnCydHrChanged();
    partial void OnWinRateChanging(System.Nullable<double> value);
    partial void OnWinRateChanged();
    #endregion
		
		public DistrictMarketSegment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					if (this._District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketSegmentId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int MarketSegmentId
		{
			get
			{
				return this._MarketSegmentId;
			}
			set
			{
				if ((this._MarketSegmentId != value))
				{
					if (this._MarketSegment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarketSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._MarketSegmentId = value;
					this.SendPropertyChanged("MarketSegmentId");
					this.OnMarketSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spread", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> Spread
		{
			get
			{
				return this._Spread;
			}
			set
			{
				if ((this._Spread != value))
				{
					this.OnSpreadChanging(value);
					this.SendPropertyChanging();
					this._Spread = value;
					this.SendPropertyChanged("Spread");
					this.OnSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContMarg", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> ContMarg
		{
			get
			{
				return this._ContMarg;
			}
			set
			{
				if ((this._ContMarg != value))
				{
					this.OnContMargChanging(value);
					this.SendPropertyChanging();
					this._ContMarg = value;
					this.SendPropertyChanged("ContMarg");
					this.OnContMargChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CydHr", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<double> CydHr
		{
			get
			{
				return this._CydHr;
			}
			set
			{
				if ((this._CydHr != value))
				{
					this.OnCydHrChanging(value);
					this.SendPropertyChanging();
					this._CydHr = value;
					this.SendPropertyChanged("CydHr");
					this.OnCydHrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinRate", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<double> WinRate
		{
			get
			{
				return this._WinRate;
			}
			set
			{
				if ((this._WinRate != value))
				{
					this.OnWinRateChanging(value);
					this.SendPropertyChanging();
					this._WinRate = value;
					this.SendPropertyChanged("WinRate");
					this.OnWinRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_DistrictMarketSegment", Storage="_District", ThisKey="DistrictId", OtherKey="DistrictId", IsForeignKey=true)]
		public District District
		{
			get
			{
				return this._District.Entity;
			}
			set
			{
				District previousValue = this._District.Entity;
				if (((previousValue != value) 
							|| (this._District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._District.Entity = null;
						previousValue.DistrictMarketSegments.Remove(this);
					}
					this._District.Entity = value;
					if ((value != null))
					{
						value.DistrictMarketSegments.Add(this);
						this._DistrictId = value.DistrictId;
					}
					else
					{
						this._DistrictId = default(int);
					}
					this.SendPropertyChanged("District");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarketSegment_DistrictMarketSegment", Storage="_MarketSegment", ThisKey="MarketSegmentId", OtherKey="MarketSegmentId", IsForeignKey=true)]
		public MarketSegment MarketSegment
		{
			get
			{
				return this._MarketSegment.Entity;
			}
			set
			{
				MarketSegment previousValue = this._MarketSegment.Entity;
				if (((previousValue != value) 
							|| (this._MarketSegment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MarketSegment.Entity = null;
						previousValue.DistrictMarketSegments.Remove(this);
					}
					this._MarketSegment.Entity = value;
					if ((value != null))
					{
						value.DistrictMarketSegments.Add(this);
						this._MarketSegmentId = value.MarketSegmentId;
					}
					else
					{
						this._MarketSegmentId = default(int);
					}
					this.SendPropertyChanged("MarketSegment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._District = default(EntityRef<District>);
			this._MarketSegment = default(EntityRef<MarketSegment>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictSalesStaff")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DistrictSalesStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictSalesStaffId;
		
		private int _DistrictId;
		
		private int _SalesStaffId;
		
		private EntityRef<District> _District;
		
		private EntityRef<SalesStaff> _SalesStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictSalesStaffIdChanging(int value);
    partial void OnDistrictSalesStaffIdChanged();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    partial void OnSalesStaffIdChanging(int value);
    partial void OnSalesStaffIdChanged();
    #endregion
		
		public DistrictSalesStaff()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictSalesStaffId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DistrictSalesStaffId
		{
			get
			{
				return this._DistrictSalesStaffId;
			}
			set
			{
				if ((this._DistrictSalesStaffId != value))
				{
					this.OnDistrictSalesStaffIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictSalesStaffId = value;
					this.SendPropertyChanged("DistrictSalesStaffId");
					this.OnDistrictSalesStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					if (this._District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesStaffId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SalesStaffId
		{
			get
			{
				return this._SalesStaffId;
			}
			set
			{
				if ((this._SalesStaffId != value))
				{
					if (this._SalesStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesStaffIdChanging(value);
					this.SendPropertyChanging();
					this._SalesStaffId = value;
					this.SendPropertyChanged("SalesStaffId");
					this.OnSalesStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_DistrictSalesStaff", Storage="_District", ThisKey="DistrictId", OtherKey="DistrictId", IsForeignKey=true)]
		public District District
		{
			get
			{
				return this._District.Entity;
			}
			set
			{
				District previousValue = this._District.Entity;
				if (((previousValue != value) 
							|| (this._District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._District.Entity = null;
						previousValue.DistrictSalesStaffs.Remove(this);
					}
					this._District.Entity = value;
					if ((value != null))
					{
						value.DistrictSalesStaffs.Add(this);
						this._DistrictId = value.DistrictId;
					}
					else
					{
						this._DistrictId = default(int);
					}
					this.SendPropertyChanged("District");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesStaff_DistrictSalesStaff", Storage="_SalesStaff", ThisKey="SalesStaffId", OtherKey="SalesStaffId", IsForeignKey=true)]
		public SalesStaff SalesStaff
		{
			get
			{
				return this._SalesStaff.Entity;
			}
			set
			{
				SalesStaff previousValue = this._SalesStaff.Entity;
				if (((previousValue != value) 
							|| (this._SalesStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesStaff.Entity = null;
						previousValue.DistrictSalesStaffs.Remove(this);
					}
					this._SalesStaff.Entity = value;
					if ((value != null))
					{
						value.DistrictSalesStaffs.Add(this);
						this._SalesStaffId = value.SalesStaffId;
					}
					else
					{
						this._SalesStaffId = default(int);
					}
					this.SendPropertyChanged("SalesStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._District = default(EntityRef<District>);
			this._SalesStaff = default(EntityRef<SalesStaff>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictUser")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DistrictUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictUserId;
		
		private System.Guid _UserId;
		
		private int _DistrictId;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntityRef<District> _District;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictUserIdChanging(int value);
    partial void OnDistrictUserIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    #endregion
		
		public DistrictUser()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictUserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DistrictUserId
		{
			get
			{
				return this._DistrictUserId;
			}
			set
			{
				if ((this._DistrictUserId != value))
				{
					this.OnDistrictUserIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictUserId = value;
					this.SendPropertyChanged("DistrictUserId");
					this.OnDistrictUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_Membership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					if (this._District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_DistrictUser", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.DistrictUsers.Remove(this);
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.DistrictUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_DistrictUser", Storage="_District", ThisKey="DistrictId", OtherKey="DistrictId", IsForeignKey=true)]
		public District District
		{
			get
			{
				return this._District.Entity;
			}
			set
			{
				District previousValue = this._District.Entity;
				if (((previousValue != value) 
							|| (this._District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._District.Entity = null;
						previousValue.DistrictUsers.Remove(this);
					}
					this._District.Entity = value;
					if ((value != null))
					{
						value.DistrictUsers.Add(this);
						this._DistrictId = value.DistrictId;
					}
					else
					{
						this._DistrictId = default(int);
					}
					this.SendPropertyChanged("District");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._District = default(EntityRef<District>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrillinReportConfig")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DrillinReportConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ReportId;
		
		private string _DimensionName;
		
		private string _DimensionDisplayTitle;
		
		private EntityRef<ReportSetting> _ReportSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(long value);
    partial void OnReportIdChanged();
    partial void OnDimensionNameChanging(string value);
    partial void OnDimensionNameChanged();
    partial void OnDimensionDisplayTitleChanging(string value);
    partial void OnDimensionDisplayTitleChanged();
    #endregion
		
		public DrillinReportConfig()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					if (this._ReportSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimensionName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string DimensionName
		{
			get
			{
				return this._DimensionName;
			}
			set
			{
				if ((this._DimensionName != value))
				{
					this.OnDimensionNameChanging(value);
					this.SendPropertyChanging();
					this._DimensionName = value;
					this.SendPropertyChanged("DimensionName");
					this.OnDimensionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimensionDisplayTitle", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string DimensionDisplayTitle
		{
			get
			{
				return this._DimensionDisplayTitle;
			}
			set
			{
				if ((this._DimensionDisplayTitle != value))
				{
					this.OnDimensionDisplayTitleChanging(value);
					this.SendPropertyChanging();
					this._DimensionDisplayTitle = value;
					this.SendPropertyChanged("DimensionDisplayTitle");
					this.OnDimensionDisplayTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportSetting_DrillinReportConfig", Storage="_ReportSetting", ThisKey="ReportId", OtherKey="Id", IsForeignKey=true)]
		public ReportSetting ReportSetting
		{
			get
			{
				return this._ReportSetting.Entity;
			}
			set
			{
				ReportSetting previousValue = this._ReportSetting.Entity;
				if (((previousValue != value) 
							|| (this._ReportSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportSetting.Entity = null;
						previousValue.DrillinReportConfigs.Remove(this);
					}
					this._ReportSetting.Entity = value;
					if ((value != null))
					{
						value.DrillinReportConfigs.Add(this);
						this._ReportId = value.Id;
					}
					else
					{
						this._ReportId = default(long);
					}
					this.SendPropertyChanged("ReportSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ReportSetting = default(EntityRef<ReportSetting>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DriverDetails")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DriverDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _DriverName;
		
		private string _DriverNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDriverNameChanging(string value);
    partial void OnDriverNameChanged();
    partial void OnDriverNumberChanging(string value);
    partial void OnDriverNumberChanged();
    #endregion
		
		public DriverDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverName", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string DriverName
		{
			get
			{
				return this._DriverName;
			}
			set
			{
				if ((this._DriverName != value))
				{
					this.OnDriverNameChanging(value);
					this.SendPropertyChanging();
					this._DriverName = value;
					this.SendPropertyChanged("DriverName");
					this.OnDriverNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverNumber", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string DriverNumber
		{
			get
			{
				return this._DriverNumber;
			}
			set
			{
				if ((this._DriverNumber != value))
				{
					this.OnDriverNumberChanging(value);
					this.SendPropertyChanging();
					this._DriverNumber = value;
					this.SendPropertyChanged("DriverNumber");
					this.OnDriverNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DriverLoginTimes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DriverLoginTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _DriverNumber;
		
		private System.DateTime _LoginDate;
		
		private System.Nullable<System.DateTime> _PunchInTime;
		
		private System.Nullable<System.DateTime> _PunchOutTime;
		
		private System.Nullable<double> _TotalTime;
		
		private bool _IsMongoUpdated;
		
		private bool _HasInvalidData;
		
		private bool _IsScrubbed;
		
		private bool _IsProcessed;
		
		private System.Nullable<double> _StartupTime;
		
		private System.Nullable<double> _ShutdownTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDriverNumberChanging(string value);
    partial void OnDriverNumberChanged();
    partial void OnLoginDateChanging(System.DateTime value);
    partial void OnLoginDateChanged();
    partial void OnPunchInTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPunchInTimeChanged();
    partial void OnPunchOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPunchOutTimeChanged();
    partial void OnTotalTimeChanging(System.Nullable<double> value);
    partial void OnTotalTimeChanged();
    partial void OnIsMongoUpdatedChanging(bool value);
    partial void OnIsMongoUpdatedChanged();
    partial void OnHasInvalidDataChanging(bool value);
    partial void OnHasInvalidDataChanged();
    partial void OnIsScrubbedChanging(bool value);
    partial void OnIsScrubbedChanged();
    partial void OnIsProcessedChanging(bool value);
    partial void OnIsProcessedChanged();
    partial void OnStartupTimeChanging(System.Nullable<double> value);
    partial void OnStartupTimeChanged();
    partial void OnShutdownTimeChanging(System.Nullable<double> value);
    partial void OnShutdownTimeChanged();
    #endregion
		
		public DriverLoginTime()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string DriverNumber
		{
			get
			{
				return this._DriverNumber;
			}
			set
			{
				if ((this._DriverNumber != value))
				{
					this.OnDriverNumberChanging(value);
					this.SendPropertyChanging();
					this._DriverNumber = value;
					this.SendPropertyChanged("DriverNumber");
					this.OnDriverNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="Date NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunchInTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> PunchInTime
		{
			get
			{
				return this._PunchInTime;
			}
			set
			{
				if ((this._PunchInTime != value))
				{
					this.OnPunchInTimeChanging(value);
					this.SendPropertyChanging();
					this._PunchInTime = value;
					this.SendPropertyChanged("PunchInTime");
					this.OnPunchInTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunchOutTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> PunchOutTime
		{
			get
			{
				return this._PunchOutTime;
			}
			set
			{
				if ((this._PunchOutTime != value))
				{
					this.OnPunchOutTimeChanging(value);
					this.SendPropertyChanging();
					this._PunchOutTime = value;
					this.SendPropertyChanged("PunchOutTime");
					this.OnPunchOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<double> TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this.OnTotalTimeChanging(value);
					this.SendPropertyChanging();
					this._TotalTime = value;
					this.SendPropertyChanged("TotalTime");
					this.OnTotalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMongoUpdated", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsMongoUpdated
		{
			get
			{
				return this._IsMongoUpdated;
			}
			set
			{
				if ((this._IsMongoUpdated != value))
				{
					this.OnIsMongoUpdatedChanging(value);
					this.SendPropertyChanging();
					this._IsMongoUpdated = value;
					this.SendPropertyChanged("IsMongoUpdated");
					this.OnIsMongoUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasInvalidData", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool HasInvalidData
		{
			get
			{
				return this._HasInvalidData;
			}
			set
			{
				if ((this._HasInvalidData != value))
				{
					this.OnHasInvalidDataChanging(value);
					this.SendPropertyChanging();
					this._HasInvalidData = value;
					this.SendPropertyChanged("HasInvalidData");
					this.OnHasInvalidDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScrubbed", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsScrubbed
		{
			get
			{
				return this._IsScrubbed;
			}
			set
			{
				if ((this._IsScrubbed != value))
				{
					this.OnIsScrubbedChanging(value);
					this.SendPropertyChanging();
					this._IsScrubbed = value;
					this.SendPropertyChanged("IsScrubbed");
					this.OnIsScrubbedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcessed", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool IsProcessed
		{
			get
			{
				return this._IsProcessed;
			}
			set
			{
				if ((this._IsProcessed != value))
				{
					this.OnIsProcessedChanging(value);
					this.SendPropertyChanging();
					this._IsProcessed = value;
					this.SendPropertyChanged("IsProcessed");
					this.OnIsProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartupTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<double> StartupTime
		{
			get
			{
				return this._StartupTime;
			}
			set
			{
				if ((this._StartupTime != value))
				{
					this.OnStartupTimeChanging(value);
					this.SendPropertyChanging();
					this._StartupTime = value;
					this.SendPropertyChanged("StartupTime");
					this.OnStartupTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShutdownTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<double> ShutdownTime
		{
			get
			{
				return this._ShutdownTime;
			}
			set
			{
				if ((this._ShutdownTime != value))
				{
					this.OnShutdownTimeChanging(value);
					this.SendPropertyChanging();
					this._ShutdownTime = value;
					this.SendPropertyChanged("ShutdownTime");
					this.OnShutdownTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FSKPrice")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FSKPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _FSKCode;
		
		private string _City;
		
		private decimal _BasePrice;
		
		private decimal _AddPrice;
		
		private decimal _DeductPrice;
		
		private bool _Active;
		
		private double _SackCount;
		
		private EntitySet<Plant> _Plants;
		
		private EntitySet<Quotation> _Quotations;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFSKCodeChanging(string value);
    partial void OnFSKCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnBasePriceChanging(decimal value);
    partial void OnBasePriceChanged();
    partial void OnAddPriceChanging(decimal value);
    partial void OnAddPriceChanged();
    partial void OnDeductPriceChanging(decimal value);
    partial void OnDeductPriceChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnSackCountChanging(double value);
    partial void OnSackCountChanged();
    #endregion
		
		public FSKPrice()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FSKCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string FSKCode
		{
			get
			{
				return this._FSKCode;
			}
			set
			{
				if ((this._FSKCode != value))
				{
					this.OnFSKCodeChanging(value);
					this.SendPropertyChanging();
					this._FSKCode = value;
					this.SendPropertyChanged("FSKCode");
					this.OnFSKCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasePrice", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public decimal BasePrice
		{
			get
			{
				return this._BasePrice;
			}
			set
			{
				if ((this._BasePrice != value))
				{
					this.OnBasePriceChanging(value);
					this.SendPropertyChanging();
					this._BasePrice = value;
					this.SendPropertyChanged("BasePrice");
					this.OnBasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddPrice", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public decimal AddPrice
		{
			get
			{
				return this._AddPrice;
			}
			set
			{
				if ((this._AddPrice != value))
				{
					this.OnAddPriceChanging(value);
					this.SendPropertyChanging();
					this._AddPrice = value;
					this.SendPropertyChanged("AddPrice");
					this.OnAddPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeductPrice", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public decimal DeductPrice
		{
			get
			{
				return this._DeductPrice;
			}
			set
			{
				if ((this._DeductPrice != value))
				{
					this.OnDeductPriceChanging(value);
					this.SendPropertyChanging();
					this._DeductPrice = value;
					this.SendPropertyChanged("DeductPrice");
					this.OnDeductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SackCount", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public double SackCount
		{
			get
			{
				return this._SackCount;
			}
			set
			{
				if ((this._SackCount != value))
				{
					this.OnSackCountChanging(value);
					this.SendPropertyChanging();
					this._SackCount = value;
					this.SendPropertyChanged("SackCount");
					this.OnSackCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FSKPrice_Plant", Storage="_Plants", ThisKey="Id", OtherKey="FSKId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Plant> Plants
		{
			get
			{
				if ((this.serializing 
							&& (this._Plants.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Plants;
			}
			set
			{
				this._Plants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FSKPrice_Quotation", Storage="_Quotations", ThisKey="Id", OtherKey="FskPriceId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Quotation> Quotations
		{
			get
			{
				if ((this.serializing 
							&& (this._Quotations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Quotations;
			}
			set
			{
				this._Quotations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Plants(Plant entity)
		{
			this.SendPropertyChanging();
			entity.FSKPrice = this;
		}
		
		private void detach_Plants(Plant entity)
		{
			this.SendPropertyChanging();
			entity.FSKPrice = null;
		}
		
		private void attach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.FSKPrice = this;
		}
		
		private void detach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.FSKPrice = null;
		}
		
		private void Initialize()
		{
			this._Plants = new EntitySet<Plant>(new Action<Plant>(this.attach_Plants), new Action<Plant>(this.detach_Plants));
			this._Quotations = new EntitySet<Quotation>(new Action<Quotation>(this.attach_Quotations), new Action<Quotation>(this.detach_Quotations));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GlobalSettings")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GlobalSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _MD1;
		
		private string _MD2;
		
		private string _MD3;
		
		private string _MD4;
		
		private string _JI1;
		
		private string _JI2;
		
		private int _NonFutureCutoff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnMD1Changing(string value);
    partial void OnMD1Changed();
    partial void OnMD2Changing(string value);
    partial void OnMD2Changed();
    partial void OnMD3Changing(string value);
    partial void OnMD3Changed();
    partial void OnMD4Changing(string value);
    partial void OnMD4Changed();
    partial void OnJI1Changing(string value);
    partial void OnJI1Changed();
    partial void OnJI2Changing(string value);
    partial void OnJI2Changed();
    partial void OnNonFutureCutoffChanging(int value);
    partial void OnNonFutureCutoffChanged();
    #endregion
		
		public GlobalSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD1", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MD1
		{
			get
			{
				return this._MD1;
			}
			set
			{
				if ((this._MD1 != value))
				{
					this.OnMD1Changing(value);
					this.SendPropertyChanging();
					this._MD1 = value;
					this.SendPropertyChanged("MD1");
					this.OnMD1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD2", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string MD2
		{
			get
			{
				return this._MD2;
			}
			set
			{
				if ((this._MD2 != value))
				{
					this.OnMD2Changing(value);
					this.SendPropertyChanging();
					this._MD2 = value;
					this.SendPropertyChanged("MD2");
					this.OnMD2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD3", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string MD3
		{
			get
			{
				return this._MD3;
			}
			set
			{
				if ((this._MD3 != value))
				{
					this.OnMD3Changing(value);
					this.SendPropertyChanging();
					this._MD3 = value;
					this.SendPropertyChanged("MD3");
					this.OnMD3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD4", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string MD4
		{
			get
			{
				return this._MD4;
			}
			set
			{
				if ((this._MD4 != value))
				{
					this.OnMD4Changing(value);
					this.SendPropertyChanging();
					this._MD4 = value;
					this.SendPropertyChanged("MD4");
					this.OnMD4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JI1", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string JI1
		{
			get
			{
				return this._JI1;
			}
			set
			{
				if ((this._JI1 != value))
				{
					this.OnJI1Changing(value);
					this.SendPropertyChanging();
					this._JI1 = value;
					this.SendPropertyChanged("JI1");
					this.OnJI1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JI2", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string JI2
		{
			get
			{
				return this._JI2;
			}
			set
			{
				if ((this._JI2 != value))
				{
					this.OnJI2Changing(value);
					this.SendPropertyChanging();
					this._JI2 = value;
					this.SendPropertyChanged("JI2");
					this.OnJI2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonFutureCutoff", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int NonFutureCutoff
		{
			get
			{
				return this._NonFutureCutoff;
			}
			set
			{
				if ((this._NonFutureCutoff != value))
				{
					this.OnNonFutureCutoffChanging(value);
					this.SendPropertyChanging();
					this._NonFutureCutoff = value;
					this.SendPropertyChanged("NonFutureCutoff");
					this.OnNonFutureCutoffChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MarketSegment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MarketSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MarketSegmentId;
		
		private int _CompanyId;
		
		private string _Name;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<decimal> _Spread;
		
		private System.Nullable<decimal> _ContMarg;
		
		private System.Nullable<decimal> _Profit;
		
		private System.Nullable<decimal> _CYDsHr;
		
		private string _DispatchId;
		
		private System.Nullable<bool> _Synced;
		
		private EntitySet<DistrictMarketSegment> _DistrictMarketSegments;
		
		private EntitySet<PlantBudgetMarketSegment> _PlantBudgetMarketSegments;
		
		private EntitySet<Project> _Projects;
		
		private EntityRef<Company> _Company;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarketSegmentIdChanging(int value);
    partial void OnMarketSegmentIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnSpreadChanging(System.Nullable<decimal> value);
    partial void OnSpreadChanged();
    partial void OnContMargChanging(System.Nullable<decimal> value);
    partial void OnContMargChanged();
    partial void OnProfitChanging(System.Nullable<decimal> value);
    partial void OnProfitChanged();
    partial void OnCYDsHrChanging(System.Nullable<decimal> value);
    partial void OnCYDsHrChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnSyncedChanging(System.Nullable<bool> value);
    partial void OnSyncedChanged();
    #endregion
		
		public MarketSegment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketSegmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MarketSegmentId
		{
			get
			{
				return this._MarketSegmentId;
			}
			set
			{
				if ((this._MarketSegmentId != value))
				{
					this.OnMarketSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._MarketSegmentId = value;
					this.SendPropertyChanged("MarketSegmentId");
					this.OnMarketSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spread", DbType="Decimal(12,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> Spread
		{
			get
			{
				return this._Spread;
			}
			set
			{
				if ((this._Spread != value))
				{
					this.OnSpreadChanging(value);
					this.SendPropertyChanging();
					this._Spread = value;
					this.SendPropertyChanged("Spread");
					this.OnSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContMarg", DbType="Decimal(12,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> ContMarg
		{
			get
			{
				return this._ContMarg;
			}
			set
			{
				if ((this._ContMarg != value))
				{
					this.OnContMargChanging(value);
					this.SendPropertyChanging();
					this._ContMarg = value;
					this.SendPropertyChanged("ContMarg");
					this.OnContMargChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Decimal(12,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<decimal> Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CYDsHr", DbType="Decimal(12,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<decimal> CYDsHr
		{
			get
			{
				return this._CYDsHr;
			}
			set
			{
				if ((this._CYDsHr != value))
				{
					this.OnCYDsHrChanging(value);
					this.SendPropertyChanging();
					this._CYDsHr = value;
					this.SendPropertyChanged("CYDsHr");
					this.OnCYDsHrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synced", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> Synced
		{
			get
			{
				return this._Synced;
			}
			set
			{
				if ((this._Synced != value))
				{
					this.OnSyncedChanging(value);
					this.SendPropertyChanging();
					this._Synced = value;
					this.SendPropertyChanged("Synced");
					this.OnSyncedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarketSegment_DistrictMarketSegment", Storage="_DistrictMarketSegments", ThisKey="MarketSegmentId", OtherKey="MarketSegmentId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<DistrictMarketSegment> DistrictMarketSegments
		{
			get
			{
				if ((this.serializing 
							&& (this._DistrictMarketSegments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DistrictMarketSegments;
			}
			set
			{
				this._DistrictMarketSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarketSegment_PlantBudgetMarketSegment", Storage="_PlantBudgetMarketSegments", ThisKey="MarketSegmentId", OtherKey="MarketSegmentId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<PlantBudgetMarketSegment> PlantBudgetMarketSegments
		{
			get
			{
				if ((this.serializing 
							&& (this._PlantBudgetMarketSegments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlantBudgetMarketSegments;
			}
			set
			{
				this._PlantBudgetMarketSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarketSegment_Project", Storage="_Projects", ThisKey="MarketSegmentId", OtherKey="MarketSegmentId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<Project> Projects
		{
			get
			{
				if ((this.serializing 
							&& (this._Projects.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_MarketSegment", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.MarketSegments.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.MarketSegments.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DistrictMarketSegments(DistrictMarketSegment entity)
		{
			this.SendPropertyChanging();
			entity.MarketSegment = this;
		}
		
		private void detach_DistrictMarketSegments(DistrictMarketSegment entity)
		{
			this.SendPropertyChanging();
			entity.MarketSegment = null;
		}
		
		private void attach_PlantBudgetMarketSegments(PlantBudgetMarketSegment entity)
		{
			this.SendPropertyChanging();
			entity.MarketSegment = this;
		}
		
		private void detach_PlantBudgetMarketSegments(PlantBudgetMarketSegment entity)
		{
			this.SendPropertyChanging();
			entity.MarketSegment = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.MarketSegment = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.MarketSegment = null;
		}
		
		private void Initialize()
		{
			this._DistrictMarketSegments = new EntitySet<DistrictMarketSegment>(new Action<DistrictMarketSegment>(this.attach_DistrictMarketSegments), new Action<DistrictMarketSegment>(this.detach_DistrictMarketSegments));
			this._PlantBudgetMarketSegments = new EntitySet<PlantBudgetMarketSegment>(new Action<PlantBudgetMarketSegment>(this.attach_PlantBudgetMarketSegments), new Action<PlantBudgetMarketSegment>(this.detach_PlantBudgetMarketSegments));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MessageMentions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MessageMention : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _MessageId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnMessageIdChanging(long value);
    partial void OnMessageIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public MessageMention()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MetricDefinition")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MetricDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MetricName;
		
		private System.Nullable<bool> _MoreIsBetter;
		
		private string _DefaultAggregation;
		
		private System.Nullable<bool> _IsBudgetType;
		
		private System.Nullable<int> _BudgetOfId;
		
		private string _DataSource;
		
		private string _ColumnProperty;
		
		private string _ColumnProperty2;
		
		private System.Nullable<bool> _IsInternal;
		
		private string _DefaultDisplayFormat;
		
		private string _DisplayName;
		
		private string _Description;
		
		private System.Nullable<bool> _IsVarianceColumn;
		
		private EntitySet<MetricDefinition> _MetricDefinitions;
		
		private EntitySet<ReportRowConfig> _ReportRowConfigs;
		
		private EntitySet<TrendAnalysisReportConfig> _TrendAnalysisReportConfigs;
		
		private EntitySet<TrendAnalysisReportConfig> _TrendAnalysisReportConfigs1;
		
		private EntitySet<WidgetSetting> _WidgetSettings;
		
		private EntitySet<WidgetSetting> _WidgetSettings1;
		
		private EntityRef<MetricDefinition> _MetricDefinition1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMetricNameChanging(string value);
    partial void OnMetricNameChanged();
    partial void OnMoreIsBetterChanging(System.Nullable<bool> value);
    partial void OnMoreIsBetterChanged();
    partial void OnDefaultAggregationChanging(string value);
    partial void OnDefaultAggregationChanged();
    partial void OnIsBudgetTypeChanging(System.Nullable<bool> value);
    partial void OnIsBudgetTypeChanged();
    partial void OnBudgetOfIdChanging(System.Nullable<int> value);
    partial void OnBudgetOfIdChanged();
    partial void OnDataSourceChanging(string value);
    partial void OnDataSourceChanged();
    partial void OnColumnPropertyChanging(string value);
    partial void OnColumnPropertyChanged();
    partial void OnColumnProperty2Changing(string value);
    partial void OnColumnProperty2Changed();
    partial void OnIsInternalChanging(System.Nullable<bool> value);
    partial void OnIsInternalChanged();
    partial void OnDefaultDisplayFormatChanging(string value);
    partial void OnDefaultDisplayFormatChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsVarianceColumnChanging(System.Nullable<bool> value);
    partial void OnIsVarianceColumnChanged();
    #endregion
		
		public MetricDefinition()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetricName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MetricName
		{
			get
			{
				return this._MetricName;
			}
			set
			{
				if ((this._MetricName != value))
				{
					this.OnMetricNameChanging(value);
					this.SendPropertyChanging();
					this._MetricName = value;
					this.SendPropertyChanged("MetricName");
					this.OnMetricNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoreIsBetter", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> MoreIsBetter
		{
			get
			{
				return this._MoreIsBetter;
			}
			set
			{
				if ((this._MoreIsBetter != value))
				{
					this.OnMoreIsBetterChanging(value);
					this.SendPropertyChanging();
					this._MoreIsBetter = value;
					this.SendPropertyChanged("MoreIsBetter");
					this.OnMoreIsBetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultAggregation", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string DefaultAggregation
		{
			get
			{
				return this._DefaultAggregation;
			}
			set
			{
				if ((this._DefaultAggregation != value))
				{
					this.OnDefaultAggregationChanging(value);
					this.SendPropertyChanging();
					this._DefaultAggregation = value;
					this.SendPropertyChanged("DefaultAggregation");
					this.OnDefaultAggregationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBudgetType", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> IsBudgetType
		{
			get
			{
				return this._IsBudgetType;
			}
			set
			{
				if ((this._IsBudgetType != value))
				{
					this.OnIsBudgetTypeChanging(value);
					this.SendPropertyChanging();
					this._IsBudgetType = value;
					this.SendPropertyChanged("IsBudgetType");
					this.OnIsBudgetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetOfId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> BudgetOfId
		{
			get
			{
				return this._BudgetOfId;
			}
			set
			{
				if ((this._BudgetOfId != value))
				{
					if (this._MetricDefinition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetOfIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetOfId = value;
					this.SendPropertyChanged("BudgetOfId");
					this.OnBudgetOfIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSource", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string DataSource
		{
			get
			{
				return this._DataSource;
			}
			set
			{
				if ((this._DataSource != value))
				{
					this.OnDataSourceChanging(value);
					this.SendPropertyChanging();
					this._DataSource = value;
					this.SendPropertyChanged("DataSource");
					this.OnDataSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnProperty", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ColumnProperty
		{
			get
			{
				return this._ColumnProperty;
			}
			set
			{
				if ((this._ColumnProperty != value))
				{
					this.OnColumnPropertyChanging(value);
					this.SendPropertyChanging();
					this._ColumnProperty = value;
					this.SendPropertyChanged("ColumnProperty");
					this.OnColumnPropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnProperty2", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ColumnProperty2
		{
			get
			{
				return this._ColumnProperty2;
			}
			set
			{
				if ((this._ColumnProperty2 != value))
				{
					this.OnColumnProperty2Changing(value);
					this.SendPropertyChanging();
					this._ColumnProperty2 = value;
					this.SendPropertyChanged("ColumnProperty2");
					this.OnColumnProperty2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInternal", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> IsInternal
		{
			get
			{
				return this._IsInternal;
			}
			set
			{
				if ((this._IsInternal != value))
				{
					this.OnIsInternalChanging(value);
					this.SendPropertyChanging();
					this._IsInternal = value;
					this.SendPropertyChanged("IsInternal");
					this.OnIsInternalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultDisplayFormat", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string DefaultDisplayFormat
		{
			get
			{
				return this._DefaultDisplayFormat;
			}
			set
			{
				if ((this._DefaultDisplayFormat != value))
				{
					this.OnDefaultDisplayFormatChanging(value);
					this.SendPropertyChanging();
					this._DefaultDisplayFormat = value;
					this.SendPropertyChanged("DefaultDisplayFormat");
					this.OnDefaultDisplayFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVarianceColumn", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<bool> IsVarianceColumn
		{
			get
			{
				return this._IsVarianceColumn;
			}
			set
			{
				if ((this._IsVarianceColumn != value))
				{
					this.OnIsVarianceColumnChanging(value);
					this.SendPropertyChanging();
					this._IsVarianceColumn = value;
					this.SendPropertyChanged("IsVarianceColumn");
					this.OnIsVarianceColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetricDefinition_MetricDefinition", Storage="_MetricDefinitions", ThisKey="Id", OtherKey="BudgetOfId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<MetricDefinition> MetricDefinitions
		{
			get
			{
				if ((this.serializing 
							&& (this._MetricDefinitions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MetricDefinitions;
			}
			set
			{
				this._MetricDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetricDefinition_ReportRowConfig", Storage="_ReportRowConfigs", ThisKey="Id", OtherKey="MetricDefinitionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<ReportRowConfig> ReportRowConfigs
		{
			get
			{
				if ((this.serializing 
							&& (this._ReportRowConfigs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ReportRowConfigs;
			}
			set
			{
				this._ReportRowConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetricDefinition_TrendAnalysisReportConfig", Storage="_TrendAnalysisReportConfigs", ThisKey="Id", OtherKey="MetricDefinitionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<TrendAnalysisReportConfig> TrendAnalysisReportConfigs
		{
			get
			{
				if ((this.serializing 
							&& (this._TrendAnalysisReportConfigs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TrendAnalysisReportConfigs;
			}
			set
			{
				this._TrendAnalysisReportConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetricDefinition_TrendAnalysisReportConfig1", Storage="_TrendAnalysisReportConfigs1", ThisKey="Id", OtherKey="TargetMetricDefinitionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<TrendAnalysisReportConfig> TrendAnalysisReportConfigs1
		{
			get
			{
				if ((this.serializing 
							&& (this._TrendAnalysisReportConfigs1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TrendAnalysisReportConfigs1;
			}
			set
			{
				this._TrendAnalysisReportConfigs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetricDefinition_WidgetSetting", Storage="_WidgetSettings", ThisKey="Id", OtherKey="PrimaryMetricDefinitionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<WidgetSetting> WidgetSettings
		{
			get
			{
				if ((this.serializing 
							&& (this._WidgetSettings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WidgetSettings;
			}
			set
			{
				this._WidgetSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetricDefinition_WidgetSetting1", Storage="_WidgetSettings1", ThisKey="Id", OtherKey="ComparisonMetricDefinitionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<WidgetSetting> WidgetSettings1
		{
			get
			{
				if ((this.serializing 
							&& (this._WidgetSettings1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._WidgetSettings1;
			}
			set
			{
				this._WidgetSettings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetricDefinition_MetricDefinition", Storage="_MetricDefinition1", ThisKey="BudgetOfId", OtherKey="Id", IsForeignKey=true)]
		public MetricDefinition MetricDefinition1
		{
			get
			{
				return this._MetricDefinition1.Entity;
			}
			set
			{
				MetricDefinition previousValue = this._MetricDefinition1.Entity;
				if (((previousValue != value) 
							|| (this._MetricDefinition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MetricDefinition1.Entity = null;
						previousValue.MetricDefinitions.Remove(this);
					}
					this._MetricDefinition1.Entity = value;
					if ((value != null))
					{
						value.MetricDefinitions.Add(this);
						this._BudgetOfId = value.Id;
					}
					else
					{
						this._BudgetOfId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MetricDefinition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MetricDefinitions(MetricDefinition entity)
		{
			this.SendPropertyChanging();
			entity.MetricDefinition1 = this;
		}
		
		private void detach_MetricDefinitions(MetricDefinition entity)
		{
			this.SendPropertyChanging();
			entity.MetricDefinition1 = null;
		}
		
		private void attach_ReportRowConfigs(ReportRowConfig entity)
		{
			this.SendPropertyChanging();
			entity.MetricDefinition = this;
		}
		
		private void detach_ReportRowConfigs(ReportRowConfig entity)
		{
			this.SendPropertyChanging();
			entity.MetricDefinition = null;
		}
		
		private void attach_TrendAnalysisReportConfigs(TrendAnalysisReportConfig entity)
		{
			this.SendPropertyChanging();
			entity.MetricDefinition = this;
		}
		
		private void detach_TrendAnalysisReportConfigs(TrendAnalysisReportConfig entity)
		{
			this.SendPropertyChanging();
			entity.MetricDefinition = null;
		}
		
		private void attach_TrendAnalysisReportConfigs1(TrendAnalysisReportConfig entity)
		{
			this.SendPropertyChanging();
			entity.MetricDefinition1 = this;
		}
		
		private void detach_TrendAnalysisReportConfigs1(TrendAnalysisReportConfig entity)
		{
			this.SendPropertyChanging();
			entity.MetricDefinition1 = null;
		}
		
		private void attach_WidgetSettings(WidgetSetting entity)
		{
			this.SendPropertyChanging();
			entity.MetricDefinition = this;
		}
		
		private void detach_WidgetSettings(WidgetSetting entity)
		{
			this.SendPropertyChanging();
			entity.MetricDefinition = null;
		}
		
		private void attach_WidgetSettings1(WidgetSetting entity)
		{
			this.SendPropertyChanging();
			entity.MetricDefinition1 = this;
		}
		
		private void detach_WidgetSettings1(WidgetSetting entity)
		{
			this.SendPropertyChanging();
			entity.MetricDefinition1 = null;
		}
		
		private void Initialize()
		{
			this._MetricDefinitions = new EntitySet<MetricDefinition>(new Action<MetricDefinition>(this.attach_MetricDefinitions), new Action<MetricDefinition>(this.detach_MetricDefinitions));
			this._ReportRowConfigs = new EntitySet<ReportRowConfig>(new Action<ReportRowConfig>(this.attach_ReportRowConfigs), new Action<ReportRowConfig>(this.detach_ReportRowConfigs));
			this._TrendAnalysisReportConfigs = new EntitySet<TrendAnalysisReportConfig>(new Action<TrendAnalysisReportConfig>(this.attach_TrendAnalysisReportConfigs), new Action<TrendAnalysisReportConfig>(this.detach_TrendAnalysisReportConfigs));
			this._TrendAnalysisReportConfigs1 = new EntitySet<TrendAnalysisReportConfig>(new Action<TrendAnalysisReportConfig>(this.attach_TrendAnalysisReportConfigs1), new Action<TrendAnalysisReportConfig>(this.detach_TrendAnalysisReportConfigs1));
			this._WidgetSettings = new EntitySet<WidgetSetting>(new Action<WidgetSetting>(this.attach_WidgetSettings), new Action<WidgetSetting>(this.detach_WidgetSettings));
			this._WidgetSettings1 = new EntitySet<WidgetSetting>(new Action<WidgetSetting>(this.attach_WidgetSettings1), new Action<WidgetSetting>(this.detach_WidgetSettings1));
			this._MetricDefinition1 = default(EntityRef<MetricDefinition>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MetricIndicatorAllowances")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MetricIndicatorAllowance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Metric;
		
		private double _Ok;
		
		private double _Caution;
		
		private System.Nullable<bool> _LessIsBetter;
		
		private string _DisplayName;
		
		private string _NumFormat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMetricChanging(string value);
    partial void OnMetricChanged();
    partial void OnOkChanging(double value);
    partial void OnOkChanged();
    partial void OnCautionChanging(double value);
    partial void OnCautionChanged();
    partial void OnLessIsBetterChanging(System.Nullable<bool> value);
    partial void OnLessIsBetterChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnNumFormatChanging(string value);
    partial void OnNumFormatChanged();
    #endregion
		
		public MetricIndicatorAllowance()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metric", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Metric
		{
			get
			{
				return this._Metric;
			}
			set
			{
				if ((this._Metric != value))
				{
					this.OnMetricChanging(value);
					this.SendPropertyChanging();
					this._Metric = value;
					this.SendPropertyChanged("Metric");
					this.OnMetricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ok", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public double Ok
		{
			get
			{
				return this._Ok;
			}
			set
			{
				if ((this._Ok != value))
				{
					this.OnOkChanging(value);
					this.SendPropertyChanging();
					this._Ok = value;
					this.SendPropertyChanged("Ok");
					this.OnOkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caution", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public double Caution
		{
			get
			{
				return this._Caution;
			}
			set
			{
				if ((this._Caution != value))
				{
					this.OnCautionChanging(value);
					this.SendPropertyChanging();
					this._Caution = value;
					this.SendPropertyChanged("Caution");
					this.OnCautionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessIsBetter", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> LessIsBetter
		{
			get
			{
				return this._LessIsBetter;
			}
			set
			{
				if ((this._LessIsBetter != value))
				{
					this.OnLessIsBetterChanging(value);
					this.SendPropertyChanging();
					this._LessIsBetter = value;
					this.SendPropertyChanged("LessIsBetter");
					this.OnLessIsBetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumFormat", DbType="VarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string NumFormat
		{
			get
			{
				return this._NumFormat;
			}
			set
			{
				if ((this._NumFormat != value))
				{
					this.OnNumFormatChanging(value);
					this.SendPropertyChanging();
					this._NumFormat = value;
					this.SendPropertyChanged("NumFormat");
					this.OnNumFormatChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MixFormulation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MixFormulation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _StandardMixId;
		
		private int _PlantId;
		
		private string _Description;
		
		private string _Number;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<bool> _IsScrubbed;
		
		private System.Nullable<decimal> _AshPercentage;
		
		private System.Nullable<decimal> _FineAggPercentage;
		
		private System.Nullable<decimal> _Sacks;
		
		private EntitySet<MixFormulationCostProjection> _MixFormulationCostProjections;
		
		private EntitySet<StandardMixConstituent> _StandardMixConstituents;
		
		private EntityRef<Plant> _Plant;
		
		private EntityRef<StandardMix> _StandardMix;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnStandardMixIdChanging(long value);
    partial void OnStandardMixIdChanged();
    partial void OnPlantIdChanging(int value);
    partial void OnPlantIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnIsScrubbedChanging(System.Nullable<bool> value);
    partial void OnIsScrubbedChanged();
    partial void OnAshPercentageChanging(System.Nullable<decimal> value);
    partial void OnAshPercentageChanged();
    partial void OnFineAggPercentageChanging(System.Nullable<decimal> value);
    partial void OnFineAggPercentageChanged();
    partial void OnSacksChanging(System.Nullable<decimal> value);
    partial void OnSacksChanged();
    #endregion
		
		public MixFormulation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardMixId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long StandardMixId
		{
			get
			{
				return this._StandardMixId;
			}
			set
			{
				if ((this._StandardMixId != value))
				{
					if (this._StandardMix.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStandardMixIdChanging(value);
					this.SendPropertyChanging();
					this._StandardMixId = value;
					this.SendPropertyChanged("StandardMixId");
					this.OnStandardMixIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScrubbed", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> IsScrubbed
		{
			get
			{
				return this._IsScrubbed;
			}
			set
			{
				if ((this._IsScrubbed != value))
				{
					this.OnIsScrubbedChanging(value);
					this.SendPropertyChanging();
					this._IsScrubbed = value;
					this.SendPropertyChanged("IsScrubbed");
					this.OnIsScrubbedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AshPercentage", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<decimal> AshPercentage
		{
			get
			{
				return this._AshPercentage;
			}
			set
			{
				if ((this._AshPercentage != value))
				{
					this.OnAshPercentageChanging(value);
					this.SendPropertyChanging();
					this._AshPercentage = value;
					this.SendPropertyChanged("AshPercentage");
					this.OnAshPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineAggPercentage", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<decimal> FineAggPercentage
		{
			get
			{
				return this._FineAggPercentage;
			}
			set
			{
				if ((this._FineAggPercentage != value))
				{
					this.OnFineAggPercentageChanging(value);
					this.SendPropertyChanging();
					this._FineAggPercentage = value;
					this.SendPropertyChanged("FineAggPercentage");
					this.OnFineAggPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sacks", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> Sacks
		{
			get
			{
				return this._Sacks;
			}
			set
			{
				if ((this._Sacks != value))
				{
					this.OnSacksChanging(value);
					this.SendPropertyChanging();
					this._Sacks = value;
					this.SendPropertyChanged("Sacks");
					this.OnSacksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MixFormulation_MixFormulationCostProjection", Storage="_MixFormulationCostProjections", ThisKey="Id", OtherKey="MixFormulationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<MixFormulationCostProjection> MixFormulationCostProjections
		{
			get
			{
				if ((this.serializing 
							&& (this._MixFormulationCostProjections.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MixFormulationCostProjections;
			}
			set
			{
				this._MixFormulationCostProjections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MixFormulation_StandardMixConstituent", Storage="_StandardMixConstituents", ThisKey="Id", OtherKey="MixFormulationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<StandardMixConstituent> StandardMixConstituents
		{
			get
			{
				if ((this.serializing 
							&& (this._StandardMixConstituents.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StandardMixConstituents;
			}
			set
			{
				this._StandardMixConstituents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_MixFormulation", Storage="_Plant", ThisKey="PlantId", OtherKey="PlantId", IsForeignKey=true)]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.MixFormulations.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.MixFormulations.Add(this);
						this._PlantId = value.PlantId;
					}
					else
					{
						this._PlantId = default(int);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardMix_MixFormulation", Storage="_StandardMix", ThisKey="StandardMixId", OtherKey="Id", IsForeignKey=true)]
		public StandardMix StandardMix
		{
			get
			{
				return this._StandardMix.Entity;
			}
			set
			{
				StandardMix previousValue = this._StandardMix.Entity;
				if (((previousValue != value) 
							|| (this._StandardMix.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardMix.Entity = null;
						previousValue.MixFormulations.Remove(this);
					}
					this._StandardMix.Entity = value;
					if ((value != null))
					{
						value.MixFormulations.Add(this);
						this._StandardMixId = value.Id;
					}
					else
					{
						this._StandardMixId = default(long);
					}
					this.SendPropertyChanged("StandardMix");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MixFormulationCostProjections(MixFormulationCostProjection entity)
		{
			this.SendPropertyChanging();
			entity.MixFormulation = this;
		}
		
		private void detach_MixFormulationCostProjections(MixFormulationCostProjection entity)
		{
			this.SendPropertyChanging();
			entity.MixFormulation = null;
		}
		
		private void attach_StandardMixConstituents(StandardMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.MixFormulation = this;
		}
		
		private void detach_StandardMixConstituents(StandardMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.MixFormulation = null;
		}
		
		private void Initialize()
		{
			this._MixFormulationCostProjections = new EntitySet<MixFormulationCostProjection>(new Action<MixFormulationCostProjection>(this.attach_MixFormulationCostProjections), new Action<MixFormulationCostProjection>(this.detach_MixFormulationCostProjections));
			this._StandardMixConstituents = new EntitySet<StandardMixConstituent>(new Action<StandardMixConstituent>(this.attach_StandardMixConstituents), new Action<StandardMixConstituent>(this.detach_StandardMixConstituents));
			this._Plant = default(EntityRef<Plant>);
			this._StandardMix = default(EntityRef<StandardMix>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MixFormulationCostProjection")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MixFormulationCostProjection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _MixFormulationId;
		
		private decimal _Cost;
		
		private System.DateTime _AsOfDate;
		
		private EntityRef<MixFormulation> _MixFormulation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMixFormulationIdChanging(long value);
    partial void OnMixFormulationIdChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAsOfDateChanging(System.DateTime value);
    partial void OnAsOfDateChanged();
    #endregion
		
		public MixFormulationCostProjection()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixFormulationId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long MixFormulationId
		{
			get
			{
				return this._MixFormulationId;
			}
			set
			{
				if ((this._MixFormulationId != value))
				{
					if (this._MixFormulation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMixFormulationIdChanging(value);
					this.SendPropertyChanging();
					this._MixFormulationId = value;
					this.SendPropertyChanged("MixFormulationId");
					this.OnMixFormulationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AsOfDate", DbType="Date NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime AsOfDate
		{
			get
			{
				return this._AsOfDate;
			}
			set
			{
				if ((this._AsOfDate != value))
				{
					this.OnAsOfDateChanging(value);
					this.SendPropertyChanging();
					this._AsOfDate = value;
					this.SendPropertyChanged("AsOfDate");
					this.OnAsOfDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MixFormulation_MixFormulationCostProjection", Storage="_MixFormulation", ThisKey="MixFormulationId", OtherKey="Id", IsForeignKey=true)]
		public MixFormulation MixFormulation
		{
			get
			{
				return this._MixFormulation.Entity;
			}
			set
			{
				MixFormulation previousValue = this._MixFormulation.Entity;
				if (((previousValue != value) 
							|| (this._MixFormulation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MixFormulation.Entity = null;
						previousValue.MixFormulationCostProjections.Remove(this);
					}
					this._MixFormulation.Entity = value;
					if ((value != null))
					{
						value.MixFormulationCostProjections.Add(this);
						this._MixFormulationId = value.Id;
					}
					else
					{
						this._MixFormulationId = default(long);
					}
					this.SendPropertyChanged("MixFormulation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._MixFormulation = default(EntityRef<MixFormulation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MixLevelAddon")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MixLevelAddon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _QuotationMixId;
		
		private long _AddonId;
		
		private System.Nullable<double> _Quantity;
		
		private System.Nullable<decimal> _Cost;
		
		private EntityRef<Addon> _Addon;
		
		private EntityRef<QuotationMix> _QuotationMix;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnQuotationMixIdChanging(long value);
    partial void OnQuotationMixIdChanged();
    partial void OnAddonIdChanging(long value);
    partial void OnAddonIdChanged();
    partial void OnQuantityChanging(System.Nullable<double> value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    #endregion
		
		public MixLevelAddon()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationMixId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long QuotationMixId
		{
			get
			{
				return this._QuotationMixId;
			}
			set
			{
				if ((this._QuotationMixId != value))
				{
					if (this._QuotationMix.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationMixIdChanging(value);
					this.SendPropertyChanging();
					this._QuotationMixId = value;
					this.SendPropertyChanged("QuotationMixId");
					this.OnQuotationMixIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long AddonId
		{
			get
			{
				return this._AddonId;
			}
			set
			{
				if ((this._AddonId != value))
				{
					if (this._Addon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddonIdChanging(value);
					this.SendPropertyChanging();
					this._AddonId = value;
					this.SendPropertyChanged("AddonId");
					this.OnAddonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<double> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_MixLevelAddon", Storage="_Addon", ThisKey="AddonId", OtherKey="Id", IsForeignKey=true)]
		public Addon Addon
		{
			get
			{
				return this._Addon.Entity;
			}
			set
			{
				Addon previousValue = this._Addon.Entity;
				if (((previousValue != value) 
							|| (this._Addon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Addon.Entity = null;
						previousValue.MixLevelAddons.Remove(this);
					}
					this._Addon.Entity = value;
					if ((value != null))
					{
						value.MixLevelAddons.Add(this);
						this._AddonId = value.Id;
					}
					else
					{
						this._AddonId = default(long);
					}
					this.SendPropertyChanged("Addon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuotationMix_MixLevelAddon", Storage="_QuotationMix", ThisKey="QuotationMixId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QuotationMix QuotationMix
		{
			get
			{
				return this._QuotationMix.Entity;
			}
			set
			{
				QuotationMix previousValue = this._QuotationMix.Entity;
				if (((previousValue != value) 
							|| (this._QuotationMix.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuotationMix.Entity = null;
						previousValue.MixLevelAddons.Remove(this);
					}
					this._QuotationMix.Entity = value;
					if ((value != null))
					{
						value.MixLevelAddons.Add(this);
						this._QuotationMixId = value.Id;
					}
					else
					{
						this._QuotationMixId = default(long);
					}
					this.SendPropertyChanged("QuotationMix");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Addon = default(EntityRef<Addon>);
			this._QuotationMix = default(EntityRef<QuotationMix>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NameTest")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NameTest
	{
		
		private string _FullName;
		
		public NameTest()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notification")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _NotificationType;
		
		private long _QuotationId;
		
		private System.Nullable<int> _ProjectId;
		
		private System.Nullable<long> _ConversationId;
		
		private System.Guid _UserId;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<bool> _IsRead;
		
		private string _MessageText;
		
		private string _MessageSubject;
		
		private string _CreatedByUser;
		
		private EntityRef<Conversation> _Conversation;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<Quotation> _Quotation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNotificationTypeChanging(string value);
    partial void OnNotificationTypeChanged();
    partial void OnQuotationIdChanging(long value);
    partial void OnQuotationIdChanged();
    partial void OnProjectIdChanging(System.Nullable<int> value);
    partial void OnProjectIdChanged();
    partial void OnConversationIdChanging(System.Nullable<long> value);
    partial void OnConversationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnIsReadChanging(System.Nullable<bool> value);
    partial void OnIsReadChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnMessageSubjectChanging(string value);
    partial void OnMessageSubjectChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    #endregion
		
		public Notification()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NotificationType
		{
			get
			{
				return this._NotificationType;
			}
			set
			{
				if ((this._NotificationType != value))
				{
					this.OnNotificationTypeChanging(value);
					this.SendPropertyChanging();
					this._NotificationType = value;
					this.SendPropertyChanged("NotificationType");
					this.OnNotificationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long QuotationId
		{
			get
			{
				return this._QuotationId;
			}
			set
			{
				if ((this._QuotationId != value))
				{
					if (this._Quotation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationIdChanging(value);
					this.SendPropertyChanging();
					this._QuotationId = value;
					this.SendPropertyChanged("QuotationId");
					this.OnQuotationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversationId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<long> ConversationId
		{
			get
			{
				return this._ConversationId;
			}
			set
			{
				if ((this._ConversationId != value))
				{
					if (this._Conversation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConversationIdChanging(value);
					this.SendPropertyChanging();
					this._ConversationId = value;
					this.SendPropertyChanged("ConversationId");
					this.OnConversationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this.OnMessageTextChanging(value);
					this.SendPropertyChanging();
					this._MessageText = value;
					this.SendPropertyChanged("MessageText");
					this.OnMessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageSubject", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string MessageSubject
		{
			get
			{
				return this._MessageSubject;
			}
			set
			{
				if ((this._MessageSubject != value))
				{
					this.OnMessageSubjectChanging(value);
					this.SendPropertyChanging();
					this._MessageSubject = value;
					this.SendPropertyChanged("MessageSubject");
					this.OnMessageSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUser", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string CreatedByUser
		{
			get
			{
				return this._CreatedByUser;
			}
			set
			{
				if ((this._CreatedByUser != value))
				{
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conversation_Notification", Storage="_Conversation", ThisKey="ConversationId", OtherKey="Id", IsForeignKey=true)]
		public Conversation Conversation
		{
			get
			{
				return this._Conversation.Entity;
			}
			set
			{
				Conversation previousValue = this._Conversation.Entity;
				if (((previousValue != value) 
							|| (this._Conversation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Conversation.Entity = null;
						previousValue.Notifications.Remove(this);
					}
					this._Conversation.Entity = value;
					if ((value != null))
					{
						value.Notifications.Add(this);
						this._ConversationId = value.Id;
					}
					else
					{
						this._ConversationId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Conversation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Notification", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Notifications.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Notifications.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_Notification", Storage="_Quotation", ThisKey="QuotationId", OtherKey="Id", IsForeignKey=true)]
		public Quotation Quotation
		{
			get
			{
				return this._Quotation.Entity;
			}
			set
			{
				Quotation previousValue = this._Quotation.Entity;
				if (((previousValue != value) 
							|| (this._Quotation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quotation.Entity = null;
						previousValue.Notifications.Remove(this);
					}
					this._Quotation.Entity = value;
					if ((value != null))
					{
						value.Notifications.Add(this);
						this._QuotationId = value.Id;
					}
					else
					{
						this._QuotationId = default(long);
					}
					this.SendPropertyChanged("Quotation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Conversation = default(EntityRef<Conversation>);
			this._Project = default(EntityRef<Project>);
			this._Quotation = default(EntityRef<Quotation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Plant")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Plant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlantId;
		
		private int _CompanyId;
		
		private int _DistrictId;
		
		private string _Name;
		
		private System.Nullable<int> _Trucks;
		
		private System.Nullable<bool> _Active;
		
		private int _ProductTypeId;
		
		private System.Nullable<int> _TicketMinutes;
		
		private System.Nullable<int> _LoadMinutes;
		
		private System.Nullable<int> _TemperMinutes;
		
		private System.Nullable<int> _WaitMinutes;
		
		private System.Nullable<decimal> _Utilization;
		
		private System.Nullable<decimal> _PlantFixedCost;
		
		private System.Nullable<decimal> _DeliveryFixedCost;
		
		private System.Nullable<decimal> _SGA;
		
		private System.Nullable<decimal> _VariableCostPerMin;
		
		private System.Nullable<long> _FSKId;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private string _DispatchId;
		
		private System.Nullable<bool> _Synced;
		
		private System.Nullable<int> _PostLoadMinutes;
		
		private System.Nullable<int> _ToJobMinutes;
		
		private System.Nullable<int> _UnloadMinutes;
		
		private System.Nullable<int> _ToPlantMinutes;
		
		private System.Nullable<int> _AvgLoadSize;
		
		private string _Address;
		
		private string _CityStateZip;
		
		private string _Phone;
		
		private EntitySet<AdditionalProductPlant> _AdditionalProductPlants;
		
		private EntitySet<AggregateProductPriceProjection> _AggregateProductPriceProjections;
		
		private EntitySet<BlockProductPriceProjection> _BlockProductPriceProjections;
		
		private EntitySet<ConcreteProductPlant> _ConcreteProductPlants;
		
		private EntitySet<DailyPlantSummary> _DailyPlantSummaries;
		
		private EntitySet<MixFormulation> _MixFormulations;
		
		private EntitySet<PlantBudget> _PlantBudgets;
		
		private EntitySet<PlantFinancialBudget> _PlantFinancialBudgets;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<ProjectPlant> _ProjectPlants;
		
		private EntitySet<ProjectProjection> _ProjectProjections;
		
		private EntitySet<ProjectProjection2> _ProjectProjection2s;
		
		private EntitySet<Quotation> _Quotations;
		
		private EntitySet<Quotation> _Quotations1;
		
		private EntitySet<Quotation> _Quotations2;
		
		private EntitySet<RawMaterialCostProjection> _RawMaterialCostProjections;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<District> _District;
		
		private EntityRef<FSKPrice> _FSKPrice;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlantIdChanging(int value);
    partial void OnPlantIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTrucksChanging(System.Nullable<int> value);
    partial void OnTrucksChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnProductTypeIdChanging(int value);
    partial void OnProductTypeIdChanged();
    partial void OnTicketMinutesChanging(System.Nullable<int> value);
    partial void OnTicketMinutesChanged();
    partial void OnLoadMinutesChanging(System.Nullable<int> value);
    partial void OnLoadMinutesChanged();
    partial void OnTemperMinutesChanging(System.Nullable<int> value);
    partial void OnTemperMinutesChanged();
    partial void OnWaitMinutesChanging(System.Nullable<int> value);
    partial void OnWaitMinutesChanged();
    partial void OnUtilizationChanging(System.Nullable<decimal> value);
    partial void OnUtilizationChanged();
    partial void OnPlantFixedCostChanging(System.Nullable<decimal> value);
    partial void OnPlantFixedCostChanged();
    partial void OnDeliveryFixedCostChanging(System.Nullable<decimal> value);
    partial void OnDeliveryFixedCostChanged();
    partial void OnSGAChanging(System.Nullable<decimal> value);
    partial void OnSGAChanged();
    partial void OnVariableCostPerMinChanging(System.Nullable<decimal> value);
    partial void OnVariableCostPerMinChanged();
    partial void OnFSKIdChanging(System.Nullable<long> value);
    partial void OnFSKIdChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnSyncedChanging(System.Nullable<bool> value);
    partial void OnSyncedChanged();
    partial void OnPostLoadMinutesChanging(System.Nullable<int> value);
    partial void OnPostLoadMinutesChanged();
    partial void OnToJobMinutesChanging(System.Nullable<int> value);
    partial void OnToJobMinutesChanged();
    partial void OnUnloadMinutesChanging(System.Nullable<int> value);
    partial void OnUnloadMinutesChanged();
    partial void OnToPlantMinutesChanging(System.Nullable<int> value);
    partial void OnToPlantMinutesChanged();
    partial void OnAvgLoadSizeChanging(System.Nullable<int> value);
    partial void OnAvgLoadSizeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityStateZipChanging(string value);
    partial void OnCityStateZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Plant()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					if (this._District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trucks", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> Trucks
		{
			get
			{
				return this._Trucks;
			}
			set
			{
				if ((this._Trucks != value))
				{
					this.OnTrucksChanging(value);
					this.SendPropertyChanging();
					this._Trucks = value;
					this.SendPropertyChanged("Trucks");
					this.OnTrucksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					this.OnProductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeId = value;
					this.SendPropertyChanged("ProductTypeId");
					this.OnProductTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketMinutes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> TicketMinutes
		{
			get
			{
				return this._TicketMinutes;
			}
			set
			{
				if ((this._TicketMinutes != value))
				{
					this.OnTicketMinutesChanging(value);
					this.SendPropertyChanging();
					this._TicketMinutes = value;
					this.SendPropertyChanged("TicketMinutes");
					this.OnTicketMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadMinutes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> LoadMinutes
		{
			get
			{
				return this._LoadMinutes;
			}
			set
			{
				if ((this._LoadMinutes != value))
				{
					this.OnLoadMinutesChanging(value);
					this.SendPropertyChanging();
					this._LoadMinutes = value;
					this.SendPropertyChanged("LoadMinutes");
					this.OnLoadMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemperMinutes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> TemperMinutes
		{
			get
			{
				return this._TemperMinutes;
			}
			set
			{
				if ((this._TemperMinutes != value))
				{
					this.OnTemperMinutesChanging(value);
					this.SendPropertyChanging();
					this._TemperMinutes = value;
					this.SendPropertyChanged("TemperMinutes");
					this.OnTemperMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitMinutes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> WaitMinutes
		{
			get
			{
				return this._WaitMinutes;
			}
			set
			{
				if ((this._WaitMinutes != value))
				{
					this.OnWaitMinutesChanging(value);
					this.SendPropertyChanging();
					this._WaitMinutes = value;
					this.SendPropertyChanged("WaitMinutes");
					this.OnWaitMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Utilization", DbType="Decimal(3,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<decimal> Utilization
		{
			get
			{
				return this._Utilization;
			}
			set
			{
				if ((this._Utilization != value))
				{
					this.OnUtilizationChanging(value);
					this.SendPropertyChanging();
					this._Utilization = value;
					this.SendPropertyChanged("Utilization");
					this.OnUtilizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantFixedCost", DbType="Decimal(12,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<decimal> PlantFixedCost
		{
			get
			{
				return this._PlantFixedCost;
			}
			set
			{
				if ((this._PlantFixedCost != value))
				{
					this.OnPlantFixedCostChanging(value);
					this.SendPropertyChanging();
					this._PlantFixedCost = value;
					this.SendPropertyChanged("PlantFixedCost");
					this.OnPlantFixedCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryFixedCost", DbType="Decimal(12,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<decimal> DeliveryFixedCost
		{
			get
			{
				return this._DeliveryFixedCost;
			}
			set
			{
				if ((this._DeliveryFixedCost != value))
				{
					this.OnDeliveryFixedCostChanging(value);
					this.SendPropertyChanging();
					this._DeliveryFixedCost = value;
					this.SendPropertyChanged("DeliveryFixedCost");
					this.OnDeliveryFixedCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SGA", DbType="Decimal(12,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<decimal> SGA
		{
			get
			{
				return this._SGA;
			}
			set
			{
				if ((this._SGA != value))
				{
					this.OnSGAChanging(value);
					this.SendPropertyChanging();
					this._SGA = value;
					this.SendPropertyChanged("SGA");
					this.OnSGAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableCostPerMin", DbType="Decimal(12,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<decimal> VariableCostPerMin
		{
			get
			{
				return this._VariableCostPerMin;
			}
			set
			{
				if ((this._VariableCostPerMin != value))
				{
					this.OnVariableCostPerMinChanging(value);
					this.SendPropertyChanging();
					this._VariableCostPerMin = value;
					this.SendPropertyChanged("VariableCostPerMin");
					this.OnVariableCostPerMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FSKId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<long> FSKId
		{
			get
			{
				return this._FSKId;
			}
			set
			{
				if ((this._FSKId != value))
				{
					if (this._FSKPrice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFSKIdChanging(value);
					this.SendPropertyChanging();
					this._FSKId = value;
					this.SendPropertyChanged("FSKId");
					this.OnFSKIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synced", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<bool> Synced
		{
			get
			{
				return this._Synced;
			}
			set
			{
				if ((this._Synced != value))
				{
					this.OnSyncedChanging(value);
					this.SendPropertyChanging();
					this._Synced = value;
					this.SendPropertyChanged("Synced");
					this.OnSyncedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostLoadMinutes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<int> PostLoadMinutes
		{
			get
			{
				return this._PostLoadMinutes;
			}
			set
			{
				if ((this._PostLoadMinutes != value))
				{
					this.OnPostLoadMinutesChanging(value);
					this.SendPropertyChanging();
					this._PostLoadMinutes = value;
					this.SendPropertyChanged("PostLoadMinutes");
					this.OnPostLoadMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToJobMinutes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<int> ToJobMinutes
		{
			get
			{
				return this._ToJobMinutes;
			}
			set
			{
				if ((this._ToJobMinutes != value))
				{
					this.OnToJobMinutesChanging(value);
					this.SendPropertyChanging();
					this._ToJobMinutes = value;
					this.SendPropertyChanged("ToJobMinutes");
					this.OnToJobMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnloadMinutes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public System.Nullable<int> UnloadMinutes
		{
			get
			{
				return this._UnloadMinutes;
			}
			set
			{
				if ((this._UnloadMinutes != value))
				{
					this.OnUnloadMinutesChanging(value);
					this.SendPropertyChanging();
					this._UnloadMinutes = value;
					this.SendPropertyChanged("UnloadMinutes");
					this.OnUnloadMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPlantMinutes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<int> ToPlantMinutes
		{
			get
			{
				return this._ToPlantMinutes;
			}
			set
			{
				if ((this._ToPlantMinutes != value))
				{
					this.OnToPlantMinutesChanging(value);
					this.SendPropertyChanging();
					this._ToPlantMinutes = value;
					this.SendPropertyChanged("ToPlantMinutes");
					this.OnToPlantMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgLoadSize", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<int> AvgLoadSize
		{
			get
			{
				return this._AvgLoadSize;
			}
			set
			{
				if ((this._AvgLoadSize != value))
				{
					this.OnAvgLoadSizeChanging(value);
					this.SendPropertyChanging();
					this._AvgLoadSize = value;
					this.SendPropertyChanged("AvgLoadSize");
					this.OnAvgLoadSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityStateZip", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public string CityStateZip
		{
			get
			{
				return this._CityStateZip;
			}
			set
			{
				if ((this._CityStateZip != value))
				{
					this.OnCityStateZipChanging(value);
					this.SendPropertyChanging();
					this._CityStateZip = value;
					this.SendPropertyChanged("CityStateZip");
					this.OnCityStateZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_AdditionalProductPlant", Storage="_AdditionalProductPlants", ThisKey="PlantId", OtherKey="PlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public EntitySet<AdditionalProductPlant> AdditionalProductPlants
		{
			get
			{
				if ((this.serializing 
							&& (this._AdditionalProductPlants.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AdditionalProductPlants;
			}
			set
			{
				this._AdditionalProductPlants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_AggregateProductPriceProjection", Storage="_AggregateProductPriceProjections", ThisKey="PlantId", OtherKey="PlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public EntitySet<AggregateProductPriceProjection> AggregateProductPriceProjections
		{
			get
			{
				if ((this.serializing 
							&& (this._AggregateProductPriceProjections.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AggregateProductPriceProjections;
			}
			set
			{
				this._AggregateProductPriceProjections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_BlockProductPriceProjection", Storage="_BlockProductPriceProjections", ThisKey="PlantId", OtherKey="PlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<BlockProductPriceProjection> BlockProductPriceProjections
		{
			get
			{
				if ((this.serializing 
							&& (this._BlockProductPriceProjections.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BlockProductPriceProjections;
			}
			set
			{
				this._BlockProductPriceProjections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_ConcreteProductPlant", Storage="_ConcreteProductPlants", ThisKey="PlantId", OtherKey="PlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public EntitySet<ConcreteProductPlant> ConcreteProductPlants
		{
			get
			{
				if ((this.serializing 
							&& (this._ConcreteProductPlants.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ConcreteProductPlants;
			}
			set
			{
				this._ConcreteProductPlants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_DailyPlantSummary", Storage="_DailyPlantSummaries", ThisKey="PlantId", OtherKey="PlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public EntitySet<DailyPlantSummary> DailyPlantSummaries
		{
			get
			{
				if ((this.serializing 
							&& (this._DailyPlantSummaries.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DailyPlantSummaries;
			}
			set
			{
				this._DailyPlantSummaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_MixFormulation", Storage="_MixFormulations", ThisKey="PlantId", OtherKey="PlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35, EmitDefaultValue=false)]
		public EntitySet<MixFormulation> MixFormulations
		{
			get
			{
				if ((this.serializing 
							&& (this._MixFormulations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MixFormulations;
			}
			set
			{
				this._MixFormulations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_PlantBudget", Storage="_PlantBudgets", ThisKey="PlantId", OtherKey="PlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36, EmitDefaultValue=false)]
		public EntitySet<PlantBudget> PlantBudgets
		{
			get
			{
				if ((this.serializing 
							&& (this._PlantBudgets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlantBudgets;
			}
			set
			{
				this._PlantBudgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_PlantFinancialBudget", Storage="_PlantFinancialBudgets", ThisKey="PlantId", OtherKey="PlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37, EmitDefaultValue=false)]
		public EntitySet<PlantFinancialBudget> PlantFinancialBudgets
		{
			get
			{
				if ((this.serializing 
							&& (this._PlantFinancialBudgets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlantFinancialBudgets;
			}
			set
			{
				this._PlantFinancialBudgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_Project", Storage="_Projects", ThisKey="PlantId", OtherKey="ConcretePlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38, EmitDefaultValue=false)]
		public EntitySet<Project> Projects
		{
			get
			{
				if ((this.serializing 
							&& (this._Projects.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_ProjectPlant", Storage="_ProjectPlants", ThisKey="PlantId", OtherKey="PlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39, EmitDefaultValue=false)]
		public EntitySet<ProjectPlant> ProjectPlants
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectPlants.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectPlants;
			}
			set
			{
				this._ProjectPlants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_ProjectProjection", Storage="_ProjectProjections", ThisKey="PlantId", OtherKey="PlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40, EmitDefaultValue=false)]
		public EntitySet<ProjectProjection> ProjectProjections
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectProjections.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectProjections;
			}
			set
			{
				this._ProjectProjections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_ProjectProjection2", Storage="_ProjectProjection2s", ThisKey="PlantId", OtherKey="PlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41, EmitDefaultValue=false)]
		public EntitySet<ProjectProjection2> ProjectProjection2s
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectProjection2s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectProjection2s;
			}
			set
			{
				this._ProjectProjection2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_Quotation", Storage="_Quotations", ThisKey="PlantId", OtherKey="PlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=42, EmitDefaultValue=false)]
		public EntitySet<Quotation> Quotations
		{
			get
			{
				if ((this.serializing 
							&& (this._Quotations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Quotations;
			}
			set
			{
				this._Quotations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_Quotation1", Storage="_Quotations1", ThisKey="PlantId", OtherKey="AggregatePlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=43, EmitDefaultValue=false)]
		public EntitySet<Quotation> Quotations1
		{
			get
			{
				if ((this.serializing 
							&& (this._Quotations1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Quotations1;
			}
			set
			{
				this._Quotations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_Quotation2", Storage="_Quotations2", ThisKey="PlantId", OtherKey="BlockPlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=44, EmitDefaultValue=false)]
		public EntitySet<Quotation> Quotations2
		{
			get
			{
				if ((this.serializing 
							&& (this._Quotations2.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Quotations2;
			}
			set
			{
				this._Quotations2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_RawMaterialCostProjection", Storage="_RawMaterialCostProjections", ThisKey="PlantId", OtherKey="PlantId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=45, EmitDefaultValue=false)]
		public EntitySet<RawMaterialCostProjection> RawMaterialCostProjections
		{
			get
			{
				if ((this.serializing 
							&& (this._RawMaterialCostProjections.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RawMaterialCostProjections;
			}
			set
			{
				this._RawMaterialCostProjections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Plant", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Plants.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Plants.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_Plant", Storage="_District", ThisKey="DistrictId", OtherKey="DistrictId", IsForeignKey=true)]
		public District District
		{
			get
			{
				return this._District.Entity;
			}
			set
			{
				District previousValue = this._District.Entity;
				if (((previousValue != value) 
							|| (this._District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._District.Entity = null;
						previousValue.Plants.Remove(this);
					}
					this._District.Entity = value;
					if ((value != null))
					{
						value.Plants.Add(this);
						this._DistrictId = value.DistrictId;
					}
					else
					{
						this._DistrictId = default(int);
					}
					this.SendPropertyChanged("District");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FSKPrice_Plant", Storage="_FSKPrice", ThisKey="FSKId", OtherKey="Id", IsForeignKey=true)]
		public FSKPrice FSKPrice
		{
			get
			{
				return this._FSKPrice.Entity;
			}
			set
			{
				FSKPrice previousValue = this._FSKPrice.Entity;
				if (((previousValue != value) 
							|| (this._FSKPrice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FSKPrice.Entity = null;
						previousValue.Plants.Remove(this);
					}
					this._FSKPrice.Entity = value;
					if ((value != null))
					{
						value.Plants.Add(this);
						this._FSKId = value.Id;
					}
					else
					{
						this._FSKId = default(Nullable<long>);
					}
					this.SendPropertyChanged("FSKPrice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdditionalProductPlants(AdditionalProductPlant entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_AdditionalProductPlants(AdditionalProductPlant entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void attach_AggregateProductPriceProjections(AggregateProductPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_AggregateProductPriceProjections(AggregateProductPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void attach_BlockProductPriceProjections(BlockProductPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_BlockProductPriceProjections(BlockProductPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void attach_ConcreteProductPlants(ConcreteProductPlant entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_ConcreteProductPlants(ConcreteProductPlant entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void attach_DailyPlantSummaries(DailyPlantSummary entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_DailyPlantSummaries(DailyPlantSummary entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void attach_MixFormulations(MixFormulation entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_MixFormulations(MixFormulation entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void attach_PlantBudgets(PlantBudget entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_PlantBudgets(PlantBudget entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void attach_PlantFinancialBudgets(PlantFinancialBudget entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_PlantFinancialBudgets(PlantFinancialBudget entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void attach_ProjectPlants(ProjectPlant entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_ProjectPlants(ProjectPlant entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void attach_ProjectProjections(ProjectProjection entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_ProjectProjections(ProjectProjection entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void attach_ProjectProjection2s(ProjectProjection2 entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_ProjectProjection2s(ProjectProjection2 entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void attach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void attach_Quotations1(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.AggregatePlant = this;
		}
		
		private void detach_Quotations1(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.AggregatePlant = null;
		}
		
		private void attach_Quotations2(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.BlockPlant = this;
		}
		
		private void detach_Quotations2(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.BlockPlant = null;
		}
		
		private void attach_RawMaterialCostProjections(RawMaterialCostProjection entity)
		{
			this.SendPropertyChanging();
			entity.Plant = this;
		}
		
		private void detach_RawMaterialCostProjections(RawMaterialCostProjection entity)
		{
			this.SendPropertyChanging();
			entity.Plant = null;
		}
		
		private void Initialize()
		{
			this._AdditionalProductPlants = new EntitySet<AdditionalProductPlant>(new Action<AdditionalProductPlant>(this.attach_AdditionalProductPlants), new Action<AdditionalProductPlant>(this.detach_AdditionalProductPlants));
			this._AggregateProductPriceProjections = new EntitySet<AggregateProductPriceProjection>(new Action<AggregateProductPriceProjection>(this.attach_AggregateProductPriceProjections), new Action<AggregateProductPriceProjection>(this.detach_AggregateProductPriceProjections));
			this._BlockProductPriceProjections = new EntitySet<BlockProductPriceProjection>(new Action<BlockProductPriceProjection>(this.attach_BlockProductPriceProjections), new Action<BlockProductPriceProjection>(this.detach_BlockProductPriceProjections));
			this._ConcreteProductPlants = new EntitySet<ConcreteProductPlant>(new Action<ConcreteProductPlant>(this.attach_ConcreteProductPlants), new Action<ConcreteProductPlant>(this.detach_ConcreteProductPlants));
			this._DailyPlantSummaries = new EntitySet<DailyPlantSummary>(new Action<DailyPlantSummary>(this.attach_DailyPlantSummaries), new Action<DailyPlantSummary>(this.detach_DailyPlantSummaries));
			this._MixFormulations = new EntitySet<MixFormulation>(new Action<MixFormulation>(this.attach_MixFormulations), new Action<MixFormulation>(this.detach_MixFormulations));
			this._PlantBudgets = new EntitySet<PlantBudget>(new Action<PlantBudget>(this.attach_PlantBudgets), new Action<PlantBudget>(this.detach_PlantBudgets));
			this._PlantFinancialBudgets = new EntitySet<PlantFinancialBudget>(new Action<PlantFinancialBudget>(this.attach_PlantFinancialBudgets), new Action<PlantFinancialBudget>(this.detach_PlantFinancialBudgets));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._ProjectPlants = new EntitySet<ProjectPlant>(new Action<ProjectPlant>(this.attach_ProjectPlants), new Action<ProjectPlant>(this.detach_ProjectPlants));
			this._ProjectProjections = new EntitySet<ProjectProjection>(new Action<ProjectProjection>(this.attach_ProjectProjections), new Action<ProjectProjection>(this.detach_ProjectProjections));
			this._ProjectProjection2s = new EntitySet<ProjectProjection2>(new Action<ProjectProjection2>(this.attach_ProjectProjection2s), new Action<ProjectProjection2>(this.detach_ProjectProjection2s));
			this._Quotations = new EntitySet<Quotation>(new Action<Quotation>(this.attach_Quotations), new Action<Quotation>(this.detach_Quotations));
			this._Quotations1 = new EntitySet<Quotation>(new Action<Quotation>(this.attach_Quotations1), new Action<Quotation>(this.detach_Quotations1));
			this._Quotations2 = new EntitySet<Quotation>(new Action<Quotation>(this.attach_Quotations2), new Action<Quotation>(this.detach_Quotations2));
			this._RawMaterialCostProjections = new EntitySet<RawMaterialCostProjection>(new Action<RawMaterialCostProjection>(this.attach_RawMaterialCostProjections), new Action<RawMaterialCostProjection>(this.detach_RawMaterialCostProjections));
			this._Company = default(EntityRef<Company>);
			this._District = default(EntityRef<District>);
			this._FSKPrice = default(EntityRef<FSKPrice>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlantBudget")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PlantBudget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlantBudgetId;
		
		private int _PlantId;
		
		private System.DateTime _BudgetDate;
		
		private System.Nullable<double> _Budget;
		
		private System.Nullable<double> _Trucks;
		
		private System.Nullable<double> _Ticketing;
		
		private System.Nullable<double> _Loading;
		
		private System.Nullable<double> _Tempering;
		
		private System.Nullable<double> _ToJob;
		
		private System.Nullable<double> _Wait;
		
		private System.Nullable<double> _Wash;
		
		private System.Nullable<double> _Unload;
		
		private System.Nullable<double> _FromJob;
		
		private System.Nullable<double> _CydHr;
		
		private System.Nullable<double> _AvgLoad;
		
		private System.Nullable<double> _StartUp;
		
		private System.Nullable<double> _Shutdown;
		
		private System.Nullable<double> _InYard;
		
		private System.Nullable<double> _FirstLoadOnTimePercent;
		
		private System.Nullable<double> _TrucksPercentOperable;
		
		private System.Nullable<double> _Accidents;
		
		private System.Nullable<double> _PlantIntrruptions;
		
		private System.Nullable<double> _TrucksDown;
		
		private System.Nullable<double> _BatchTolerance;
		
		private EntitySet<PlantBudgetMarketSegment> _PlantBudgetMarketSegments;
		
		private EntitySet<PlantBudgetSalesStaff> _PlantBudgetSalesStaffs;
		
		private EntityRef<Plant> _Plant;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlantBudgetIdChanging(int value);
    partial void OnPlantBudgetIdChanged();
    partial void OnPlantIdChanging(int value);
    partial void OnPlantIdChanged();
    partial void OnBudgetDateChanging(System.DateTime value);
    partial void OnBudgetDateChanged();
    partial void OnBudgetChanging(System.Nullable<double> value);
    partial void OnBudgetChanged();
    partial void OnTrucksChanging(System.Nullable<double> value);
    partial void OnTrucksChanged();
    partial void OnTicketingChanging(System.Nullable<double> value);
    partial void OnTicketingChanged();
    partial void OnLoadingChanging(System.Nullable<double> value);
    partial void OnLoadingChanged();
    partial void OnTemperingChanging(System.Nullable<double> value);
    partial void OnTemperingChanged();
    partial void OnToJobChanging(System.Nullable<double> value);
    partial void OnToJobChanged();
    partial void OnWaitChanging(System.Nullable<double> value);
    partial void OnWaitChanged();
    partial void OnWashChanging(System.Nullable<double> value);
    partial void OnWashChanged();
    partial void OnUnloadChanging(System.Nullable<double> value);
    partial void OnUnloadChanged();
    partial void OnFromJobChanging(System.Nullable<double> value);
    partial void OnFromJobChanged();
    partial void OnCydHrChanging(System.Nullable<double> value);
    partial void OnCydHrChanged();
    partial void OnAvgLoadChanging(System.Nullable<double> value);
    partial void OnAvgLoadChanged();
    partial void OnStartUpChanging(System.Nullable<double> value);
    partial void OnStartUpChanged();
    partial void OnShutdownChanging(System.Nullable<double> value);
    partial void OnShutdownChanged();
    partial void OnInYardChanging(System.Nullable<double> value);
    partial void OnInYardChanged();
    partial void OnFirstLoadOnTimePercentChanging(System.Nullable<double> value);
    partial void OnFirstLoadOnTimePercentChanged();
    partial void OnTrucksPercentOperableChanging(System.Nullable<double> value);
    partial void OnTrucksPercentOperableChanged();
    partial void OnAccidentsChanging(System.Nullable<double> value);
    partial void OnAccidentsChanged();
    partial void OnPlantInterruptionsChanging(System.Nullable<double> value);
    partial void OnPlantInterruptionsChanged();
    partial void OnTrucksDownChanging(System.Nullable<double> value);
    partial void OnTrucksDownChanged();
    partial void OnBatchToleranceChanging(System.Nullable<double> value);
    partial void OnBatchToleranceChanged();
    #endregion
		
		public PlantBudget()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantBudgetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlantBudgetId
		{
			get
			{
				return this._PlantBudgetId;
			}
			set
			{
				if ((this._PlantBudgetId != value))
				{
					this.OnPlantBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._PlantBudgetId = value;
					this.SendPropertyChanged("PlantBudgetId");
					this.OnPlantBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime BudgetDate
		{
			get
			{
				return this._BudgetDate;
			}
			set
			{
				if ((this._BudgetDate != value))
				{
					this.OnBudgetDateChanging(value);
					this.SendPropertyChanging();
					this._BudgetDate = value;
					this.SendPropertyChanged("BudgetDate");
					this.OnBudgetDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Budget", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<double> Budget
		{
			get
			{
				return this._Budget;
			}
			set
			{
				if ((this._Budget != value))
				{
					this.OnBudgetChanging(value);
					this.SendPropertyChanging();
					this._Budget = value;
					this.SendPropertyChanged("Budget");
					this.OnBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trucks", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<double> Trucks
		{
			get
			{
				return this._Trucks;
			}
			set
			{
				if ((this._Trucks != value))
				{
					this.OnTrucksChanging(value);
					this.SendPropertyChanging();
					this._Trucks = value;
					this.SendPropertyChanged("Trucks");
					this.OnTrucksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticketing", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<double> Ticketing
		{
			get
			{
				return this._Ticketing;
			}
			set
			{
				if ((this._Ticketing != value))
				{
					this.OnTicketingChanging(value);
					this.SendPropertyChanging();
					this._Ticketing = value;
					this.SendPropertyChanged("Ticketing");
					this.OnTicketingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loading", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<double> Loading
		{
			get
			{
				return this._Loading;
			}
			set
			{
				if ((this._Loading != value))
				{
					this.OnLoadingChanging(value);
					this.SendPropertyChanging();
					this._Loading = value;
					this.SendPropertyChanged("Loading");
					this.OnLoadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tempering", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<double> Tempering
		{
			get
			{
				return this._Tempering;
			}
			set
			{
				if ((this._Tempering != value))
				{
					this.OnTemperingChanging(value);
					this.SendPropertyChanging();
					this._Tempering = value;
					this.SendPropertyChanged("Tempering");
					this.OnTemperingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToJob", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<double> ToJob
		{
			get
			{
				return this._ToJob;
			}
			set
			{
				if ((this._ToJob != value))
				{
					this.OnToJobChanging(value);
					this.SendPropertyChanging();
					this._ToJob = value;
					this.SendPropertyChanged("ToJob");
					this.OnToJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wait", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<double> Wait
		{
			get
			{
				return this._Wait;
			}
			set
			{
				if ((this._Wait != value))
				{
					this.OnWaitChanging(value);
					this.SendPropertyChanging();
					this._Wait = value;
					this.SendPropertyChanged("Wait");
					this.OnWaitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wash", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<double> Wash
		{
			get
			{
				return this._Wash;
			}
			set
			{
				if ((this._Wash != value))
				{
					this.OnWashChanging(value);
					this.SendPropertyChanging();
					this._Wash = value;
					this.SendPropertyChanged("Wash");
					this.OnWashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unload", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<double> Unload
		{
			get
			{
				return this._Unload;
			}
			set
			{
				if ((this._Unload != value))
				{
					this.OnUnloadChanging(value);
					this.SendPropertyChanging();
					this._Unload = value;
					this.SendPropertyChanged("Unload");
					this.OnUnloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromJob", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<double> FromJob
		{
			get
			{
				return this._FromJob;
			}
			set
			{
				if ((this._FromJob != value))
				{
					this.OnFromJobChanging(value);
					this.SendPropertyChanging();
					this._FromJob = value;
					this.SendPropertyChanged("FromJob");
					this.OnFromJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CydHr", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<double> CydHr
		{
			get
			{
				return this._CydHr;
			}
			set
			{
				if ((this._CydHr != value))
				{
					this.OnCydHrChanging(value);
					this.SendPropertyChanging();
					this._CydHr = value;
					this.SendPropertyChanged("CydHr");
					this.OnCydHrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgLoad", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<double> AvgLoad
		{
			get
			{
				return this._AvgLoad;
			}
			set
			{
				if ((this._AvgLoad != value))
				{
					this.OnAvgLoadChanging(value);
					this.SendPropertyChanging();
					this._AvgLoad = value;
					this.SendPropertyChanged("AvgLoad");
					this.OnAvgLoadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUp", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<double> StartUp
		{
			get
			{
				return this._StartUp;
			}
			set
			{
				if ((this._StartUp != value))
				{
					this.OnStartUpChanging(value);
					this.SendPropertyChanging();
					this._StartUp = value;
					this.SendPropertyChanged("StartUp");
					this.OnStartUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Shutdown]", Storage="_Shutdown", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<double> Shutdown
		{
			get
			{
				return this._Shutdown;
			}
			set
			{
				if ((this._Shutdown != value))
				{
					this.OnShutdownChanging(value);
					this.SendPropertyChanging();
					this._Shutdown = value;
					this.SendPropertyChanged("Shutdown");
					this.OnShutdownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InYard", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<double> InYard
		{
			get
			{
				return this._InYard;
			}
			set
			{
				if ((this._InYard != value))
				{
					this.OnInYardChanging(value);
					this.SendPropertyChanging();
					this._InYard = value;
					this.SendPropertyChanged("InYard");
					this.OnInYardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLoadOnTimePercent", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<double> FirstLoadOnTimePercent
		{
			get
			{
				return this._FirstLoadOnTimePercent;
			}
			set
			{
				if ((this._FirstLoadOnTimePercent != value))
				{
					this.OnFirstLoadOnTimePercentChanging(value);
					this.SendPropertyChanging();
					this._FirstLoadOnTimePercent = value;
					this.SendPropertyChanged("FirstLoadOnTimePercent");
					this.OnFirstLoadOnTimePercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrucksPercentOperable", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<double> TrucksPercentOperable
		{
			get
			{
				return this._TrucksPercentOperable;
			}
			set
			{
				if ((this._TrucksPercentOperable != value))
				{
					this.OnTrucksPercentOperableChanging(value);
					this.SendPropertyChanging();
					this._TrucksPercentOperable = value;
					this.SendPropertyChanged("TrucksPercentOperable");
					this.OnTrucksPercentOperableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accidents", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<double> Accidents
		{
			get
			{
				return this._Accidents;
			}
			set
			{
				if ((this._Accidents != value))
				{
					this.OnAccidentsChanging(value);
					this.SendPropertyChanging();
					this._Accidents = value;
					this.SendPropertyChanged("Accidents");
					this.OnAccidentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantIntrruptions", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<double> PlantInterruptions
		{
			get
			{
				return this._PlantIntrruptions;
			}
			set
			{
				if ((this._PlantIntrruptions != value))
				{
					this.OnPlantInterruptionsChanging(value);
					this.SendPropertyChanging();
					this._PlantIntrruptions = value;
					this.SendPropertyChanged("PlantInterruptions");
					this.OnPlantInterruptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrucksDown", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<double> TrucksDown
		{
			get
			{
				return this._TrucksDown;
			}
			set
			{
				if ((this._TrucksDown != value))
				{
					this.OnTrucksDownChanging(value);
					this.SendPropertyChanging();
					this._TrucksDown = value;
					this.SendPropertyChanged("TrucksDown");
					this.OnTrucksDownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchTolerance", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public System.Nullable<double> BatchTolerance
		{
			get
			{
				return this._BatchTolerance;
			}
			set
			{
				if ((this._BatchTolerance != value))
				{
					this.OnBatchToleranceChanging(value);
					this.SendPropertyChanging();
					this._BatchTolerance = value;
					this.SendPropertyChanged("BatchTolerance");
					this.OnBatchToleranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlantBudget_PlantBudgetMarketSegment", Storage="_PlantBudgetMarketSegments", ThisKey="PlantBudgetId", OtherKey="PlantBudgetId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<PlantBudgetMarketSegment> PlantBudgetMarketSegments
		{
			get
			{
				if ((this.serializing 
							&& (this._PlantBudgetMarketSegments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlantBudgetMarketSegments;
			}
			set
			{
				this._PlantBudgetMarketSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlantBudget_PlantBudgetSalesStaff", Storage="_PlantBudgetSalesStaffs", ThisKey="PlantBudgetId", OtherKey="PlantBudgetId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<PlantBudgetSalesStaff> PlantBudgetSalesStaffs
		{
			get
			{
				if ((this.serializing 
							&& (this._PlantBudgetSalesStaffs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlantBudgetSalesStaffs;
			}
			set
			{
				this._PlantBudgetSalesStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_PlantBudget", Storage="_Plant", ThisKey="PlantId", OtherKey="PlantId", IsForeignKey=true)]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.PlantBudgets.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.PlantBudgets.Add(this);
						this._PlantId = value.PlantId;
					}
					else
					{
						this._PlantId = default(int);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlantBudgetMarketSegments(PlantBudgetMarketSegment entity)
		{
			this.SendPropertyChanging();
			entity.PlantBudget = this;
		}
		
		private void detach_PlantBudgetMarketSegments(PlantBudgetMarketSegment entity)
		{
			this.SendPropertyChanging();
			entity.PlantBudget = null;
		}
		
		private void attach_PlantBudgetSalesStaffs(PlantBudgetSalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.PlantBudget = this;
		}
		
		private void detach_PlantBudgetSalesStaffs(PlantBudgetSalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.PlantBudget = null;
		}
		
		private void Initialize()
		{
			this._PlantBudgetMarketSegments = new EntitySet<PlantBudgetMarketSegment>(new Action<PlantBudgetMarketSegment>(this.attach_PlantBudgetMarketSegments), new Action<PlantBudgetMarketSegment>(this.detach_PlantBudgetMarketSegments));
			this._PlantBudgetSalesStaffs = new EntitySet<PlantBudgetSalesStaff>(new Action<PlantBudgetSalesStaff>(this.attach_PlantBudgetSalesStaffs), new Action<PlantBudgetSalesStaff>(this.detach_PlantBudgetSalesStaffs));
			this._Plant = default(EntityRef<Plant>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlantBudgetMarketSegment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PlantBudgetMarketSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlantBudgetMarketSegmentId;
		
		private int _PlantBudgetId;
		
		private int _MarketSegmentId;
		
		private System.Nullable<short> _Percentage;
		
		private EntityRef<MarketSegment> _MarketSegment;
		
		private EntityRef<PlantBudget> _PlantBudget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlantBudgetMarketSegmentIdChanging(int value);
    partial void OnPlantBudgetMarketSegmentIdChanged();
    partial void OnPlantBudgetIdChanging(int value);
    partial void OnPlantBudgetIdChanged();
    partial void OnMarketSegmentIdChanging(int value);
    partial void OnMarketSegmentIdChanged();
    partial void OnPercentageChanging(System.Nullable<short> value);
    partial void OnPercentageChanged();
    #endregion
		
		public PlantBudgetMarketSegment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantBudgetMarketSegmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlantBudgetMarketSegmentId
		{
			get
			{
				return this._PlantBudgetMarketSegmentId;
			}
			set
			{
				if ((this._PlantBudgetMarketSegmentId != value))
				{
					this.OnPlantBudgetMarketSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._PlantBudgetMarketSegmentId = value;
					this.SendPropertyChanged("PlantBudgetMarketSegmentId");
					this.OnPlantBudgetMarketSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantBudgetId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PlantBudgetId
		{
			get
			{
				return this._PlantBudgetId;
			}
			set
			{
				if ((this._PlantBudgetId != value))
				{
					if (this._PlantBudget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._PlantBudgetId = value;
					this.SendPropertyChanged("PlantBudgetId");
					this.OnPlantBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketSegmentId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int MarketSegmentId
		{
			get
			{
				return this._MarketSegmentId;
			}
			set
			{
				if ((this._MarketSegmentId != value))
				{
					if (this._MarketSegment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarketSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._MarketSegmentId = value;
					this.SendPropertyChanged("MarketSegmentId");
					this.OnMarketSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<short> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarketSegment_PlantBudgetMarketSegment", Storage="_MarketSegment", ThisKey="MarketSegmentId", OtherKey="MarketSegmentId", IsForeignKey=true)]
		public MarketSegment MarketSegment
		{
			get
			{
				return this._MarketSegment.Entity;
			}
			set
			{
				MarketSegment previousValue = this._MarketSegment.Entity;
				if (((previousValue != value) 
							|| (this._MarketSegment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MarketSegment.Entity = null;
						previousValue.PlantBudgetMarketSegments.Remove(this);
					}
					this._MarketSegment.Entity = value;
					if ((value != null))
					{
						value.PlantBudgetMarketSegments.Add(this);
						this._MarketSegmentId = value.MarketSegmentId;
					}
					else
					{
						this._MarketSegmentId = default(int);
					}
					this.SendPropertyChanged("MarketSegment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlantBudget_PlantBudgetMarketSegment", Storage="_PlantBudget", ThisKey="PlantBudgetId", OtherKey="PlantBudgetId", IsForeignKey=true)]
		public PlantBudget PlantBudget
		{
			get
			{
				return this._PlantBudget.Entity;
			}
			set
			{
				PlantBudget previousValue = this._PlantBudget.Entity;
				if (((previousValue != value) 
							|| (this._PlantBudget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlantBudget.Entity = null;
						previousValue.PlantBudgetMarketSegments.Remove(this);
					}
					this._PlantBudget.Entity = value;
					if ((value != null))
					{
						value.PlantBudgetMarketSegments.Add(this);
						this._PlantBudgetId = value.PlantBudgetId;
					}
					else
					{
						this._PlantBudgetId = default(int);
					}
					this.SendPropertyChanged("PlantBudget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._MarketSegment = default(EntityRef<MarketSegment>);
			this._PlantBudget = default(EntityRef<PlantBudget>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlantBudgetSalesStaff")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PlantBudgetSalesStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlantBudgetSalesStaffId;
		
		private int _PlantBudgetId;
		
		private int _SalesStaffId;
		
		private System.Nullable<short> _Percentage;
		
		private EntityRef<PlantBudget> _PlantBudget;
		
		private EntityRef<SalesStaff> _SalesStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlantBudgetSalesStaffIdChanging(int value);
    partial void OnPlantBudgetSalesStaffIdChanged();
    partial void OnPlantBudgetIdChanging(int value);
    partial void OnPlantBudgetIdChanged();
    partial void OnSalesStaffIdChanging(int value);
    partial void OnSalesStaffIdChanged();
    partial void OnPercentageChanging(System.Nullable<short> value);
    partial void OnPercentageChanged();
    #endregion
		
		public PlantBudgetSalesStaff()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantBudgetSalesStaffId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlantBudgetSalesStaffId
		{
			get
			{
				return this._PlantBudgetSalesStaffId;
			}
			set
			{
				if ((this._PlantBudgetSalesStaffId != value))
				{
					this.OnPlantBudgetSalesStaffIdChanging(value);
					this.SendPropertyChanging();
					this._PlantBudgetSalesStaffId = value;
					this.SendPropertyChanged("PlantBudgetSalesStaffId");
					this.OnPlantBudgetSalesStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantBudgetId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PlantBudgetId
		{
			get
			{
				return this._PlantBudgetId;
			}
			set
			{
				if ((this._PlantBudgetId != value))
				{
					if (this._PlantBudget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._PlantBudgetId = value;
					this.SendPropertyChanged("PlantBudgetId");
					this.OnPlantBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesStaffId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SalesStaffId
		{
			get
			{
				return this._SalesStaffId;
			}
			set
			{
				if ((this._SalesStaffId != value))
				{
					if (this._SalesStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesStaffIdChanging(value);
					this.SendPropertyChanging();
					this._SalesStaffId = value;
					this.SendPropertyChanged("SalesStaffId");
					this.OnSalesStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<short> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlantBudget_PlantBudgetSalesStaff", Storage="_PlantBudget", ThisKey="PlantBudgetId", OtherKey="PlantBudgetId", IsForeignKey=true)]
		public PlantBudget PlantBudget
		{
			get
			{
				return this._PlantBudget.Entity;
			}
			set
			{
				PlantBudget previousValue = this._PlantBudget.Entity;
				if (((previousValue != value) 
							|| (this._PlantBudget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlantBudget.Entity = null;
						previousValue.PlantBudgetSalesStaffs.Remove(this);
					}
					this._PlantBudget.Entity = value;
					if ((value != null))
					{
						value.PlantBudgetSalesStaffs.Add(this);
						this._PlantBudgetId = value.PlantBudgetId;
					}
					else
					{
						this._PlantBudgetId = default(int);
					}
					this.SendPropertyChanged("PlantBudget");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesStaff_PlantBudgetSalesStaff", Storage="_SalesStaff", ThisKey="SalesStaffId", OtherKey="SalesStaffId", IsForeignKey=true)]
		public SalesStaff SalesStaff
		{
			get
			{
				return this._SalesStaff.Entity;
			}
			set
			{
				SalesStaff previousValue = this._SalesStaff.Entity;
				if (((previousValue != value) 
							|| (this._SalesStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesStaff.Entity = null;
						previousValue.PlantBudgetSalesStaffs.Remove(this);
					}
					this._SalesStaff.Entity = value;
					if ((value != null))
					{
						value.PlantBudgetSalesStaffs.Add(this);
						this._SalesStaffId = value.SalesStaffId;
					}
					else
					{
						this._SalesStaffId = default(int);
					}
					this.SendPropertyChanged("SalesStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._PlantBudget = default(EntityRef<PlantBudget>);
			this._SalesStaff = default(EntityRef<SalesStaff>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlantFinancialBudget")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PlantFinancialBudget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _PlantId;
		
		private System.Nullable<decimal> _Revenue;
		
		private System.Nullable<decimal> _MaterialCost;
		
		private System.Nullable<decimal> _Profit;
		
		private System.Nullable<double> _DeliveryVariable;
		
		private System.Nullable<double> _PlantVariable;
		
		private System.Nullable<double> _DeliveryFixed;
		
		private System.Nullable<double> _PlantFixed;
		
		private System.Nullable<double> _SGA;
		
		private int _Month;
		
		private int _YEAR;
		
		private EntityRef<Plant> _Plant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPlantIdChanging(int value);
    partial void OnPlantIdChanged();
    partial void OnRevenueChanging(System.Nullable<decimal> value);
    partial void OnRevenueChanged();
    partial void OnMaterialCostChanging(System.Nullable<decimal> value);
    partial void OnMaterialCostChanged();
    partial void OnProfitChanging(System.Nullable<decimal> value);
    partial void OnProfitChanged();
    partial void OnDeliveryVariableChanging(System.Nullable<double> value);
    partial void OnDeliveryVariableChanged();
    partial void OnPlantVariableChanging(System.Nullable<double> value);
    partial void OnPlantVariableChanged();
    partial void OnDeliveryFixedChanging(System.Nullable<double> value);
    partial void OnDeliveryFixedChanged();
    partial void OnPlantFixedChanging(System.Nullable<double> value);
    partial void OnPlantFixedChanged();
    partial void OnSGAChanging(System.Nullable<double> value);
    partial void OnSGAChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    #endregion
		
		public PlantFinancialBudget()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revenue", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<decimal> Revenue
		{
			get
			{
				return this._Revenue;
			}
			set
			{
				if ((this._Revenue != value))
				{
					this.OnRevenueChanging(value);
					this.SendPropertyChanging();
					this._Revenue = value;
					this.SendPropertyChanged("Revenue");
					this.OnRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCost", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> MaterialCost
		{
			get
			{
				return this._MaterialCost;
			}
			set
			{
				if ((this._MaterialCost != value))
				{
					this.OnMaterialCostChanging(value);
					this.SendPropertyChanging();
					this._MaterialCost = value;
					this.SendPropertyChanged("MaterialCost");
					this.OnMaterialCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryVariable", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<double> DeliveryVariable
		{
			get
			{
				return this._DeliveryVariable;
			}
			set
			{
				if ((this._DeliveryVariable != value))
				{
					this.OnDeliveryVariableChanging(value);
					this.SendPropertyChanging();
					this._DeliveryVariable = value;
					this.SendPropertyChanged("DeliveryVariable");
					this.OnDeliveryVariableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantVariable", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<double> PlantVariable
		{
			get
			{
				return this._PlantVariable;
			}
			set
			{
				if ((this._PlantVariable != value))
				{
					this.OnPlantVariableChanging(value);
					this.SendPropertyChanging();
					this._PlantVariable = value;
					this.SendPropertyChanged("PlantVariable");
					this.OnPlantVariableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryFixed", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<double> DeliveryFixed
		{
			get
			{
				return this._DeliveryFixed;
			}
			set
			{
				if ((this._DeliveryFixed != value))
				{
					this.OnDeliveryFixedChanging(value);
					this.SendPropertyChanging();
					this._DeliveryFixed = value;
					this.SendPropertyChanged("DeliveryFixed");
					this.OnDeliveryFixedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantFixed", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<double> PlantFixed
		{
			get
			{
				return this._PlantFixed;
			}
			set
			{
				if ((this._PlantFixed != value))
				{
					this.OnPlantFixedChanging(value);
					this.SendPropertyChanging();
					this._PlantFixed = value;
					this.SendPropertyChanged("PlantFixed");
					this.OnPlantFixedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SGA", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<double> SGA
		{
			get
			{
				return this._SGA;
			}
			set
			{
				if ((this._SGA != value))
				{
					this.OnSGAChanging(value);
					this.SendPropertyChanging();
					this._SGA = value;
					this.SendPropertyChanged("SGA");
					this.OnSGAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YEAR", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public int Year
		{
			get
			{
				return this._YEAR;
			}
			set
			{
				if ((this._YEAR != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._YEAR = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_PlantFinancialBudget", Storage="_Plant", ThisKey="PlantId", OtherKey="PlantId", IsForeignKey=true)]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.PlantFinancialBudgets.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.PlantFinancialBudgets.Add(this);
						this._PlantId = value.PlantId;
					}
					else
					{
						this._PlantId = default(int);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Plant = default(EntityRef<Plant>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectId;
		
		private string _Name;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _ZipCode;
		
		private string _CustomerRefName;
		
		private System.Nullable<int> _ProjectStatusId;
		
		private System.Nullable<int> _ConcretePlantId;
		
		private System.Nullable<int> _ContractorId;
		
		private System.Nullable<int> _CustomerId;
		
		private System.Nullable<int> _MarketSegmentId;
		
		private System.Nullable<int> _Valuation;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _InitialProjection;
		
		private string _Mix;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Spread;
		
		private System.Nullable<int> _Volume;
		
		private System.Nullable<decimal> _Profit;
		
		private System.Nullable<System.DateTime> _BidDate;
		
		private System.Nullable<int> _ToJobMinutes;
		
		private System.Nullable<int> _WashMinutes;
		
		private System.Nullable<int> _ReturnMinutes;
		
		private System.Nullable<int> _WinningCompetitorId;
		
		private System.Nullable<int> _ReasonLostId;
		
		private System.Nullable<decimal> _PriceLost;
		
		private string _NotesOnLoss;
		
		private System.Nullable<System.DateTime> _WonLostDate;
		
		private System.Nullable<bool> _ExcludeFromReports;
		
		private System.Nullable<int> _Unload;
		
		private System.Nullable<int> _WaitOnJob;
		
		private System.Nullable<double> _DistanceToJob;
		
		private System.Nullable<double> _AverageLoadSize;
		
		private string _DeliveryInstructions;
		
		private string _UDF1;
		
		private string _UDF2;
		
		private string _ProjectRefId;
		
		private System.Nullable<System.DateTime> _LastEditTime;
		
		private System.Nullable<System.DateTime> _ProjectionEditTime;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private System.Nullable<decimal> _SackPrice;
		
		private System.Nullable<decimal> _Contribution;
		
		private System.Nullable<decimal> _AggregateFreight;
		
		private System.Nullable<decimal> _BlockFreight;
		
		private System.Nullable<decimal> _AggProductPrice;
		
		private System.Nullable<decimal> _BlockProductPrice;
		
		private System.Nullable<long> _BackupPlantId;
		
		private EntitySet<Notification> _Notifications;
		
		private EntitySet<ProjectBidder> _ProjectBidders;
		
		private EntitySet<ProjectCompetitor> _ProjectCompetitors;
		
		private EntitySet<ProjectNote> _ProjectNotes;
		
		private EntitySet<ProjectPlant> _ProjectPlants;
		
		private EntitySet<ProjectProjection> _ProjectProjections;
		
		private EntitySet<ProjectProjection2> _ProjectProjection2s;
		
		private EntitySet<ProjectQCRequirement> _ProjectQCRequirements;
		
		private EntitySet<ProjectSalesStaff> _ProjectSalesStaffs;
		
		private EntitySet<Quotation> _Quotations;
		
		private EntityRef<Contractor> _Contractor;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<MarketSegment> _MarketSegment;
		
		private EntityRef<Plant> _Plant;
		
		private EntityRef<ProjectStatus> _ProjectStatus;
		
		private EntityRef<ReasonsForLoss> _ReasonsForLoss;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnCustomerRefNameChanging(string value);
    partial void OnCustomerRefNameChanged();
    partial void OnProjectStatusIdChanging(System.Nullable<int> value);
    partial void OnProjectStatusIdChanged();
    partial void OnConcretePlantIdChanging(System.Nullable<int> value);
    partial void OnConcretePlantIdChanged();
    partial void OnContractorIdChanging(System.Nullable<int> value);
    partial void OnContractorIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnMarketSegmentIdChanging(System.Nullable<int> value);
    partial void OnMarketSegmentIdChanged();
    partial void OnValuationChanging(System.Nullable<int> value);
    partial void OnValuationChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnInitialProjectionChanging(System.Nullable<int> value);
    partial void OnInitialProjectionChanged();
    partial void OnMixChanging(string value);
    partial void OnMixChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnSpreadChanging(System.Nullable<decimal> value);
    partial void OnSpreadChanged();
    partial void OnVolumeChanging(System.Nullable<int> value);
    partial void OnVolumeChanged();
    partial void OnProfitChanging(System.Nullable<decimal> value);
    partial void OnProfitChanged();
    partial void OnBidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBidDateChanged();
    partial void OnToJobMinutesChanging(System.Nullable<int> value);
    partial void OnToJobMinutesChanged();
    partial void OnWashMinutesChanging(System.Nullable<int> value);
    partial void OnWashMinutesChanged();
    partial void OnReturnMinutesChanging(System.Nullable<int> value);
    partial void OnReturnMinutesChanged();
    partial void OnWinningCompetitorIdChanging(System.Nullable<int> value);
    partial void OnWinningCompetitorIdChanged();
    partial void OnReasonLostIdChanging(System.Nullable<int> value);
    partial void OnReasonLostIdChanged();
    partial void OnPriceLostChanging(System.Nullable<decimal> value);
    partial void OnPriceLostChanged();
    partial void OnNotesOnLossChanging(string value);
    partial void OnNotesOnLossChanged();
    partial void OnWonLostDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWonLostDateChanged();
    partial void OnExcludeFromReportsChanging(System.Nullable<bool> value);
    partial void OnExcludeFromReportsChanged();
    partial void OnUnloadChanging(System.Nullable<int> value);
    partial void OnUnloadChanged();
    partial void OnWaitOnJobChanging(System.Nullable<int> value);
    partial void OnWaitOnJobChanged();
    partial void OnDistanceToJobChanging(System.Nullable<double> value);
    partial void OnDistanceToJobChanged();
    partial void OnAverageLoadSizeChanging(System.Nullable<double> value);
    partial void OnAverageLoadSizeChanged();
    partial void OnDeliveryInstructionsChanging(string value);
    partial void OnDeliveryInstructionsChanged();
    partial void OnUDF1Changing(string value);
    partial void OnUDF1Changed();
    partial void OnUDF2Changing(string value);
    partial void OnUDF2Changed();
    partial void OnProjectRefIdChanging(string value);
    partial void OnProjectRefIdChanged();
    partial void OnLastEditTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEditTimeChanged();
    partial void OnProjectionEditTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectionEditTimeChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnSackPriceChanging(System.Nullable<decimal> value);
    partial void OnSackPriceChanged();
    partial void OnContributionChanging(System.Nullable<decimal> value);
    partial void OnContributionChanged();
    partial void OnAggregateFreightChanging(System.Nullable<decimal> value);
    partial void OnAggregateFreightChanged();
    partial void OnBlockFreightChanging(System.Nullable<decimal> value);
    partial void OnBlockFreightChanged();
    partial void OnAggProductPriceChanging(System.Nullable<decimal> value);
    partial void OnAggProductPriceChanged();
    partial void OnBlockProductPriceChanging(System.Nullable<decimal> value);
    partial void OnBlockProductPriceChanged();
    partial void OnBackupPlantIdChanging(System.Nullable<long> value);
    partial void OnBackupPlantIdChanged();
    #endregion
		
		public Project()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerRefName", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string CustomerRefName
		{
			get
			{
				return this._CustomerRefName;
			}
			set
			{
				if ((this._CustomerRefName != value))
				{
					this.OnCustomerRefNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerRefName = value;
					this.SendPropertyChanged("CustomerRefName");
					this.OnCustomerRefNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectStatusId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> ProjectStatusId
		{
			get
			{
				return this._ProjectStatusId;
			}
			set
			{
				if ((this._ProjectStatusId != value))
				{
					if (this._ProjectStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectStatusIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectStatusId = value;
					this.SendPropertyChanged("ProjectStatusId");
					this.OnProjectStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcretePlantId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> ConcretePlantId
		{
			get
			{
				return this._ConcretePlantId;
			}
			set
			{
				if ((this._ConcretePlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConcretePlantIdChanging(value);
					this.SendPropertyChanging();
					this._ConcretePlantId = value;
					this.SendPropertyChanged("ConcretePlantId");
					this.OnConcretePlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> ContractorId
		{
			get
			{
				return this._ContractorId;
			}
			set
			{
				if ((this._ContractorId != value))
				{
					if (this._Contractor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractorIdChanging(value);
					this.SendPropertyChanging();
					this._ContractorId = value;
					this.SendPropertyChanged("ContractorId");
					this.OnContractorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketSegmentId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> MarketSegmentId
		{
			get
			{
				return this._MarketSegmentId;
			}
			set
			{
				if ((this._MarketSegmentId != value))
				{
					if (this._MarketSegment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarketSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._MarketSegmentId = value;
					this.SendPropertyChanged("MarketSegmentId");
					this.OnMarketSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valuation", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> Valuation
		{
			get
			{
				return this._Valuation;
			}
			set
			{
				if ((this._Valuation != value))
				{
					this.OnValuationChanging(value);
					this.SendPropertyChanging();
					this._Valuation = value;
					this.SendPropertyChanged("Valuation");
					this.OnValuationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialProjection", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<int> InitialProjection
		{
			get
			{
				return this._InitialProjection;
			}
			set
			{
				if ((this._InitialProjection != value))
				{
					this.OnInitialProjectionChanging(value);
					this.SendPropertyChanging();
					this._InitialProjection = value;
					this.SendPropertyChanged("InitialProjection");
					this.OnInitialProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mix", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string Mix
		{
			get
			{
				return this._Mix;
			}
			set
			{
				if ((this._Mix != value))
				{
					this.OnMixChanging(value);
					this.SendPropertyChanging();
					this._Mix = value;
					this.SendPropertyChanged("Mix");
					this.OnMixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spread", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<decimal> Spread
		{
			get
			{
				return this._Spread;
			}
			set
			{
				if ((this._Spread != value))
				{
					this.OnSpreadChanging(value);
					this.SendPropertyChanging();
					this._Spread = value;
					this.SendPropertyChanged("Spread");
					this.OnSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<decimal> Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BidDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<System.DateTime> BidDate
		{
			get
			{
				return this._BidDate;
			}
			set
			{
				if ((this._BidDate != value))
				{
					this.OnBidDateChanging(value);
					this.SendPropertyChanging();
					this._BidDate = value;
					this.SendPropertyChanged("BidDate");
					this.OnBidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToJobMinutes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<int> ToJobMinutes
		{
			get
			{
				return this._ToJobMinutes;
			}
			set
			{
				if ((this._ToJobMinutes != value))
				{
					this.OnToJobMinutesChanging(value);
					this.SendPropertyChanging();
					this._ToJobMinutes = value;
					this.SendPropertyChanged("ToJobMinutes");
					this.OnToJobMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WashMinutes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public System.Nullable<int> WashMinutes
		{
			get
			{
				return this._WashMinutes;
			}
			set
			{
				if ((this._WashMinutes != value))
				{
					this.OnWashMinutesChanging(value);
					this.SendPropertyChanging();
					this._WashMinutes = value;
					this.SendPropertyChanged("WashMinutes");
					this.OnWashMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnMinutes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<int> ReturnMinutes
		{
			get
			{
				return this._ReturnMinutes;
			}
			set
			{
				if ((this._ReturnMinutes != value))
				{
					this.OnReturnMinutesChanging(value);
					this.SendPropertyChanging();
					this._ReturnMinutes = value;
					this.SendPropertyChanged("ReturnMinutes");
					this.OnReturnMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinningCompetitorId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<int> WinningCompetitorId
		{
			get
			{
				return this._WinningCompetitorId;
			}
			set
			{
				if ((this._WinningCompetitorId != value))
				{
					this.OnWinningCompetitorIdChanging(value);
					this.SendPropertyChanging();
					this._WinningCompetitorId = value;
					this.SendPropertyChanged("WinningCompetitorId");
					this.OnWinningCompetitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonLostId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<int> ReasonLostId
		{
			get
			{
				return this._ReasonLostId;
			}
			set
			{
				if ((this._ReasonLostId != value))
				{
					if (this._ReasonsForLoss.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReasonLostIdChanging(value);
					this.SendPropertyChanging();
					this._ReasonLostId = value;
					this.SendPropertyChanged("ReasonLostId");
					this.OnReasonLostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceLost", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<decimal> PriceLost
		{
			get
			{
				return this._PriceLost;
			}
			set
			{
				if ((this._PriceLost != value))
				{
					this.OnPriceLostChanging(value);
					this.SendPropertyChanging();
					this._PriceLost = value;
					this.SendPropertyChanged("PriceLost");
					this.OnPriceLostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotesOnLoss", DbType="VarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public string NotesOnLoss
		{
			get
			{
				return this._NotesOnLoss;
			}
			set
			{
				if ((this._NotesOnLoss != value))
				{
					this.OnNotesOnLossChanging(value);
					this.SendPropertyChanging();
					this._NotesOnLoss = value;
					this.SendPropertyChanged("NotesOnLoss");
					this.OnNotesOnLossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WonLostDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<System.DateTime> WonLostDate
		{
			get
			{
				return this._WonLostDate;
			}
			set
			{
				if ((this._WonLostDate != value))
				{
					this.OnWonLostDateChanging(value);
					this.SendPropertyChanging();
					this._WonLostDate = value;
					this.SendPropertyChanged("WonLostDate");
					this.OnWonLostDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludeFromReports", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public System.Nullable<bool> ExcludeFromReports
		{
			get
			{
				return this._ExcludeFromReports;
			}
			set
			{
				if ((this._ExcludeFromReports != value))
				{
					this.OnExcludeFromReportsChanging(value);
					this.SendPropertyChanging();
					this._ExcludeFromReports = value;
					this.SendPropertyChanged("ExcludeFromReports");
					this.OnExcludeFromReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unload", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public System.Nullable<int> Unload
		{
			get
			{
				return this._Unload;
			}
			set
			{
				if ((this._Unload != value))
				{
					this.OnUnloadChanging(value);
					this.SendPropertyChanging();
					this._Unload = value;
					this.SendPropertyChanged("Unload");
					this.OnUnloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitOnJob", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public System.Nullable<int> WaitOnJob
		{
			get
			{
				return this._WaitOnJob;
			}
			set
			{
				if ((this._WaitOnJob != value))
				{
					this.OnWaitOnJobChanging(value);
					this.SendPropertyChanging();
					this._WaitOnJob = value;
					this.SendPropertyChanged("WaitOnJob");
					this.OnWaitOnJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceToJob", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public System.Nullable<double> DistanceToJob
		{
			get
			{
				return this._DistanceToJob;
			}
			set
			{
				if ((this._DistanceToJob != value))
				{
					this.OnDistanceToJobChanging(value);
					this.SendPropertyChanging();
					this._DistanceToJob = value;
					this.SendPropertyChanged("DistanceToJob");
					this.OnDistanceToJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageLoadSize", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public System.Nullable<double> AverageLoadSize
		{
			get
			{
				return this._AverageLoadSize;
			}
			set
			{
				if ((this._AverageLoadSize != value))
				{
					this.OnAverageLoadSizeChanging(value);
					this.SendPropertyChanging();
					this._AverageLoadSize = value;
					this.SendPropertyChanged("AverageLoadSize");
					this.OnAverageLoadSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryInstructions", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36)]
		public string DeliveryInstructions
		{
			get
			{
				return this._DeliveryInstructions;
			}
			set
			{
				if ((this._DeliveryInstructions != value))
				{
					this.OnDeliveryInstructionsChanging(value);
					this.SendPropertyChanging();
					this._DeliveryInstructions = value;
					this.SendPropertyChanged("DeliveryInstructions");
					this.OnDeliveryInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF1", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37)]
		public string UDF1
		{
			get
			{
				return this._UDF1;
			}
			set
			{
				if ((this._UDF1 != value))
				{
					this.OnUDF1Changing(value);
					this.SendPropertyChanging();
					this._UDF1 = value;
					this.SendPropertyChanged("UDF1");
					this.OnUDF1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF2", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38)]
		public string UDF2
		{
			get
			{
				return this._UDF2;
			}
			set
			{
				if ((this._UDF2 != value))
				{
					this.OnUDF2Changing(value);
					this.SendPropertyChanging();
					this._UDF2 = value;
					this.SendPropertyChanged("UDF2");
					this.OnUDF2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectRefId", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39)]
		public string ProjectRefId
		{
			get
			{
				return this._ProjectRefId;
			}
			set
			{
				if ((this._ProjectRefId != value))
				{
					this.OnProjectRefIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectRefId = value;
					this.SendPropertyChanged("ProjectRefId");
					this.OnProjectRefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40)]
		public System.Nullable<System.DateTime> LastEditTime
		{
			get
			{
				return this._LastEditTime;
			}
			set
			{
				if ((this._LastEditTime != value))
				{
					this.OnLastEditTimeChanging(value);
					this.SendPropertyChanging();
					this._LastEditTime = value;
					this.SendPropertyChanged("LastEditTime");
					this.OnLastEditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectionEditTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41)]
		public System.Nullable<System.DateTime> ProjectionEditTime
		{
			get
			{
				return this._ProjectionEditTime;
			}
			set
			{
				if ((this._ProjectionEditTime != value))
				{
					this.OnProjectionEditTimeChanging(value);
					this.SendPropertyChanging();
					this._ProjectionEditTime = value;
					this.SendPropertyChanged("ProjectionEditTime");
					this.OnProjectionEditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=42)]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=43)]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SackPrice", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=44)]
		public System.Nullable<decimal> SackPrice
		{
			get
			{
				return this._SackPrice;
			}
			set
			{
				if ((this._SackPrice != value))
				{
					this.OnSackPriceChanging(value);
					this.SendPropertyChanging();
					this._SackPrice = value;
					this.SendPropertyChanged("SackPrice");
					this.OnSackPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contribution", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=45)]
		public System.Nullable<decimal> Contribution
		{
			get
			{
				return this._Contribution;
			}
			set
			{
				if ((this._Contribution != value))
				{
					this.OnContributionChanging(value);
					this.SendPropertyChanging();
					this._Contribution = value;
					this.SendPropertyChanged("Contribution");
					this.OnContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregateFreight", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=46)]
		public System.Nullable<decimal> AggregateFreight
		{
			get
			{
				return this._AggregateFreight;
			}
			set
			{
				if ((this._AggregateFreight != value))
				{
					this.OnAggregateFreightChanging(value);
					this.SendPropertyChanging();
					this._AggregateFreight = value;
					this.SendPropertyChanged("AggregateFreight");
					this.OnAggregateFreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockFreight", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=47)]
		public System.Nullable<decimal> BlockFreight
		{
			get
			{
				return this._BlockFreight;
			}
			set
			{
				if ((this._BlockFreight != value))
				{
					this.OnBlockFreightChanging(value);
					this.SendPropertyChanging();
					this._BlockFreight = value;
					this.SendPropertyChanged("BlockFreight");
					this.OnBlockFreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggProductPrice", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=48)]
		public System.Nullable<decimal> AggProductPrice
		{
			get
			{
				return this._AggProductPrice;
			}
			set
			{
				if ((this._AggProductPrice != value))
				{
					this.OnAggProductPriceChanging(value);
					this.SendPropertyChanging();
					this._AggProductPrice = value;
					this.SendPropertyChanged("AggProductPrice");
					this.OnAggProductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockProductPrice", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=49)]
		public System.Nullable<decimal> BlockProductPrice
		{
			get
			{
				return this._BlockProductPrice;
			}
			set
			{
				if ((this._BlockProductPrice != value))
				{
					this.OnBlockProductPriceChanging(value);
					this.SendPropertyChanging();
					this._BlockProductPrice = value;
					this.SendPropertyChanged("BlockProductPrice");
					this.OnBlockProductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackupPlantId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=50)]
		public System.Nullable<long> BackupPlantId
		{
			get
			{
				return this._BackupPlantId;
			}
			set
			{
				if ((this._BackupPlantId != value))
				{
					this.OnBackupPlantIdChanging(value);
					this.SendPropertyChanging();
					this._BackupPlantId = value;
					this.SendPropertyChanged("BackupPlantId");
					this.OnBackupPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Notification", Storage="_Notifications", ThisKey="ProjectId", OtherKey="ProjectId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=51, EmitDefaultValue=false)]
		public EntitySet<Notification> Notifications
		{
			get
			{
				if ((this.serializing 
							&& (this._Notifications.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Notifications;
			}
			set
			{
				this._Notifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectBidder", Storage="_ProjectBidders", ThisKey="ProjectId", OtherKey="ProjectId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=52, EmitDefaultValue=false)]
		public EntitySet<ProjectBidder> ProjectBidders
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectBidders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectBidders;
			}
			set
			{
				this._ProjectBidders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectCompetitor", Storage="_ProjectCompetitors", ThisKey="ProjectId", OtherKey="ProjectId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=53, EmitDefaultValue=false)]
		public EntitySet<ProjectCompetitor> ProjectCompetitors
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectCompetitors.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectCompetitors;
			}
			set
			{
				this._ProjectCompetitors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectNote", Storage="_ProjectNotes", ThisKey="ProjectId", OtherKey="ProjectId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=54, EmitDefaultValue=false)]
		public EntitySet<ProjectNote> ProjectNotes
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectNotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectNotes;
			}
			set
			{
				this._ProjectNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectPlant", Storage="_ProjectPlants", ThisKey="ProjectId", OtherKey="ProjectId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=55, EmitDefaultValue=false)]
		public EntitySet<ProjectPlant> ProjectPlants
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectPlants.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectPlants;
			}
			set
			{
				this._ProjectPlants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectProjection", Storage="_ProjectProjections", ThisKey="ProjectId", OtherKey="ProjectId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=56, EmitDefaultValue=false)]
		public EntitySet<ProjectProjection> ProjectProjections
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectProjections.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectProjections;
			}
			set
			{
				this._ProjectProjections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectProjection2", Storage="_ProjectProjection2s", ThisKey="ProjectId", OtherKey="ProjectId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=57, EmitDefaultValue=false)]
		public EntitySet<ProjectProjection2> ProjectProjection2s
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectProjection2s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectProjection2s;
			}
			set
			{
				this._ProjectProjection2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectQCRequirement", Storage="_ProjectQCRequirements", ThisKey="ProjectId", OtherKey="ProjectId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=58, EmitDefaultValue=false)]
		public EntitySet<ProjectQCRequirement> ProjectQCRequirements
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectQCRequirements.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectQCRequirements;
			}
			set
			{
				this._ProjectQCRequirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectSalesStaff", Storage="_ProjectSalesStaffs", ThisKey="ProjectId", OtherKey="ProjectId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=59, EmitDefaultValue=false)]
		public EntitySet<ProjectSalesStaff> ProjectSalesStaffs
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectSalesStaffs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectSalesStaffs;
			}
			set
			{
				this._ProjectSalesStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Quotation", Storage="_Quotations", ThisKey="ProjectId", OtherKey="ProjectId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=60, EmitDefaultValue=false)]
		public EntitySet<Quotation> Quotations
		{
			get
			{
				if ((this.serializing 
							&& (this._Quotations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Quotations;
			}
			set
			{
				this._Quotations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_Project", Storage="_Contractor", ThisKey="ContractorId", OtherKey="ContractorId", IsForeignKey=true)]
		public Contractor Contractor
		{
			get
			{
				return this._Contractor.Entity;
			}
			set
			{
				Contractor previousValue = this._Contractor.Entity;
				if (((previousValue != value) 
							|| (this._Contractor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contractor.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Contractor.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ContractorId = value.ContractorId;
					}
					else
					{
						this._ContractorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contractor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Project", Storage="_Customer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarketSegment_Project", Storage="_MarketSegment", ThisKey="MarketSegmentId", OtherKey="MarketSegmentId", IsForeignKey=true)]
		public MarketSegment MarketSegment
		{
			get
			{
				return this._MarketSegment.Entity;
			}
			set
			{
				MarketSegment previousValue = this._MarketSegment.Entity;
				if (((previousValue != value) 
							|| (this._MarketSegment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MarketSegment.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._MarketSegment.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._MarketSegmentId = value.MarketSegmentId;
					}
					else
					{
						this._MarketSegmentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MarketSegment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_Project", Storage="_Plant", ThisKey="ConcretePlantId", OtherKey="PlantId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ConcretePlantId = value.PlantId;
					}
					else
					{
						this._ConcretePlantId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectStatus_Project", Storage="_ProjectStatus", ThisKey="ProjectStatusId", OtherKey="ProjectStatusId", IsForeignKey=true)]
		public ProjectStatus ProjectStatus
		{
			get
			{
				return this._ProjectStatus.Entity;
			}
			set
			{
				ProjectStatus previousValue = this._ProjectStatus.Entity;
				if (((previousValue != value) 
							|| (this._ProjectStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectStatus.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._ProjectStatus.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ProjectStatusId = value.ProjectStatusId;
					}
					else
					{
						this._ProjectStatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProjectStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReasonsForLoss_Project", Storage="_ReasonsForLoss", ThisKey="ReasonLostId", OtherKey="ReasonLostId", IsForeignKey=true)]
		public ReasonsForLoss ReasonsForLoss
		{
			get
			{
				return this._ReasonsForLoss.Entity;
			}
			set
			{
				ReasonsForLoss previousValue = this._ReasonsForLoss.Entity;
				if (((previousValue != value) 
							|| (this._ReasonsForLoss.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReasonsForLoss.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._ReasonsForLoss.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ReasonLostId = value.ReasonLostId;
					}
					else
					{
						this._ReasonLostId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ReasonsForLoss");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProjectBidders(ProjectBidder entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectBidders(ProjectBidder entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProjectCompetitors(ProjectCompetitor entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectCompetitors(ProjectCompetitor entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProjectNotes(ProjectNote entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectNotes(ProjectNote entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProjectPlants(ProjectPlant entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectPlants(ProjectPlant entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProjectProjections(ProjectProjection entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectProjections(ProjectProjection entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProjectProjection2s(ProjectProjection2 entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectProjection2s(ProjectProjection2 entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProjectQCRequirements(ProjectQCRequirement entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectQCRequirements(ProjectQCRequirement entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProjectSalesStaffs(ProjectSalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectSalesStaffs(ProjectSalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void Initialize()
		{
			this._Notifications = new EntitySet<Notification>(new Action<Notification>(this.attach_Notifications), new Action<Notification>(this.detach_Notifications));
			this._ProjectBidders = new EntitySet<ProjectBidder>(new Action<ProjectBidder>(this.attach_ProjectBidders), new Action<ProjectBidder>(this.detach_ProjectBidders));
			this._ProjectCompetitors = new EntitySet<ProjectCompetitor>(new Action<ProjectCompetitor>(this.attach_ProjectCompetitors), new Action<ProjectCompetitor>(this.detach_ProjectCompetitors));
			this._ProjectNotes = new EntitySet<ProjectNote>(new Action<ProjectNote>(this.attach_ProjectNotes), new Action<ProjectNote>(this.detach_ProjectNotes));
			this._ProjectPlants = new EntitySet<ProjectPlant>(new Action<ProjectPlant>(this.attach_ProjectPlants), new Action<ProjectPlant>(this.detach_ProjectPlants));
			this._ProjectProjections = new EntitySet<ProjectProjection>(new Action<ProjectProjection>(this.attach_ProjectProjections), new Action<ProjectProjection>(this.detach_ProjectProjections));
			this._ProjectProjection2s = new EntitySet<ProjectProjection2>(new Action<ProjectProjection2>(this.attach_ProjectProjection2s), new Action<ProjectProjection2>(this.detach_ProjectProjection2s));
			this._ProjectQCRequirements = new EntitySet<ProjectQCRequirement>(new Action<ProjectQCRequirement>(this.attach_ProjectQCRequirements), new Action<ProjectQCRequirement>(this.detach_ProjectQCRequirements));
			this._ProjectSalesStaffs = new EntitySet<ProjectSalesStaff>(new Action<ProjectSalesStaff>(this.attach_ProjectSalesStaffs), new Action<ProjectSalesStaff>(this.detach_ProjectSalesStaffs));
			this._Quotations = new EntitySet<Quotation>(new Action<Quotation>(this.attach_Quotations), new Action<Quotation>(this.detach_Quotations));
			this._Contractor = default(EntityRef<Contractor>);
			this._Customer = default(EntityRef<Customer>);
			this._MarketSegment = default(EntityRef<MarketSegment>);
			this._Plant = default(EntityRef<Plant>);
			this._ProjectStatus = default(EntityRef<ProjectStatus>);
			this._ReasonsForLoss = default(EntityRef<ReasonsForLoss>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectBidder")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProjectBidder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProjectId;
		
		private int _CustomerId;
		
		private string _Notes;
		
		private System.Guid _UserId;
		
		private System.Nullable<System.DateTime> _CreatedTime;
		
		private System.Nullable<System.DateTime> _LastEditedTime;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnCreatedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedTimeChanged();
    partial void OnLastEditedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEditedTimeChanged();
    #endregion
		
		public ProjectBidder()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> CreatedTime
		{
			get
			{
				return this._CreatedTime;
			}
			set
			{
				if ((this._CreatedTime != value))
				{
					this.OnCreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedTime = value;
					this.SendPropertyChanged("CreatedTime");
					this.OnCreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditedTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> LastEditedTime
		{
			get
			{
				return this._LastEditedTime;
			}
			set
			{
				if ((this._LastEditedTime != value))
				{
					this.OnLastEditedTimeChanging(value);
					this.SendPropertyChanging();
					this._LastEditedTime = value;
					this.SendPropertyChanged("LastEditedTime");
					this.OnLastEditedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_ProjectBidder", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.ProjectBidders.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.ProjectBidders.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ProjectBidder", Storage="_Customer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ProjectBidders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ProjectBidders.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectBidder", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectBidders.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectBidders.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._Customer = default(EntityRef<Customer>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectCompetitor")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProjectCompetitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectCompetitorId;
		
		private int _ProjectId;
		
		private int _CompetitorId;
		
		private System.Nullable<decimal> _Price;
		
		private EntityRef<Competitor> _Competitor;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectCompetitorIdChanging(int value);
    partial void OnProjectCompetitorIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnCompetitorIdChanging(int value);
    partial void OnCompetitorIdChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    #endregion
		
		public ProjectCompetitor()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCompetitorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProjectCompetitorId
		{
			get
			{
				return this._ProjectCompetitorId;
			}
			set
			{
				if ((this._ProjectCompetitorId != value))
				{
					this.OnProjectCompetitorIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectCompetitorId = value;
					this.SendPropertyChanged("ProjectCompetitorId");
					this.OnProjectCompetitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitorId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CompetitorId
		{
			get
			{
				return this._CompetitorId;
			}
			set
			{
				if ((this._CompetitorId != value))
				{
					if (this._Competitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitorIdChanging(value);
					this.SendPropertyChanging();
					this._CompetitorId = value;
					this.SendPropertyChanged("CompetitorId");
					this.OnCompetitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Competitor_ProjectCompetitor", Storage="_Competitor", ThisKey="CompetitorId", OtherKey="CompetitorId", IsForeignKey=true)]
		public Competitor Competitor
		{
			get
			{
				return this._Competitor.Entity;
			}
			set
			{
				Competitor previousValue = this._Competitor.Entity;
				if (((previousValue != value) 
							|| (this._Competitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Competitor.Entity = null;
						previousValue.ProjectCompetitors.Remove(this);
					}
					this._Competitor.Entity = value;
					if ((value != null))
					{
						value.ProjectCompetitors.Add(this);
						this._CompetitorId = value.CompetitorId;
					}
					else
					{
						this._CompetitorId = default(int);
					}
					this.SendPropertyChanged("Competitor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectCompetitor", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectCompetitors.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectCompetitors.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Competitor = default(EntityRef<Competitor>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectNote")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProjectNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectNoteId;
		
		private System.Guid _UserId;
		
		private int _ProjectId;
		
		private string _NoteText;
		
		private System.DateTime _DatePosted;
		
		private string _FileName;
		
		private string _FileContentype;
		
		private string _FileSize;
		
		private string _FileKey;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectNoteIdChanging(int value);
    partial void OnProjectNoteIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnNoteTextChanging(string value);
    partial void OnNoteTextChanged();
    partial void OnDatePostedChanging(System.DateTime value);
    partial void OnDatePostedChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileContentypeChanging(string value);
    partial void OnFileContentypeChanged();
    partial void OnFileSizeChanging(string value);
    partial void OnFileSizeChanged();
    partial void OnFileKeyChanging(string value);
    partial void OnFileKeyChanged();
    #endregion
		
		public ProjectNote()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectNoteId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProjectNoteId
		{
			get
			{
				return this._ProjectNoteId;
			}
			set
			{
				if ((this._ProjectNoteId != value))
				{
					this.OnProjectNoteIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectNoteId = value;
					this.SendPropertyChanged("ProjectNoteId");
					this.OnProjectNoteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteText", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string NoteText
		{
			get
			{
				return this._NoteText;
			}
			set
			{
				if ((this._NoteText != value))
				{
					this.OnNoteTextChanging(value);
					this.SendPropertyChanging();
					this._NoteText = value;
					this.SendPropertyChanged("NoteText");
					this.OnNoteTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePosted", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime DatePosted
		{
			get
			{
				return this._DatePosted;
			}
			set
			{
				if ((this._DatePosted != value))
				{
					this.OnDatePostedChanging(value);
					this.SendPropertyChanging();
					this._DatePosted = value;
					this.SendPropertyChanged("DatePosted");
					this.OnDatePostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContentype", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string FileContentype
		{
			get
			{
				return this._FileContentype;
			}
			set
			{
				if ((this._FileContentype != value))
				{
					this.OnFileContentypeChanging(value);
					this.SendPropertyChanging();
					this._FileContentype = value;
					this.SendPropertyChanged("FileContentype");
					this.OnFileContentypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this.OnFileSizeChanging(value);
					this.SendPropertyChanging();
					this._FileSize = value;
					this.SendPropertyChanged("FileSize");
					this.OnFileSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileKey", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string FileKey
		{
			get
			{
				return this._FileKey;
			}
			set
			{
				if ((this._FileKey != value))
				{
					this.OnFileKeyChanging(value);
					this.SendPropertyChanging();
					this._FileKey = value;
					this.SendPropertyChanged("FileKey");
					this.OnFileKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_ProjectNote", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.ProjectNotes.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.ProjectNotes.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectNote", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectNotes.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectNotes.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectPlant")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProjectPlant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectPlantId;
		
		private int _ProjectId;
		
		private int _PlantId;
		
		private System.Nullable<int> _Volume;
		
		private EntityRef<Plant> _Plant;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectPlantIdChanging(int value);
    partial void OnProjectPlantIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnPlantIdChanging(int value);
    partial void OnPlantIdChanged();
    partial void OnVolumeChanging(System.Nullable<int> value);
    partial void OnVolumeChanged();
    #endregion
		
		public ProjectPlant()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectPlantId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProjectPlantId
		{
			get
			{
				return this._ProjectPlantId;
			}
			set
			{
				if ((this._ProjectPlantId != value))
				{
					this.OnProjectPlantIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectPlantId = value;
					this.SendPropertyChanged("ProjectPlantId");
					this.OnProjectPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_ProjectPlant", Storage="_Plant", ThisKey="PlantId", OtherKey="PlantId", IsForeignKey=true)]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.ProjectPlants.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.ProjectPlants.Add(this);
						this._PlantId = value.PlantId;
					}
					else
					{
						this._PlantId = default(int);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectPlant", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectPlants.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectPlants.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Plant = default(EntityRef<Plant>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectProjection")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProjectProjection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectProjectionId;
		
		private int _ProjectId;
		
		private System.DateTime _ProjectionDate;
		
		private System.Nullable<int> _Projection;
		
		private System.Nullable<int> _Actual;
		
		private System.Nullable<int> _PlantId;
		
		private EntityRef<Plant> _Plant;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectProjectionIdChanging(int value);
    partial void OnProjectProjectionIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnProjectionDateChanging(System.DateTime value);
    partial void OnProjectionDateChanged();
    partial void OnProjectionChanging(System.Nullable<int> value);
    partial void OnProjectionChanged();
    partial void OnActualChanging(System.Nullable<int> value);
    partial void OnActualChanged();
    partial void OnPlantIdChanging(System.Nullable<int> value);
    partial void OnPlantIdChanged();
    #endregion
		
		public ProjectProjection()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectProjectionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProjectProjectionId
		{
			get
			{
				return this._ProjectProjectionId;
			}
			set
			{
				if ((this._ProjectProjectionId != value))
				{
					this.OnProjectProjectionIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectProjectionId = value;
					this.SendPropertyChanged("ProjectProjectionId");
					this.OnProjectProjectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectionDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime ProjectionDate
		{
			get
			{
				return this._ProjectionDate;
			}
			set
			{
				if ((this._ProjectionDate != value))
				{
					this.OnProjectionDateChanging(value);
					this.SendPropertyChanging();
					this._ProjectionDate = value;
					this.SendPropertyChanged("ProjectionDate");
					this.OnProjectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projection", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> Projection
		{
			get
			{
				return this._Projection;
			}
			set
			{
				if ((this._Projection != value))
				{
					this.OnProjectionChanging(value);
					this.SendPropertyChanging();
					this._Projection = value;
					this.SendPropertyChanged("Projection");
					this.OnProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> Actual
		{
			get
			{
				return this._Actual;
			}
			set
			{
				if ((this._Actual != value))
				{
					this.OnActualChanging(value);
					this.SendPropertyChanging();
					this._Actual = value;
					this.SendPropertyChanged("Actual");
					this.OnActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_ProjectProjection", Storage="_Plant", ThisKey="PlantId", OtherKey="PlantId", IsForeignKey=true)]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.ProjectProjections.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.ProjectProjections.Add(this);
						this._PlantId = value.PlantId;
					}
					else
					{
						this._PlantId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectProjection", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectProjections.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectProjections.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Plant = default(EntityRef<Plant>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectProjection2")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProjectProjection2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectProjectionId;
		
		private int _ProjectId;
		
		private System.DateTime _ProjectionDate;
		
		private System.Nullable<int> _Projection;
		
		private System.Nullable<int> _Actual;
		
		private System.Nullable<int> _PlantId;
		
		private EntityRef<Plant> _Plant;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectProjectionIdChanging(int value);
    partial void OnProjectProjectionIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnProjectionDateChanging(System.DateTime value);
    partial void OnProjectionDateChanged();
    partial void OnProjectionChanging(System.Nullable<int> value);
    partial void OnProjectionChanged();
    partial void OnActualChanging(System.Nullable<int> value);
    partial void OnActualChanged();
    partial void OnPlantIdChanging(System.Nullable<int> value);
    partial void OnPlantIdChanged();
    #endregion
		
		public ProjectProjection2()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectProjectionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProjectProjectionId
		{
			get
			{
				return this._ProjectProjectionId;
			}
			set
			{
				if ((this._ProjectProjectionId != value))
				{
					this.OnProjectProjectionIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectProjectionId = value;
					this.SendPropertyChanged("ProjectProjectionId");
					this.OnProjectProjectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectionDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime ProjectionDate
		{
			get
			{
				return this._ProjectionDate;
			}
			set
			{
				if ((this._ProjectionDate != value))
				{
					this.OnProjectionDateChanging(value);
					this.SendPropertyChanging();
					this._ProjectionDate = value;
					this.SendPropertyChanged("ProjectionDate");
					this.OnProjectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projection", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> Projection
		{
			get
			{
				return this._Projection;
			}
			set
			{
				if ((this._Projection != value))
				{
					this.OnProjectionChanging(value);
					this.SendPropertyChanging();
					this._Projection = value;
					this.SendPropertyChanged("Projection");
					this.OnProjectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> Actual
		{
			get
			{
				return this._Actual;
			}
			set
			{
				if ((this._Actual != value))
				{
					this.OnActualChanging(value);
					this.SendPropertyChanging();
					this._Actual = value;
					this.SendPropertyChanged("Actual");
					this.OnActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_ProjectProjection2", Storage="_Plant", ThisKey="PlantId", OtherKey="PlantId", IsForeignKey=true)]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.ProjectProjection2s.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.ProjectProjection2s.Add(this);
						this._PlantId = value.PlantId;
					}
					else
					{
						this._PlantId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectProjection2", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectProjection2s.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectProjection2s.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Plant = default(EntityRef<Plant>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectQCRequirement")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProjectQCRequirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _ProjectId;
		
		private long _QCRequirementId;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<QC_Requirement> _QC_Requirement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnQCRequirementIdChanging(long value);
    partial void OnQCRequirementIdChanged();
    #endregion
		
		public ProjectQCRequirement()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QCRequirementId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long QCRequirementId
		{
			get
			{
				return this._QCRequirementId;
			}
			set
			{
				if ((this._QCRequirementId != value))
				{
					if (this._QC_Requirement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQCRequirementIdChanging(value);
					this.SendPropertyChanging();
					this._QCRequirementId = value;
					this.SendPropertyChanged("QCRequirementId");
					this.OnQCRequirementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectQCRequirement", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectQCRequirements.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectQCRequirements.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QC_Requirement_ProjectQCRequirement", Storage="_QC_Requirement", ThisKey="QCRequirementId", OtherKey="Id", IsForeignKey=true)]
		public QC_Requirement QC_Requirement
		{
			get
			{
				return this._QC_Requirement.Entity;
			}
			set
			{
				QC_Requirement previousValue = this._QC_Requirement.Entity;
				if (((previousValue != value) 
							|| (this._QC_Requirement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QC_Requirement.Entity = null;
						previousValue.ProjectQCRequirements.Remove(this);
					}
					this._QC_Requirement.Entity = value;
					if ((value != null))
					{
						value.ProjectQCRequirements.Add(this);
						this._QCRequirementId = value.Id;
					}
					else
					{
						this._QCRequirementId = default(long);
					}
					this.SendPropertyChanged("QC_Requirement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Project = default(EntityRef<Project>);
			this._QC_Requirement = default(EntityRef<QC_Requirement>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectSalesStaff")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProjectSalesStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectSalesStaffId;
		
		private int _ProjectId;
		
		private int _SalesStaffId;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<SalesStaff> _SalesStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectSalesStaffIdChanging(int value);
    partial void OnProjectSalesStaffIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnSalesStaffIdChanging(int value);
    partial void OnSalesStaffIdChanged();
    #endregion
		
		public ProjectSalesStaff()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectSalesStaffId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProjectSalesStaffId
		{
			get
			{
				return this._ProjectSalesStaffId;
			}
			set
			{
				if ((this._ProjectSalesStaffId != value))
				{
					this.OnProjectSalesStaffIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectSalesStaffId = value;
					this.SendPropertyChanged("ProjectSalesStaffId");
					this.OnProjectSalesStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesStaffId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SalesStaffId
		{
			get
			{
				return this._SalesStaffId;
			}
			set
			{
				if ((this._SalesStaffId != value))
				{
					if (this._SalesStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesStaffIdChanging(value);
					this.SendPropertyChanging();
					this._SalesStaffId = value;
					this.SendPropertyChanged("SalesStaffId");
					this.OnSalesStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectSalesStaff", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectSalesStaffs.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectSalesStaffs.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesStaff_ProjectSalesStaff", Storage="_SalesStaff", ThisKey="SalesStaffId", OtherKey="SalesStaffId", IsForeignKey=true)]
		public SalesStaff SalesStaff
		{
			get
			{
				return this._SalesStaff.Entity;
			}
			set
			{
				SalesStaff previousValue = this._SalesStaff.Entity;
				if (((previousValue != value) 
							|| (this._SalesStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesStaff.Entity = null;
						previousValue.ProjectSalesStaffs.Remove(this);
					}
					this._SalesStaff.Entity = value;
					if ((value != null))
					{
						value.ProjectSalesStaffs.Add(this);
						this._SalesStaffId = value.SalesStaffId;
					}
					else
					{
						this._SalesStaffId = default(int);
					}
					this.SendPropertyChanged("SalesStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Project = default(EntityRef<Project>);
			this._SalesStaff = default(EntityRef<SalesStaff>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectStatus")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProjectStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectStatusId;
		
		private int _CompanyId;
		
		private string _Name;
		
		private short _StatusType;
		
		private int _SortOrder;
		
		private bool _Active;
		
		private string _DispatchId;
		
		private System.Nullable<bool> _Synced;
		
		private System.Nullable<bool> _IncludeOnForecastPage;
		
		private System.Nullable<bool> _TreatAsInactiveForPipelinePage;
		
		private EntitySet<Project> _Projects;
		
		private EntityRef<Company> _Company;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectStatusIdChanging(int value);
    partial void OnProjectStatusIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusTypeChanging(short value);
    partial void OnStatusTypeChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnSyncedChanging(System.Nullable<bool> value);
    partial void OnSyncedChanged();
    partial void OnIncludeOnForecastPageChanging(System.Nullable<bool> value);
    partial void OnIncludeOnForecastPageChanged();
    partial void OnTreatAsInactiveForPipelinePageChanging(System.Nullable<bool> value);
    partial void OnTreatAsInactiveForPipelinePageChanged();
    #endregion
		
		public ProjectStatus()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectStatusId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProjectStatusId
		{
			get
			{
				return this._ProjectStatusId;
			}
			set
			{
				if ((this._ProjectStatusId != value))
				{
					this.OnProjectStatusIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectStatusId = value;
					this.SendPropertyChanged("ProjectStatusId");
					this.OnProjectStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusType", DbType="SmallInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public short StatusType
		{
			get
			{
				return this._StatusType;
			}
			set
			{
				if ((this._StatusType != value))
				{
					this.OnStatusTypeChanging(value);
					this.SendPropertyChanging();
					this._StatusType = value;
					this.SendPropertyChanged("StatusType");
					this.OnStatusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synced", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> Synced
		{
			get
			{
				return this._Synced;
			}
			set
			{
				if ((this._Synced != value))
				{
					this.OnSyncedChanging(value);
					this.SendPropertyChanging();
					this._Synced = value;
					this.SendPropertyChanged("Synced");
					this.OnSyncedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeOnForecastPage", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> IncludeOnForecastPage
		{
			get
			{
				return this._IncludeOnForecastPage;
			}
			set
			{
				if ((this._IncludeOnForecastPage != value))
				{
					this.OnIncludeOnForecastPageChanging(value);
					this.SendPropertyChanging();
					this._IncludeOnForecastPage = value;
					this.SendPropertyChanged("IncludeOnForecastPage");
					this.OnIncludeOnForecastPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatAsInactiveForPipelinePage", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> TreatAsInactiveForPipelinePage
		{
			get
			{
				return this._TreatAsInactiveForPipelinePage;
			}
			set
			{
				if ((this._TreatAsInactiveForPipelinePage != value))
				{
					this.OnTreatAsInactiveForPipelinePageChanging(value);
					this.SendPropertyChanging();
					this._TreatAsInactiveForPipelinePage = value;
					this.SendPropertyChanged("TreatAsInactiveForPipelinePage");
					this.OnTreatAsInactiveForPipelinePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectStatus_Project", Storage="_Projects", ThisKey="ProjectStatusId", OtherKey="ProjectStatusId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Project> Projects
		{
			get
			{
				if ((this.serializing 
							&& (this._Projects.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ProjectStatus", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.ProjectStatus.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.ProjectStatus.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProjectStatus = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProjectStatus = null;
		}
		
		private void Initialize()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QC_Requirements")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class QC_Requirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<ProjectQCRequirement> _ProjectQCRequirements;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public QC_Requirement()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QC_Requirement_ProjectQCRequirement", Storage="_ProjectQCRequirements", ThisKey="Id", OtherKey="QCRequirementId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<ProjectQCRequirement> ProjectQCRequirements
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectQCRequirements.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectQCRequirements;
			}
			set
			{
				this._ProjectQCRequirements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectQCRequirements(ProjectQCRequirement entity)
		{
			this.SendPropertyChanging();
			entity.QC_Requirement = this;
		}
		
		private void detach_ProjectQCRequirements(ProjectQCRequirement entity)
		{
			this.SendPropertyChanging();
			entity.QC_Requirement = null;
		}
		
		private void Initialize()
		{
			this._ProjectQCRequirements = new EntitySet<ProjectQCRequirement>(new Action<ProjectQCRequirement>(this.attach_ProjectQCRequirements), new Action<ProjectQCRequirement>(this.detach_ProjectQCRequirements));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quotation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Quotation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<int> _CustomerId;
		
		private System.Nullable<int> _CustomerContactId;
		
		private System.Nullable<int> _ProjectId;
		
		private System.Nullable<int> _PlantId;
		
		private System.Guid _UserId;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _Awarded;
		
		private System.Nullable<System.DateTime> _QuoteDate;
		
		private System.Nullable<System.DateTime> _AcceptanceExpirationDate;
		
		private System.Nullable<System.DateTime> _QuoteExpirationDate;
		
		private System.Nullable<System.DateTime> _PriceIncrease1;
		
		private System.Nullable<decimal> _PriceIncreaseAmount1;
		
		private System.Nullable<System.DateTime> _PriceIncrease2;
		
		private System.Nullable<decimal> _PriceIncreaseAmount2;
		
		private System.Nullable<System.DateTime> _PriceIncrease3;
		
		private System.Nullable<decimal> _PriceIncreaseAmount3;
		
		private string _PrivateNotes;
		
		private string _PublicNotes;
		
		private System.Nullable<long> _TaxCodeId;
		
		private string _TaxExemptReason;
		
		private string _Status;
		
		private System.Nullable<decimal> _Spread;
		
		private System.Nullable<decimal> _Contribution;
		
		private System.Nullable<decimal> _Profit;
		
		private System.Nullable<double> _CYDHr;
		
		private System.Nullable<double> _TotalVolume;
		
		private System.Nullable<decimal> _TotalRevenue;
		
		private System.Nullable<decimal> _TotalProfit;
		
		private System.Nullable<decimal> _AvgSellingPrice;
		
		private System.Nullable<double> _AvgLoad;
		
		private System.Nullable<double> _AvgUnload;
		
		private System.Nullable<System.Guid> _ApprovedBy;
		
		private System.Nullable<System.DateTime> _ApprovalDate;
		
		private System.Nullable<long> _FskPriceId;
		
		private System.Nullable<decimal> _FskBasePrice;
		
		private System.Nullable<int> _SalesStaffId;
		
		private string _DispatchId;
		
		private System.Nullable<bool> _Synced;
		
		private System.Nullable<System.DateTime> _LastPushedAt;
		
		private string _PushedBy;
		
		private System.Nullable<System.DateTime> _PricingMonth;
		
		private System.Nullable<bool> _EnableEdit;
		
		private System.Nullable<System.DateTime> _ProjectFormNotificationDate;
		
		private System.Nullable<System.DateTime> _PDFGeneratedDate;
		
		private System.Nullable<int> _AggregatePlantId;
		
		private System.Nullable<int> _BlockPlantId;
		
		private System.Nullable<bool> _ConcreteEnabled;
		
		private System.Nullable<bool> _AggregateEnabled;
		
		private System.Nullable<bool> _BlockEnabled;
		
		private string _Disclaimers;
		
		private string _Disclosures;
		
		private string _TermsAndConditions;
		
		private System.Nullable<double> _AdjustMixPrice;
		
		private System.Nullable<System.DateTime> _BiddingDate;
		
		private System.Nullable<bool> _IncludeAsLettingDate;
		
		private System.Nullable<System.Guid> _EditingEnabledBy;
		
		private System.Nullable<System.DateTime> _EditingEnabledDate;
		
		private System.Nullable<bool> _CustomerNumberOnPDF;
		
		private EntitySet<Notification> _Notifications;
		
		private EntitySet<QuotationAddon> _QuotationAddons;
		
		private EntitySet<QuotationAggregate> _QuotationAggregates;
		
		private EntitySet<QuotationAggregateAddon> _QuotationAggregateAddons;
		
		private EntitySet<QuotationBlock> _QuotationBlocks;
		
		private EntitySet<QuotationBlockAddon> _QuotationBlockAddons;
		
		private EntitySet<QuotationFormSetting> _QuotationFormSettings;
		
		private EntitySet<QuotationMix> _QuotationMixes;
		
		private EntitySet<QuoteAuditLog> _QuoteAuditLogs;
		
		private EntityRef<Plant> _Plant;
		
		private EntityRef<Plant> _AggregatePlant;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<CustomerContact> _CustomerContact;
		
		private EntityRef<FSKPrice> _FSKPrice;
		
		private EntityRef<Plant> _BlockPlant;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<SalesStaff> _SalesStaff;
		
		private EntityRef<TaxCode> _TaxCode;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnCustomerContactIdChanging(System.Nullable<int> value);
    partial void OnCustomerContactIdChanged();
    partial void OnProjectIdChanging(System.Nullable<int> value);
    partial void OnProjectIdChanged();
    partial void OnPlantIdChanging(System.Nullable<int> value);
    partial void OnPlantIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnAwardedChanging(System.Nullable<bool> value);
    partial void OnAwardedChanged();
    partial void OnQuoteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQuoteDateChanged();
    partial void OnAcceptanceExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptanceExpirationDateChanged();
    partial void OnQuoteExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQuoteExpirationDateChanged();
    partial void OnPriceIncrease1Changing(System.Nullable<System.DateTime> value);
    partial void OnPriceIncrease1Changed();
    partial void OnPriceIncreaseAmount1Changing(System.Nullable<decimal> value);
    partial void OnPriceIncreaseAmount1Changed();
    partial void OnPriceIncrease2Changing(System.Nullable<System.DateTime> value);
    partial void OnPriceIncrease2Changed();
    partial void OnPriceIncreaseAmount2Changing(System.Nullable<decimal> value);
    partial void OnPriceIncreaseAmount2Changed();
    partial void OnPriceIncrease3Changing(System.Nullable<System.DateTime> value);
    partial void OnPriceIncrease3Changed();
    partial void OnPriceIncreaseAmount3Changing(System.Nullable<decimal> value);
    partial void OnPriceIncreaseAmount3Changed();
    partial void OnPrivateNotesChanging(string value);
    partial void OnPrivateNotesChanged();
    partial void OnPublicNotesChanging(string value);
    partial void OnPublicNotesChanged();
    partial void OnTaxCodeIdChanging(System.Nullable<long> value);
    partial void OnTaxCodeIdChanged();
    partial void OnTaxExemptReasonChanging(string value);
    partial void OnTaxExemptReasonChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnSpreadChanging(System.Nullable<decimal> value);
    partial void OnSpreadChanged();
    partial void OnContributionChanging(System.Nullable<decimal> value);
    partial void OnContributionChanged();
    partial void OnProfitChanging(System.Nullable<decimal> value);
    partial void OnProfitChanged();
    partial void OnCYDHrChanging(System.Nullable<double> value);
    partial void OnCYDHrChanged();
    partial void OnTotalVolumeChanging(System.Nullable<double> value);
    partial void OnTotalVolumeChanged();
    partial void OnTotalRevenueChanging(System.Nullable<decimal> value);
    partial void OnTotalRevenueChanged();
    partial void OnTotalProfitChanging(System.Nullable<decimal> value);
    partial void OnTotalProfitChanged();
    partial void OnAvgSellingPriceChanging(System.Nullable<decimal> value);
    partial void OnAvgSellingPriceChanged();
    partial void OnAvgLoadChanging(System.Nullable<double> value);
    partial void OnAvgLoadChanged();
    partial void OnAvgUnloadChanging(System.Nullable<double> value);
    partial void OnAvgUnloadChanged();
    partial void OnApprovedByChanging(System.Nullable<System.Guid> value);
    partial void OnApprovedByChanged();
    partial void OnApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDateChanged();
    partial void OnFskPriceIdChanging(System.Nullable<long> value);
    partial void OnFskPriceIdChanged();
    partial void OnFskBasePriceChanging(System.Nullable<decimal> value);
    partial void OnFskBasePriceChanged();
    partial void OnSalesStaffIdChanging(System.Nullable<int> value);
    partial void OnSalesStaffIdChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnSyncedChanging(System.Nullable<bool> value);
    partial void OnSyncedChanged();
    partial void OnLastPushedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPushedAtChanged();
    partial void OnPushedByChanging(string value);
    partial void OnPushedByChanged();
    partial void OnPricingMonthChanging(System.Nullable<System.DateTime> value);
    partial void OnPricingMonthChanged();
    partial void OnEnableEditChanging(System.Nullable<bool> value);
    partial void OnEnableEditChanged();
    partial void OnProjectFormNotificationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectFormNotificationDateChanged();
    partial void OnPDFGeneratedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPDFGeneratedDateChanged();
    partial void OnAggregatePlantIdChanging(System.Nullable<int> value);
    partial void OnAggregatePlantIdChanged();
    partial void OnBlockPlantIdChanging(System.Nullable<int> value);
    partial void OnBlockPlantIdChanged();
    partial void OnConcreteEnabledChanging(System.Nullable<bool> value);
    partial void OnConcreteEnabledChanged();
    partial void OnAggregateEnabledChanging(System.Nullable<bool> value);
    partial void OnAggregateEnabledChanged();
    partial void OnBlockEnabledChanging(System.Nullable<bool> value);
    partial void OnBlockEnabledChanged();
    partial void OnDisclaimersChanging(string value);
    partial void OnDisclaimersChanged();
    partial void OnDisclosuresChanging(string value);
    partial void OnDisclosuresChanged();
    partial void OnTermsAndConditionsChanging(string value);
    partial void OnTermsAndConditionsChanged();
    partial void OnAdjustMixPriceChanging(System.Nullable<double> value);
    partial void OnAdjustMixPriceChanged();
    partial void OnBiddingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBiddingDateChanged();
    partial void OnIncludeAsLettingDateChanging(System.Nullable<bool> value);
    partial void OnIncludeAsLettingDateChanged();
    partial void OnEditingEnabledByChanging(System.Nullable<System.Guid> value);
    partial void OnEditingEnabledByChanged();
    partial void OnEditingEnabledDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEditingEnabledDateChanged();
    partial void OnCustomerNumberOnPDFChanging(System.Nullable<bool> value);
    partial void OnCustomerNumberOnPDFChanged();
    #endregion
		
		public Quotation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerContactId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> CustomerContactId
		{
			get
			{
				return this._CustomerContactId;
			}
			set
			{
				if ((this._CustomerContactId != value))
				{
					if (this._CustomerContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerContactIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerContactId = value;
					this.SendPropertyChanged("CustomerContactId");
					this.OnCustomerContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Awarded", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> Awarded
		{
			get
			{
				return this._Awarded;
			}
			set
			{
				if ((this._Awarded != value))
				{
					this.OnAwardedChanging(value);
					this.SendPropertyChanging();
					this._Awarded = value;
					this.SendPropertyChanged("Awarded");
					this.OnAwardedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.DateTime> QuoteDate
		{
			get
			{
				return this._QuoteDate;
			}
			set
			{
				if ((this._QuoteDate != value))
				{
					this.OnQuoteDateChanging(value);
					this.SendPropertyChanging();
					this._QuoteDate = value;
					this.SendPropertyChanged("QuoteDate");
					this.OnQuoteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceExpirationDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.DateTime> AcceptanceExpirationDate
		{
			get
			{
				return this._AcceptanceExpirationDate;
			}
			set
			{
				if ((this._AcceptanceExpirationDate != value))
				{
					this.OnAcceptanceExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceExpirationDate = value;
					this.SendPropertyChanged("AcceptanceExpirationDate");
					this.OnAcceptanceExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteExpirationDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<System.DateTime> QuoteExpirationDate
		{
			get
			{
				return this._QuoteExpirationDate;
			}
			set
			{
				if ((this._QuoteExpirationDate != value))
				{
					this.OnQuoteExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._QuoteExpirationDate = value;
					this.SendPropertyChanged("QuoteExpirationDate");
					this.OnQuoteExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIncrease1", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<System.DateTime> PriceIncrease1
		{
			get
			{
				return this._PriceIncrease1;
			}
			set
			{
				if ((this._PriceIncrease1 != value))
				{
					this.OnPriceIncrease1Changing(value);
					this.SendPropertyChanging();
					this._PriceIncrease1 = value;
					this.SendPropertyChanged("PriceIncrease1");
					this.OnPriceIncrease1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIncreaseAmount1", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<decimal> PriceIncreaseAmount1
		{
			get
			{
				return this._PriceIncreaseAmount1;
			}
			set
			{
				if ((this._PriceIncreaseAmount1 != value))
				{
					this.OnPriceIncreaseAmount1Changing(value);
					this.SendPropertyChanging();
					this._PriceIncreaseAmount1 = value;
					this.SendPropertyChanged("PriceIncreaseAmount1");
					this.OnPriceIncreaseAmount1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIncrease2", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<System.DateTime> PriceIncrease2
		{
			get
			{
				return this._PriceIncrease2;
			}
			set
			{
				if ((this._PriceIncrease2 != value))
				{
					this.OnPriceIncrease2Changing(value);
					this.SendPropertyChanging();
					this._PriceIncrease2 = value;
					this.SendPropertyChanged("PriceIncrease2");
					this.OnPriceIncrease2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIncreaseAmount2", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<decimal> PriceIncreaseAmount2
		{
			get
			{
				return this._PriceIncreaseAmount2;
			}
			set
			{
				if ((this._PriceIncreaseAmount2 != value))
				{
					this.OnPriceIncreaseAmount2Changing(value);
					this.SendPropertyChanging();
					this._PriceIncreaseAmount2 = value;
					this.SendPropertyChanged("PriceIncreaseAmount2");
					this.OnPriceIncreaseAmount2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIncrease3", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<System.DateTime> PriceIncrease3
		{
			get
			{
				return this._PriceIncrease3;
			}
			set
			{
				if ((this._PriceIncrease3 != value))
				{
					this.OnPriceIncrease3Changing(value);
					this.SendPropertyChanging();
					this._PriceIncrease3 = value;
					this.SendPropertyChanged("PriceIncrease3");
					this.OnPriceIncrease3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceIncreaseAmount3", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<decimal> PriceIncreaseAmount3
		{
			get
			{
				return this._PriceIncreaseAmount3;
			}
			set
			{
				if ((this._PriceIncreaseAmount3 != value))
				{
					this.OnPriceIncreaseAmount3Changing(value);
					this.SendPropertyChanging();
					this._PriceIncreaseAmount3 = value;
					this.SendPropertyChanged("PriceIncreaseAmount3");
					this.OnPriceIncreaseAmount3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivateNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string PrivateNotes
		{
			get
			{
				return this._PrivateNotes;
			}
			set
			{
				if ((this._PrivateNotes != value))
				{
					this.OnPrivateNotesChanging(value);
					this.SendPropertyChanging();
					this._PrivateNotes = value;
					this.SendPropertyChanged("PrivateNotes");
					this.OnPrivateNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string PublicNotes
		{
			get
			{
				return this._PublicNotes;
			}
			set
			{
				if ((this._PublicNotes != value))
				{
					this.OnPublicNotesChanging(value);
					this.SendPropertyChanging();
					this._PublicNotes = value;
					this.SendPropertyChanged("PublicNotes");
					this.OnPublicNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCodeId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<long> TaxCodeId
		{
			get
			{
				return this._TaxCodeId;
			}
			set
			{
				if ((this._TaxCodeId != value))
				{
					if (this._TaxCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxCodeIdChanging(value);
					this.SendPropertyChanging();
					this._TaxCodeId = value;
					this.SendPropertyChanged("TaxCodeId");
					this.OnTaxCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxExemptReason", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string TaxExemptReason
		{
			get
			{
				return this._TaxExemptReason;
			}
			set
			{
				if ((this._TaxExemptReason != value))
				{
					this.OnTaxExemptReasonChanging(value);
					this.SendPropertyChanging();
					this._TaxExemptReason = value;
					this.SendPropertyChanged("TaxExemptReason");
					this.OnTaxExemptReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spread", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<decimal> Spread
		{
			get
			{
				return this._Spread;
			}
			set
			{
				if ((this._Spread != value))
				{
					this.OnSpreadChanging(value);
					this.SendPropertyChanging();
					this._Spread = value;
					this.SendPropertyChanged("Spread");
					this.OnSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contribution", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<decimal> Contribution
		{
			get
			{
				return this._Contribution;
			}
			set
			{
				if ((this._Contribution != value))
				{
					this.OnContributionChanging(value);
					this.SendPropertyChanging();
					this._Contribution = value;
					this.SendPropertyChanged("Contribution");
					this.OnContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<decimal> Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CYDHr", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<double> CYDHr
		{
			get
			{
				return this._CYDHr;
			}
			set
			{
				if ((this._CYDHr != value))
				{
					this.OnCYDHrChanging(value);
					this.SendPropertyChanging();
					this._CYDHr = value;
					this.SendPropertyChanged("CYDHr");
					this.OnCYDHrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolume", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public System.Nullable<double> TotalVolume
		{
			get
			{
				return this._TotalVolume;
			}
			set
			{
				if ((this._TotalVolume != value))
				{
					this.OnTotalVolumeChanging(value);
					this.SendPropertyChanging();
					this._TotalVolume = value;
					this.SendPropertyChanged("TotalVolume");
					this.OnTotalVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRevenue", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<decimal> TotalRevenue
		{
			get
			{
				return this._TotalRevenue;
			}
			set
			{
				if ((this._TotalRevenue != value))
				{
					this.OnTotalRevenueChanging(value);
					this.SendPropertyChanging();
					this._TotalRevenue = value;
					this.SendPropertyChanged("TotalRevenue");
					this.OnTotalRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalProfit", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public System.Nullable<decimal> TotalProfit
		{
			get
			{
				return this._TotalProfit;
			}
			set
			{
				if ((this._TotalProfit != value))
				{
					this.OnTotalProfitChanging(value);
					this.SendPropertyChanging();
					this._TotalProfit = value;
					this.SendPropertyChanged("TotalProfit");
					this.OnTotalProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgSellingPrice", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public System.Nullable<decimal> AvgSellingPrice
		{
			get
			{
				return this._AvgSellingPrice;
			}
			set
			{
				if ((this._AvgSellingPrice != value))
				{
					this.OnAvgSellingPriceChanging(value);
					this.SendPropertyChanging();
					this._AvgSellingPrice = value;
					this.SendPropertyChanged("AvgSellingPrice");
					this.OnAvgSellingPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgLoad", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public System.Nullable<double> AvgLoad
		{
			get
			{
				return this._AvgLoad;
			}
			set
			{
				if ((this._AvgLoad != value))
				{
					this.OnAvgLoadChanging(value);
					this.SendPropertyChanging();
					this._AvgLoad = value;
					this.SendPropertyChanged("AvgLoad");
					this.OnAvgLoadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgUnload", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public System.Nullable<double> AvgUnload
		{
			get
			{
				return this._AvgUnload;
			}
			set
			{
				if ((this._AvgUnload != value))
				{
					this.OnAvgUnloadChanging(value);
					this.SendPropertyChanging();
					this._AvgUnload = value;
					this.SendPropertyChanged("AvgUnload");
					this.OnAvgUnloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public System.Nullable<System.Guid> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36)]
		public System.Nullable<System.DateTime> ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this.OnApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDate = value;
					this.SendPropertyChanged("ApprovalDate");
					this.OnApprovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FskPriceId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37)]
		public System.Nullable<long> FskPriceId
		{
			get
			{
				return this._FskPriceId;
			}
			set
			{
				if ((this._FskPriceId != value))
				{
					if (this._FSKPrice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFskPriceIdChanging(value);
					this.SendPropertyChanging();
					this._FskPriceId = value;
					this.SendPropertyChanged("FskPriceId");
					this.OnFskPriceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FskBasePrice", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38)]
		public System.Nullable<decimal> FskBasePrice
		{
			get
			{
				return this._FskBasePrice;
			}
			set
			{
				if ((this._FskBasePrice != value))
				{
					this.OnFskBasePriceChanging(value);
					this.SendPropertyChanging();
					this._FskBasePrice = value;
					this.SendPropertyChanged("FskBasePrice");
					this.OnFskBasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesStaffId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39)]
		public System.Nullable<int> SalesStaffId
		{
			get
			{
				return this._SalesStaffId;
			}
			set
			{
				if ((this._SalesStaffId != value))
				{
					if (this._SalesStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesStaffIdChanging(value);
					this.SendPropertyChanging();
					this._SalesStaffId = value;
					this.SendPropertyChanged("SalesStaffId");
					this.OnSalesStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synced", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41)]
		public System.Nullable<bool> Synced
		{
			get
			{
				return this._Synced;
			}
			set
			{
				if ((this._Synced != value))
				{
					this.OnSyncedChanging(value);
					this.SendPropertyChanging();
					this._Synced = value;
					this.SendPropertyChanged("Synced");
					this.OnSyncedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPushedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=42)]
		public System.Nullable<System.DateTime> LastPushedAt
		{
			get
			{
				return this._LastPushedAt;
			}
			set
			{
				if ((this._LastPushedAt != value))
				{
					this.OnLastPushedAtChanging(value);
					this.SendPropertyChanging();
					this._LastPushedAt = value;
					this.SendPropertyChanged("LastPushedAt");
					this.OnLastPushedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushedBy", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=43)]
		public string PushedBy
		{
			get
			{
				return this._PushedBy;
			}
			set
			{
				if ((this._PushedBy != value))
				{
					this.OnPushedByChanging(value);
					this.SendPropertyChanging();
					this._PushedBy = value;
					this.SendPropertyChanged("PushedBy");
					this.OnPushedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricingMonth", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=44)]
		public System.Nullable<System.DateTime> PricingMonth
		{
			get
			{
				return this._PricingMonth;
			}
			set
			{
				if ((this._PricingMonth != value))
				{
					this.OnPricingMonthChanging(value);
					this.SendPropertyChanging();
					this._PricingMonth = value;
					this.SendPropertyChanged("PricingMonth");
					this.OnPricingMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableEdit", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=45)]
		public System.Nullable<bool> EnableEdit
		{
			get
			{
				return this._EnableEdit;
			}
			set
			{
				if ((this._EnableEdit != value))
				{
					this.OnEnableEditChanging(value);
					this.SendPropertyChanging();
					this._EnableEdit = value;
					this.SendPropertyChanged("EnableEdit");
					this.OnEnableEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectFormNotificationDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=46)]
		public System.Nullable<System.DateTime> ProjectFormNotificationDate
		{
			get
			{
				return this._ProjectFormNotificationDate;
			}
			set
			{
				if ((this._ProjectFormNotificationDate != value))
				{
					this.OnProjectFormNotificationDateChanging(value);
					this.SendPropertyChanging();
					this._ProjectFormNotificationDate = value;
					this.SendPropertyChanged("ProjectFormNotificationDate");
					this.OnProjectFormNotificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDFGeneratedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=47)]
		public System.Nullable<System.DateTime> PDFGeneratedDate
		{
			get
			{
				return this._PDFGeneratedDate;
			}
			set
			{
				if ((this._PDFGeneratedDate != value))
				{
					this.OnPDFGeneratedDateChanging(value);
					this.SendPropertyChanging();
					this._PDFGeneratedDate = value;
					this.SendPropertyChanged("PDFGeneratedDate");
					this.OnPDFGeneratedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregatePlantId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=48)]
		public System.Nullable<int> AggregatePlantId
		{
			get
			{
				return this._AggregatePlantId;
			}
			set
			{
				if ((this._AggregatePlantId != value))
				{
					if (this._AggregatePlant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAggregatePlantIdChanging(value);
					this.SendPropertyChanging();
					this._AggregatePlantId = value;
					this.SendPropertyChanged("AggregatePlantId");
					this.OnAggregatePlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockPlantId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=49)]
		public System.Nullable<int> BlockPlantId
		{
			get
			{
				return this._BlockPlantId;
			}
			set
			{
				if ((this._BlockPlantId != value))
				{
					if (this._BlockPlant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockPlantIdChanging(value);
					this.SendPropertyChanging();
					this._BlockPlantId = value;
					this.SendPropertyChanged("BlockPlantId");
					this.OnBlockPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcreteEnabled", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=50)]
		public System.Nullable<bool> ConcreteEnabled
		{
			get
			{
				return this._ConcreteEnabled;
			}
			set
			{
				if ((this._ConcreteEnabled != value))
				{
					this.OnConcreteEnabledChanging(value);
					this.SendPropertyChanging();
					this._ConcreteEnabled = value;
					this.SendPropertyChanged("ConcreteEnabled");
					this.OnConcreteEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregateEnabled", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=51)]
		public System.Nullable<bool> AggregateEnabled
		{
			get
			{
				return this._AggregateEnabled;
			}
			set
			{
				if ((this._AggregateEnabled != value))
				{
					this.OnAggregateEnabledChanging(value);
					this.SendPropertyChanging();
					this._AggregateEnabled = value;
					this.SendPropertyChanged("AggregateEnabled");
					this.OnAggregateEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockEnabled", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=52)]
		public System.Nullable<bool> BlockEnabled
		{
			get
			{
				return this._BlockEnabled;
			}
			set
			{
				if ((this._BlockEnabled != value))
				{
					this.OnBlockEnabledChanging(value);
					this.SendPropertyChanging();
					this._BlockEnabled = value;
					this.SendPropertyChanged("BlockEnabled");
					this.OnBlockEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disclaimers", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=53)]
		public string Disclaimers
		{
			get
			{
				return this._Disclaimers;
			}
			set
			{
				if ((this._Disclaimers != value))
				{
					this.OnDisclaimersChanging(value);
					this.SendPropertyChanging();
					this._Disclaimers = value;
					this.SendPropertyChanged("Disclaimers");
					this.OnDisclaimersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disclosures", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=54)]
		public string Disclosures
		{
			get
			{
				return this._Disclosures;
			}
			set
			{
				if ((this._Disclosures != value))
				{
					this.OnDisclosuresChanging(value);
					this.SendPropertyChanging();
					this._Disclosures = value;
					this.SendPropertyChanged("Disclosures");
					this.OnDisclosuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermsAndConditions", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=55)]
		public string TermsAndConditions
		{
			get
			{
				return this._TermsAndConditions;
			}
			set
			{
				if ((this._TermsAndConditions != value))
				{
					this.OnTermsAndConditionsChanging(value);
					this.SendPropertyChanging();
					this._TermsAndConditions = value;
					this.SendPropertyChanged("TermsAndConditions");
					this.OnTermsAndConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustMixPrice", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=56)]
		public System.Nullable<double> AdjustMixPrice
		{
			get
			{
				return this._AdjustMixPrice;
			}
			set
			{
				if ((this._AdjustMixPrice != value))
				{
					this.OnAdjustMixPriceChanging(value);
					this.SendPropertyChanging();
					this._AdjustMixPrice = value;
					this.SendPropertyChanged("AdjustMixPrice");
					this.OnAdjustMixPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BiddingDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=57)]
		public System.Nullable<System.DateTime> BiddingDate
		{
			get
			{
				return this._BiddingDate;
			}
			set
			{
				if ((this._BiddingDate != value))
				{
					this.OnBiddingDateChanging(value);
					this.SendPropertyChanging();
					this._BiddingDate = value;
					this.SendPropertyChanged("BiddingDate");
					this.OnBiddingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeAsLettingDate", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=58)]
		public System.Nullable<bool> IncludeAsLettingDate
		{
			get
			{
				return this._IncludeAsLettingDate;
			}
			set
			{
				if ((this._IncludeAsLettingDate != value))
				{
					this.OnIncludeAsLettingDateChanging(value);
					this.SendPropertyChanging();
					this._IncludeAsLettingDate = value;
					this.SendPropertyChanged("IncludeAsLettingDate");
					this.OnIncludeAsLettingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditingEnabledBy", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=59)]
		public System.Nullable<System.Guid> EditingEnabledBy
		{
			get
			{
				return this._EditingEnabledBy;
			}
			set
			{
				if ((this._EditingEnabledBy != value))
				{
					this.OnEditingEnabledByChanging(value);
					this.SendPropertyChanging();
					this._EditingEnabledBy = value;
					this.SendPropertyChanged("EditingEnabledBy");
					this.OnEditingEnabledByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditingEnabledDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=60)]
		public System.Nullable<System.DateTime> EditingEnabledDate
		{
			get
			{
				return this._EditingEnabledDate;
			}
			set
			{
				if ((this._EditingEnabledDate != value))
				{
					this.OnEditingEnabledDateChanging(value);
					this.SendPropertyChanging();
					this._EditingEnabledDate = value;
					this.SendPropertyChanged("EditingEnabledDate");
					this.OnEditingEnabledDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumberOnPDF", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=61)]
		public System.Nullable<bool> CustomerNumberOnPDF
		{
			get
			{
				return this._CustomerNumberOnPDF;
			}
			set
			{
				if ((this._CustomerNumberOnPDF != value))
				{
					this.OnCustomerNumberOnPDFChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumberOnPDF = value;
					this.SendPropertyChanged("CustomerNumberOnPDF");
					this.OnCustomerNumberOnPDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_Notification", Storage="_Notifications", ThisKey="Id", OtherKey="QuotationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=62, EmitDefaultValue=false)]
		public EntitySet<Notification> Notifications
		{
			get
			{
				if ((this.serializing 
							&& (this._Notifications.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Notifications;
			}
			set
			{
				this._Notifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationAddon", Storage="_QuotationAddons", ThisKey="Id", OtherKey="QuotationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=63, EmitDefaultValue=false)]
		public EntitySet<QuotationAddon> QuotationAddons
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationAddons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationAddons;
			}
			set
			{
				this._QuotationAddons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationAggregate", Storage="_QuotationAggregates", ThisKey="Id", OtherKey="QuotationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=64, EmitDefaultValue=false)]
		public EntitySet<QuotationAggregate> QuotationAggregates
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationAggregates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationAggregates;
			}
			set
			{
				this._QuotationAggregates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationAggregateAddon", Storage="_QuotationAggregateAddons", ThisKey="Id", OtherKey="QuotationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=65, EmitDefaultValue=false)]
		public EntitySet<QuotationAggregateAddon> QuotationAggregateAddons
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationAggregateAddons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationAggregateAddons;
			}
			set
			{
				this._QuotationAggregateAddons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationBlock", Storage="_QuotationBlocks", ThisKey="Id", OtherKey="QuotationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=66, EmitDefaultValue=false)]
		public EntitySet<QuotationBlock> QuotationBlocks
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationBlocks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationBlocks;
			}
			set
			{
				this._QuotationBlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationBlockAddon", Storage="_QuotationBlockAddons", ThisKey="Id", OtherKey="QuotationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=67, EmitDefaultValue=false)]
		public EntitySet<QuotationBlockAddon> QuotationBlockAddons
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationBlockAddons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationBlockAddons;
			}
			set
			{
				this._QuotationBlockAddons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationFormSetting", Storage="_QuotationFormSettings", ThisKey="Id", OtherKey="QuoteId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=68, EmitDefaultValue=false)]
		public EntitySet<QuotationFormSetting> QuotationFormSettings
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationFormSettings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationFormSettings;
			}
			set
			{
				this._QuotationFormSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationMix", Storage="_QuotationMixes", ThisKey="Id", OtherKey="QuotationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=69, EmitDefaultValue=false)]
		public EntitySet<QuotationMix> QuotationMixes
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationMixes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationMixes;
			}
			set
			{
				this._QuotationMixes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuoteAuditLog", Storage="_QuoteAuditLogs", ThisKey="Id", OtherKey="QuotationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=70, EmitDefaultValue=false)]
		public EntitySet<QuoteAuditLog> QuoteAuditLogs
		{
			get
			{
				if ((this.serializing 
							&& (this._QuoteAuditLogs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuoteAuditLogs;
			}
			set
			{
				this._QuoteAuditLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_Quotation", Storage="_Plant", ThisKey="PlantId", OtherKey="PlantId", IsForeignKey=true)]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.Quotations.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.Quotations.Add(this);
						this._PlantId = value.PlantId;
					}
					else
					{
						this._PlantId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_Quotation1", Storage="_AggregatePlant", ThisKey="AggregatePlantId", OtherKey="PlantId", IsForeignKey=true)]
		public Plant AggregatePlant
		{
			get
			{
				return this._AggregatePlant.Entity;
			}
			set
			{
				Plant previousValue = this._AggregatePlant.Entity;
				if (((previousValue != value) 
							|| (this._AggregatePlant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AggregatePlant.Entity = null;
						previousValue.Quotations1.Remove(this);
					}
					this._AggregatePlant.Entity = value;
					if ((value != null))
					{
						value.Quotations1.Add(this);
						this._AggregatePlantId = value.PlantId;
					}
					else
					{
						this._AggregatePlantId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AggregatePlant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Quotation", Storage="_Customer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Quotations.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Quotations.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerContact_Quotation", Storage="_CustomerContact", ThisKey="CustomerContactId", OtherKey="Id", IsForeignKey=true)]
		public CustomerContact CustomerContact
		{
			get
			{
				return this._CustomerContact.Entity;
			}
			set
			{
				CustomerContact previousValue = this._CustomerContact.Entity;
				if (((previousValue != value) 
							|| (this._CustomerContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerContact.Entity = null;
						previousValue.Quotations.Remove(this);
					}
					this._CustomerContact.Entity = value;
					if ((value != null))
					{
						value.Quotations.Add(this);
						this._CustomerContactId = value.Id;
					}
					else
					{
						this._CustomerContactId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FSKPrice_Quotation", Storage="_FSKPrice", ThisKey="FskPriceId", OtherKey="Id", IsForeignKey=true)]
		public FSKPrice FSKPrice
		{
			get
			{
				return this._FSKPrice.Entity;
			}
			set
			{
				FSKPrice previousValue = this._FSKPrice.Entity;
				if (((previousValue != value) 
							|| (this._FSKPrice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FSKPrice.Entity = null;
						previousValue.Quotations.Remove(this);
					}
					this._FSKPrice.Entity = value;
					if ((value != null))
					{
						value.Quotations.Add(this);
						this._FskPriceId = value.Id;
					}
					else
					{
						this._FskPriceId = default(Nullable<long>);
					}
					this.SendPropertyChanged("FSKPrice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_Quotation2", Storage="_BlockPlant", ThisKey="BlockPlantId", OtherKey="PlantId", IsForeignKey=true)]
		public Plant BlockPlant
		{
			get
			{
				return this._BlockPlant.Entity;
			}
			set
			{
				Plant previousValue = this._BlockPlant.Entity;
				if (((previousValue != value) 
							|| (this._BlockPlant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlockPlant.Entity = null;
						previousValue.Quotations2.Remove(this);
					}
					this._BlockPlant.Entity = value;
					if ((value != null))
					{
						value.Quotations2.Add(this);
						this._BlockPlantId = value.PlantId;
					}
					else
					{
						this._BlockPlantId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BlockPlant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Quotation", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Quotations.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Quotations.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesStaff_Quotation", Storage="_SalesStaff", ThisKey="SalesStaffId", OtherKey="SalesStaffId", IsForeignKey=true)]
		public SalesStaff SalesStaff
		{
			get
			{
				return this._SalesStaff.Entity;
			}
			set
			{
				SalesStaff previousValue = this._SalesStaff.Entity;
				if (((previousValue != value) 
							|| (this._SalesStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesStaff.Entity = null;
						previousValue.Quotations.Remove(this);
					}
					this._SalesStaff.Entity = value;
					if ((value != null))
					{
						value.Quotations.Add(this);
						this._SalesStaffId = value.SalesStaffId;
					}
					else
					{
						this._SalesStaffId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SalesStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaxCode_Quotation", Storage="_TaxCode", ThisKey="TaxCodeId", OtherKey="Id", IsForeignKey=true)]
		public TaxCode TaxCode
		{
			get
			{
				return this._TaxCode.Entity;
			}
			set
			{
				TaxCode previousValue = this._TaxCode.Entity;
				if (((previousValue != value) 
							|| (this._TaxCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaxCode.Entity = null;
						previousValue.Quotations.Remove(this);
					}
					this._TaxCode.Entity = value;
					if ((value != null))
					{
						value.Quotations.Add(this);
						this._TaxCodeId = value.Id;
					}
					else
					{
						this._TaxCodeId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TaxCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = this;
		}
		
		private void detach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = null;
		}
		
		private void attach_QuotationAddons(QuotationAddon entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = this;
		}
		
		private void detach_QuotationAddons(QuotationAddon entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = null;
		}
		
		private void attach_QuotationAggregates(QuotationAggregate entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = this;
		}
		
		private void detach_QuotationAggregates(QuotationAggregate entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = null;
		}
		
		private void attach_QuotationAggregateAddons(QuotationAggregateAddon entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = this;
		}
		
		private void detach_QuotationAggregateAddons(QuotationAggregateAddon entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = null;
		}
		
		private void attach_QuotationBlocks(QuotationBlock entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = this;
		}
		
		private void detach_QuotationBlocks(QuotationBlock entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = null;
		}
		
		private void attach_QuotationBlockAddons(QuotationBlockAddon entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = this;
		}
		
		private void detach_QuotationBlockAddons(QuotationBlockAddon entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = null;
		}
		
		private void attach_QuotationFormSettings(QuotationFormSetting entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = this;
		}
		
		private void detach_QuotationFormSettings(QuotationFormSetting entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = null;
		}
		
		private void attach_QuotationMixes(QuotationMix entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = this;
		}
		
		private void detach_QuotationMixes(QuotationMix entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = null;
		}
		
		private void attach_QuoteAuditLogs(QuoteAuditLog entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = this;
		}
		
		private void detach_QuoteAuditLogs(QuoteAuditLog entity)
		{
			this.SendPropertyChanging();
			entity.Quotation = null;
		}
		
		private void Initialize()
		{
			this._Notifications = new EntitySet<Notification>(new Action<Notification>(this.attach_Notifications), new Action<Notification>(this.detach_Notifications));
			this._QuotationAddons = new EntitySet<QuotationAddon>(new Action<QuotationAddon>(this.attach_QuotationAddons), new Action<QuotationAddon>(this.detach_QuotationAddons));
			this._QuotationAggregates = new EntitySet<QuotationAggregate>(new Action<QuotationAggregate>(this.attach_QuotationAggregates), new Action<QuotationAggregate>(this.detach_QuotationAggregates));
			this._QuotationAggregateAddons = new EntitySet<QuotationAggregateAddon>(new Action<QuotationAggregateAddon>(this.attach_QuotationAggregateAddons), new Action<QuotationAggregateAddon>(this.detach_QuotationAggregateAddons));
			this._QuotationBlocks = new EntitySet<QuotationBlock>(new Action<QuotationBlock>(this.attach_QuotationBlocks), new Action<QuotationBlock>(this.detach_QuotationBlocks));
			this._QuotationBlockAddons = new EntitySet<QuotationBlockAddon>(new Action<QuotationBlockAddon>(this.attach_QuotationBlockAddons), new Action<QuotationBlockAddon>(this.detach_QuotationBlockAddons));
			this._QuotationFormSettings = new EntitySet<QuotationFormSetting>(new Action<QuotationFormSetting>(this.attach_QuotationFormSettings), new Action<QuotationFormSetting>(this.detach_QuotationFormSettings));
			this._QuotationMixes = new EntitySet<QuotationMix>(new Action<QuotationMix>(this.attach_QuotationMixes), new Action<QuotationMix>(this.detach_QuotationMixes));
			this._QuoteAuditLogs = new EntitySet<QuoteAuditLog>(new Action<QuoteAuditLog>(this.attach_QuoteAuditLogs), new Action<QuoteAuditLog>(this.detach_QuoteAuditLogs));
			this._Plant = default(EntityRef<Plant>);
			this._AggregatePlant = default(EntityRef<Plant>);
			this._Customer = default(EntityRef<Customer>);
			this._CustomerContact = default(EntityRef<CustomerContact>);
			this._FSKPrice = default(EntityRef<FSKPrice>);
			this._BlockPlant = default(EntityRef<Plant>);
			this._Project = default(EntityRef<Project>);
			this._SalesStaff = default(EntityRef<SalesStaff>);
			this._TaxCode = default(EntityRef<TaxCode>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuotationAddon")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class QuotationAddon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AddonId;
		
		private long _QuotationId;
		
		private string _Description;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<bool> _IsIncludeTable;
		
		private System.Nullable<decimal> _Sort;
		
		private EntityRef<Addon> _Addon;
		
		private EntityRef<Quotation> _Quotation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAddonIdChanging(long value);
    partial void OnAddonIdChanged();
    partial void OnQuotationIdChanging(long value);
    partial void OnQuotationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnIsIncludeTableChanging(System.Nullable<bool> value);
    partial void OnIsIncludeTableChanged();
    partial void OnSortChanging(System.Nullable<decimal> value);
    partial void OnSortChanged();
    #endregion
		
		public QuotationAddon()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long AddonId
		{
			get
			{
				return this._AddonId;
			}
			set
			{
				if ((this._AddonId != value))
				{
					if (this._Addon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddonIdChanging(value);
					this.SendPropertyChanging();
					this._AddonId = value;
					this.SendPropertyChanged("AddonId");
					this.OnAddonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long QuotationId
		{
			get
			{
				return this._QuotationId;
			}
			set
			{
				if ((this._QuotationId != value))
				{
					if (this._Quotation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationIdChanging(value);
					this.SendPropertyChanging();
					this._QuotationId = value;
					this.SendPropertyChanged("QuotationId");
					this.OnQuotationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIncludeTable", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsIncludeTable
		{
			get
			{
				return this._IsIncludeTable;
			}
			set
			{
				if ((this._IsIncludeTable != value))
				{
					this.OnIsIncludeTableChanging(value);
					this.SendPropertyChanging();
					this._IsIncludeTable = value;
					this.SendPropertyChanged("IsIncludeTable");
					this.OnIsIncludeTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Decimal(6,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<decimal> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_QuotationAddon", Storage="_Addon", ThisKey="AddonId", OtherKey="Id", IsForeignKey=true)]
		public Addon Addon
		{
			get
			{
				return this._Addon.Entity;
			}
			set
			{
				Addon previousValue = this._Addon.Entity;
				if (((previousValue != value) 
							|| (this._Addon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Addon.Entity = null;
						previousValue.QuotationAddons.Remove(this);
					}
					this._Addon.Entity = value;
					if ((value != null))
					{
						value.QuotationAddons.Add(this);
						this._AddonId = value.Id;
					}
					else
					{
						this._AddonId = default(long);
					}
					this.SendPropertyChanged("Addon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationAddon", Storage="_Quotation", ThisKey="QuotationId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Quotation Quotation
		{
			get
			{
				return this._Quotation.Entity;
			}
			set
			{
				Quotation previousValue = this._Quotation.Entity;
				if (((previousValue != value) 
							|| (this._Quotation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quotation.Entity = null;
						previousValue.QuotationAddons.Remove(this);
					}
					this._Quotation.Entity = value;
					if ((value != null))
					{
						value.QuotationAddons.Add(this);
						this._QuotationId = value.Id;
					}
					else
					{
						this._QuotationId = default(long);
					}
					this.SendPropertyChanged("Quotation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Addon = default(EntityRef<Addon>);
			this._Quotation = default(EntityRef<Quotation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuotationAggregate")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class QuotationAggregate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _QuotationId;
		
		private System.Nullable<int> _Position;
		
		private System.Nullable<long> _AggregateProductId;
		
		private string _QuotedDescription;
		
		private System.Nullable<double> _Volume;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<double> _AvgLoad;
		
		private System.Nullable<decimal> _AddonCost;
		
		private System.Nullable<decimal> _MixCost;
		
		private System.Nullable<int> _Unload;
		
		private System.Nullable<decimal> _Spread;
		
		private System.Nullable<decimal> _Contribution;
		
		private System.Nullable<decimal> _Profit;
		
		private string _PrivateNotes;
		
		private string _PublicNotes;
		
		private System.Nullable<double> _CydHour;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<decimal> _Freight;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private System.Nullable<decimal> _TotalRevenue;
		
		private EntityRef<AggregateProduct> _AggregateProduct;
		
		private EntityRef<Quotation> _Quotation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnQuotationIdChanging(System.Nullable<long> value);
    partial void OnQuotationIdChanged();
    partial void OnPositionChanging(System.Nullable<int> value);
    partial void OnPositionChanged();
    partial void OnAggregateProductIdChanging(System.Nullable<long> value);
    partial void OnAggregateProductIdChanged();
    partial void OnQuotedDescriptionChanging(string value);
    partial void OnQuotedDescriptionChanged();
    partial void OnVolumeChanging(System.Nullable<double> value);
    partial void OnVolumeChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnAvgLoadChanging(System.Nullable<double> value);
    partial void OnAvgLoadChanged();
    partial void OnAddonCostChanging(System.Nullable<decimal> value);
    partial void OnAddonCostChanged();
    partial void OnMixCostChanging(System.Nullable<decimal> value);
    partial void OnMixCostChanged();
    partial void OnUnloadChanging(System.Nullable<int> value);
    partial void OnUnloadChanged();
    partial void OnSpreadChanging(System.Nullable<decimal> value);
    partial void OnSpreadChanged();
    partial void OnContributionChanging(System.Nullable<decimal> value);
    partial void OnContributionChanged();
    partial void OnProfitChanging(System.Nullable<decimal> value);
    partial void OnProfitChanged();
    partial void OnPrivateNotesChanging(string value);
    partial void OnPrivateNotesChanged();
    partial void OnPublicNotesChanging(string value);
    partial void OnPublicNotesChanged();
    partial void OnCydHourChanging(System.Nullable<double> value);
    partial void OnCydHourChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnFreightChanging(System.Nullable<decimal> value);
    partial void OnFreightChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    partial void OnTotalRevenueChanging(System.Nullable<decimal> value);
    partial void OnTotalRevenueChanged();
    #endregion
		
		public QuotationAggregate()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<long> QuotationId
		{
			get
			{
				return this._QuotationId;
			}
			set
			{
				if ((this._QuotationId != value))
				{
					if (this._Quotation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationIdChanging(value);
					this.SendPropertyChanging();
					this._QuotationId = value;
					this.SendPropertyChanged("QuotationId");
					this.OnQuotationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregateProductId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<long> AggregateProductId
		{
			get
			{
				return this._AggregateProductId;
			}
			set
			{
				if ((this._AggregateProductId != value))
				{
					if (this._AggregateProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAggregateProductIdChanging(value);
					this.SendPropertyChanging();
					this._AggregateProductId = value;
					this.SendPropertyChanged("AggregateProductId");
					this.OnAggregateProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotedDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string QuotedDescription
		{
			get
			{
				return this._QuotedDescription;
			}
			set
			{
				if ((this._QuotedDescription != value))
				{
					this.OnQuotedDescriptionChanging(value);
					this.SendPropertyChanging();
					this._QuotedDescription = value;
					this.SendPropertyChanged("QuotedDescription");
					this.OnQuotedDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<double> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgLoad", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<double> AvgLoad
		{
			get
			{
				return this._AvgLoad;
			}
			set
			{
				if ((this._AvgLoad != value))
				{
					this.OnAvgLoadChanging(value);
					this.SendPropertyChanging();
					this._AvgLoad = value;
					this.SendPropertyChanged("AvgLoad");
					this.OnAvgLoadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonCost", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<decimal> AddonCost
		{
			get
			{
				return this._AddonCost;
			}
			set
			{
				if ((this._AddonCost != value))
				{
					this.OnAddonCostChanging(value);
					this.SendPropertyChanging();
					this._AddonCost = value;
					this.SendPropertyChanged("AddonCost");
					this.OnAddonCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixCost", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<decimal> MixCost
		{
			get
			{
				return this._MixCost;
			}
			set
			{
				if ((this._MixCost != value))
				{
					this.OnMixCostChanging(value);
					this.SendPropertyChanging();
					this._MixCost = value;
					this.SendPropertyChanged("MixCost");
					this.OnMixCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unload", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> Unload
		{
			get
			{
				return this._Unload;
			}
			set
			{
				if ((this._Unload != value))
				{
					this.OnUnloadChanging(value);
					this.SendPropertyChanging();
					this._Unload = value;
					this.SendPropertyChanged("Unload");
					this.OnUnloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spread", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<decimal> Spread
		{
			get
			{
				return this._Spread;
			}
			set
			{
				if ((this._Spread != value))
				{
					this.OnSpreadChanging(value);
					this.SendPropertyChanging();
					this._Spread = value;
					this.SendPropertyChanged("Spread");
					this.OnSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contribution", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<decimal> Contribution
		{
			get
			{
				return this._Contribution;
			}
			set
			{
				if ((this._Contribution != value))
				{
					this.OnContributionChanging(value);
					this.SendPropertyChanging();
					this._Contribution = value;
					this.SendPropertyChanged("Contribution");
					this.OnContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<decimal> Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivateNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string PrivateNotes
		{
			get
			{
				return this._PrivateNotes;
			}
			set
			{
				if ((this._PrivateNotes != value))
				{
					this.OnPrivateNotesChanging(value);
					this.SendPropertyChanging();
					this._PrivateNotes = value;
					this.SendPropertyChanged("PrivateNotes");
					this.OnPrivateNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string PublicNotes
		{
			get
			{
				return this._PublicNotes;
			}
			set
			{
				if ((this._PublicNotes != value))
				{
					this.OnPublicNotesChanging(value);
					this.SendPropertyChanging();
					this._PublicNotes = value;
					this.SendPropertyChanged("PublicNotes");
					this.OnPublicNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CydHour", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<double> CydHour
		{
			get
			{
				return this._CydHour;
			}
			set
			{
				if ((this._CydHour != value))
				{
					this.OnCydHourChanging(value);
					this.SendPropertyChanging();
					this._CydHour = value;
					this.SendPropertyChanged("CydHour");
					this.OnCydHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Freight", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<decimal> Freight
		{
			get
			{
				return this._Freight;
			}
			set
			{
				if ((this._Freight != value))
				{
					this.OnFreightChanging(value);
					this.SendPropertyChanging();
					this._Freight = value;
					this.SendPropertyChanged("Freight");
					this.OnFreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRevenue", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<decimal> TotalRevenue
		{
			get
			{
				return this._TotalRevenue;
			}
			set
			{
				if ((this._TotalRevenue != value))
				{
					this.OnTotalRevenueChanging(value);
					this.SendPropertyChanging();
					this._TotalRevenue = value;
					this.SendPropertyChanged("TotalRevenue");
					this.OnTotalRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AggregateProduct_QuotationAggregate", Storage="_AggregateProduct", ThisKey="AggregateProductId", OtherKey="Id", IsForeignKey=true)]
		public AggregateProduct AggregateProduct
		{
			get
			{
				return this._AggregateProduct.Entity;
			}
			set
			{
				AggregateProduct previousValue = this._AggregateProduct.Entity;
				if (((previousValue != value) 
							|| (this._AggregateProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AggregateProduct.Entity = null;
						previousValue.QuotationAggregates.Remove(this);
					}
					this._AggregateProduct.Entity = value;
					if ((value != null))
					{
						value.QuotationAggregates.Add(this);
						this._AggregateProductId = value.Id;
					}
					else
					{
						this._AggregateProductId = default(Nullable<long>);
					}
					this.SendPropertyChanged("AggregateProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationAggregate", Storage="_Quotation", ThisKey="QuotationId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Quotation Quotation
		{
			get
			{
				return this._Quotation.Entity;
			}
			set
			{
				Quotation previousValue = this._Quotation.Entity;
				if (((previousValue != value) 
							|| (this._Quotation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quotation.Entity = null;
						previousValue.QuotationAggregates.Remove(this);
					}
					this._Quotation.Entity = value;
					if ((value != null))
					{
						value.QuotationAggregates.Add(this);
						this._QuotationId = value.Id;
					}
					else
					{
						this._QuotationId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Quotation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._AggregateProduct = default(EntityRef<AggregateProduct>);
			this._Quotation = default(EntityRef<Quotation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuotationAggregateAddon")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class QuotationAggregateAddon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AddonId;
		
		private long _QuotationId;
		
		private string _Description;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<bool> _IsIncludeTable;
		
		private System.Nullable<decimal> _Sort;
		
		private EntityRef<Addon> _Addon;
		
		private EntityRef<Quotation> _Quotation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAddonIdChanging(long value);
    partial void OnAddonIdChanged();
    partial void OnQuotationIdChanging(long value);
    partial void OnQuotationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnIsIncludeTableChanging(System.Nullable<bool> value);
    partial void OnIsIncludeTableChanged();
    partial void OnSortChanging(System.Nullable<decimal> value);
    partial void OnSortChanged();
    #endregion
		
		public QuotationAggregateAddon()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long AddonId
		{
			get
			{
				return this._AddonId;
			}
			set
			{
				if ((this._AddonId != value))
				{
					if (this._Addon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddonIdChanging(value);
					this.SendPropertyChanging();
					this._AddonId = value;
					this.SendPropertyChanged("AddonId");
					this.OnAddonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long QuotationId
		{
			get
			{
				return this._QuotationId;
			}
			set
			{
				if ((this._QuotationId != value))
				{
					if (this._Quotation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationIdChanging(value);
					this.SendPropertyChanging();
					this._QuotationId = value;
					this.SendPropertyChanged("QuotationId");
					this.OnQuotationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIncludeTable", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsIncludeTable
		{
			get
			{
				return this._IsIncludeTable;
			}
			set
			{
				if ((this._IsIncludeTable != value))
				{
					this.OnIsIncludeTableChanging(value);
					this.SendPropertyChanging();
					this._IsIncludeTable = value;
					this.SendPropertyChanged("IsIncludeTable");
					this.OnIsIncludeTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Decimal(6,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<decimal> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_QuotationAggregateAddon", Storage="_Addon", ThisKey="AddonId", OtherKey="Id", IsForeignKey=true)]
		public Addon Addon
		{
			get
			{
				return this._Addon.Entity;
			}
			set
			{
				Addon previousValue = this._Addon.Entity;
				if (((previousValue != value) 
							|| (this._Addon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Addon.Entity = null;
						previousValue.QuotationAggregateAddons.Remove(this);
					}
					this._Addon.Entity = value;
					if ((value != null))
					{
						value.QuotationAggregateAddons.Add(this);
						this._AddonId = value.Id;
					}
					else
					{
						this._AddonId = default(long);
					}
					this.SendPropertyChanged("Addon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationAggregateAddon", Storage="_Quotation", ThisKey="QuotationId", OtherKey="Id", IsForeignKey=true)]
		public Quotation Quotation
		{
			get
			{
				return this._Quotation.Entity;
			}
			set
			{
				Quotation previousValue = this._Quotation.Entity;
				if (((previousValue != value) 
							|| (this._Quotation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quotation.Entity = null;
						previousValue.QuotationAggregateAddons.Remove(this);
					}
					this._Quotation.Entity = value;
					if ((value != null))
					{
						value.QuotationAggregateAddons.Add(this);
						this._QuotationId = value.Id;
					}
					else
					{
						this._QuotationId = default(long);
					}
					this.SendPropertyChanged("Quotation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Addon = default(EntityRef<Addon>);
			this._Quotation = default(EntityRef<Quotation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuotationBlock")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class QuotationBlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _QuotationId;
		
		private System.Nullable<int> _Position;
		
		private System.Nullable<long> _BlockProductId;
		
		private string _QuotedDescription;
		
		private System.Nullable<double> _Volume;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<double> _AvgLoad;
		
		private System.Nullable<decimal> _AddonCost;
		
		private System.Nullable<decimal> _MixCost;
		
		private System.Nullable<int> _Unload;
		
		private System.Nullable<decimal> _Spread;
		
		private System.Nullable<decimal> _Contribution;
		
		private System.Nullable<decimal> _Profit;
		
		private string _PrivateNotes;
		
		private string _PublicNotes;
		
		private System.Nullable<double> _CydHour;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<decimal> _Freight;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private System.Nullable<decimal> _TotalRevenue;
		
		private EntityRef<BlockProduct> _BlockProduct;
		
		private EntityRef<Quotation> _Quotation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnQuotationIdChanging(System.Nullable<long> value);
    partial void OnQuotationIdChanged();
    partial void OnPositionChanging(System.Nullable<int> value);
    partial void OnPositionChanged();
    partial void OnBlockProductIdChanging(System.Nullable<long> value);
    partial void OnBlockProductIdChanged();
    partial void OnQuotedDescriptionChanging(string value);
    partial void OnQuotedDescriptionChanged();
    partial void OnVolumeChanging(System.Nullable<double> value);
    partial void OnVolumeChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnAvgLoadChanging(System.Nullable<double> value);
    partial void OnAvgLoadChanged();
    partial void OnAddonCostChanging(System.Nullable<decimal> value);
    partial void OnAddonCostChanged();
    partial void OnMixCostChanging(System.Nullable<decimal> value);
    partial void OnMixCostChanged();
    partial void OnUnloadChanging(System.Nullable<int> value);
    partial void OnUnloadChanged();
    partial void OnSpreadChanging(System.Nullable<decimal> value);
    partial void OnSpreadChanged();
    partial void OnContributionChanging(System.Nullable<decimal> value);
    partial void OnContributionChanged();
    partial void OnProfitChanging(System.Nullable<decimal> value);
    partial void OnProfitChanged();
    partial void OnPrivateNotesChanging(string value);
    partial void OnPrivateNotesChanged();
    partial void OnPublicNotesChanging(string value);
    partial void OnPublicNotesChanged();
    partial void OnCydHourChanging(System.Nullable<double> value);
    partial void OnCydHourChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnFreightChanging(System.Nullable<decimal> value);
    partial void OnFreightChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    partial void OnTotalRevenueChanging(System.Nullable<decimal> value);
    partial void OnTotalRevenueChanged();
    #endregion
		
		public QuotationBlock()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<long> QuotationId
		{
			get
			{
				return this._QuotationId;
			}
			set
			{
				if ((this._QuotationId != value))
				{
					if (this._Quotation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationIdChanging(value);
					this.SendPropertyChanging();
					this._QuotationId = value;
					this.SendPropertyChanged("QuotationId");
					this.OnQuotationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockProductId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<long> BlockProductId
		{
			get
			{
				return this._BlockProductId;
			}
			set
			{
				if ((this._BlockProductId != value))
				{
					if (this._BlockProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockProductIdChanging(value);
					this.SendPropertyChanging();
					this._BlockProductId = value;
					this.SendPropertyChanged("BlockProductId");
					this.OnBlockProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotedDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string QuotedDescription
		{
			get
			{
				return this._QuotedDescription;
			}
			set
			{
				if ((this._QuotedDescription != value))
				{
					this.OnQuotedDescriptionChanging(value);
					this.SendPropertyChanging();
					this._QuotedDescription = value;
					this.SendPropertyChanged("QuotedDescription");
					this.OnQuotedDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<double> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgLoad", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<double> AvgLoad
		{
			get
			{
				return this._AvgLoad;
			}
			set
			{
				if ((this._AvgLoad != value))
				{
					this.OnAvgLoadChanging(value);
					this.SendPropertyChanging();
					this._AvgLoad = value;
					this.SendPropertyChanged("AvgLoad");
					this.OnAvgLoadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonCost", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<decimal> AddonCost
		{
			get
			{
				return this._AddonCost;
			}
			set
			{
				if ((this._AddonCost != value))
				{
					this.OnAddonCostChanging(value);
					this.SendPropertyChanging();
					this._AddonCost = value;
					this.SendPropertyChanged("AddonCost");
					this.OnAddonCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixCost", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<decimal> MixCost
		{
			get
			{
				return this._MixCost;
			}
			set
			{
				if ((this._MixCost != value))
				{
					this.OnMixCostChanging(value);
					this.SendPropertyChanging();
					this._MixCost = value;
					this.SendPropertyChanged("MixCost");
					this.OnMixCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unload", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> Unload
		{
			get
			{
				return this._Unload;
			}
			set
			{
				if ((this._Unload != value))
				{
					this.OnUnloadChanging(value);
					this.SendPropertyChanging();
					this._Unload = value;
					this.SendPropertyChanged("Unload");
					this.OnUnloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spread", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<decimal> Spread
		{
			get
			{
				return this._Spread;
			}
			set
			{
				if ((this._Spread != value))
				{
					this.OnSpreadChanging(value);
					this.SendPropertyChanging();
					this._Spread = value;
					this.SendPropertyChanged("Spread");
					this.OnSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contribution", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<decimal> Contribution
		{
			get
			{
				return this._Contribution;
			}
			set
			{
				if ((this._Contribution != value))
				{
					this.OnContributionChanging(value);
					this.SendPropertyChanging();
					this._Contribution = value;
					this.SendPropertyChanged("Contribution");
					this.OnContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<decimal> Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivateNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string PrivateNotes
		{
			get
			{
				return this._PrivateNotes;
			}
			set
			{
				if ((this._PrivateNotes != value))
				{
					this.OnPrivateNotesChanging(value);
					this.SendPropertyChanging();
					this._PrivateNotes = value;
					this.SendPropertyChanged("PrivateNotes");
					this.OnPrivateNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string PublicNotes
		{
			get
			{
				return this._PublicNotes;
			}
			set
			{
				if ((this._PublicNotes != value))
				{
					this.OnPublicNotesChanging(value);
					this.SendPropertyChanging();
					this._PublicNotes = value;
					this.SendPropertyChanged("PublicNotes");
					this.OnPublicNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CydHour", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<double> CydHour
		{
			get
			{
				return this._CydHour;
			}
			set
			{
				if ((this._CydHour != value))
				{
					this.OnCydHourChanging(value);
					this.SendPropertyChanging();
					this._CydHour = value;
					this.SendPropertyChanged("CydHour");
					this.OnCydHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Freight", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<decimal> Freight
		{
			get
			{
				return this._Freight;
			}
			set
			{
				if ((this._Freight != value))
				{
					this.OnFreightChanging(value);
					this.SendPropertyChanging();
					this._Freight = value;
					this.SendPropertyChanged("Freight");
					this.OnFreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRevenue", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<decimal> TotalRevenue
		{
			get
			{
				return this._TotalRevenue;
			}
			set
			{
				if ((this._TotalRevenue != value))
				{
					this.OnTotalRevenueChanging(value);
					this.SendPropertyChanging();
					this._TotalRevenue = value;
					this.SendPropertyChanged("TotalRevenue");
					this.OnTotalRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlockProduct_QuotationBlock", Storage="_BlockProduct", ThisKey="BlockProductId", OtherKey="Id", IsForeignKey=true)]
		public BlockProduct BlockProduct
		{
			get
			{
				return this._BlockProduct.Entity;
			}
			set
			{
				BlockProduct previousValue = this._BlockProduct.Entity;
				if (((previousValue != value) 
							|| (this._BlockProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlockProduct.Entity = null;
						previousValue.QuotationBlocks.Remove(this);
					}
					this._BlockProduct.Entity = value;
					if ((value != null))
					{
						value.QuotationBlocks.Add(this);
						this._BlockProductId = value.Id;
					}
					else
					{
						this._BlockProductId = default(Nullable<long>);
					}
					this.SendPropertyChanged("BlockProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationBlock", Storage="_Quotation", ThisKey="QuotationId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Quotation Quotation
		{
			get
			{
				return this._Quotation.Entity;
			}
			set
			{
				Quotation previousValue = this._Quotation.Entity;
				if (((previousValue != value) 
							|| (this._Quotation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quotation.Entity = null;
						previousValue.QuotationBlocks.Remove(this);
					}
					this._Quotation.Entity = value;
					if ((value != null))
					{
						value.QuotationBlocks.Add(this);
						this._QuotationId = value.Id;
					}
					else
					{
						this._QuotationId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Quotation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BlockProduct = default(EntityRef<BlockProduct>);
			this._Quotation = default(EntityRef<Quotation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuotationBlockAddon")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class QuotationBlockAddon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AddonId;
		
		private long _QuotationId;
		
		private string _Description;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<bool> _IsIncludeTable;
		
		private System.Nullable<decimal> _Sort;
		
		private EntityRef<Addon> _Addon;
		
		private EntityRef<Quotation> _Quotation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAddonIdChanging(long value);
    partial void OnAddonIdChanged();
    partial void OnQuotationIdChanging(long value);
    partial void OnQuotationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnIsIncludeTableChanging(System.Nullable<bool> value);
    partial void OnIsIncludeTableChanged();
    partial void OnSortChanging(System.Nullable<decimal> value);
    partial void OnSortChanged();
    #endregion
		
		public QuotationBlockAddon()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long AddonId
		{
			get
			{
				return this._AddonId;
			}
			set
			{
				if ((this._AddonId != value))
				{
					if (this._Addon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddonIdChanging(value);
					this.SendPropertyChanging();
					this._AddonId = value;
					this.SendPropertyChanged("AddonId");
					this.OnAddonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long QuotationId
		{
			get
			{
				return this._QuotationId;
			}
			set
			{
				if ((this._QuotationId != value))
				{
					if (this._Quotation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationIdChanging(value);
					this.SendPropertyChanging();
					this._QuotationId = value;
					this.SendPropertyChanged("QuotationId");
					this.OnQuotationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIncludeTable", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsIncludeTable
		{
			get
			{
				return this._IsIncludeTable;
			}
			set
			{
				if ((this._IsIncludeTable != value))
				{
					this.OnIsIncludeTableChanging(value);
					this.SendPropertyChanging();
					this._IsIncludeTable = value;
					this.SendPropertyChanged("IsIncludeTable");
					this.OnIsIncludeTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Decimal(6,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<decimal> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addon_QuotationBlockAddon", Storage="_Addon", ThisKey="AddonId", OtherKey="Id", IsForeignKey=true)]
		public Addon Addon
		{
			get
			{
				return this._Addon.Entity;
			}
			set
			{
				Addon previousValue = this._Addon.Entity;
				if (((previousValue != value) 
							|| (this._Addon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Addon.Entity = null;
						previousValue.QuotationBlockAddons.Remove(this);
					}
					this._Addon.Entity = value;
					if ((value != null))
					{
						value.QuotationBlockAddons.Add(this);
						this._AddonId = value.Id;
					}
					else
					{
						this._AddonId = default(long);
					}
					this.SendPropertyChanged("Addon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationBlockAddon", Storage="_Quotation", ThisKey="QuotationId", OtherKey="Id", IsForeignKey=true)]
		public Quotation Quotation
		{
			get
			{
				return this._Quotation.Entity;
			}
			set
			{
				Quotation previousValue = this._Quotation.Entity;
				if (((previousValue != value) 
							|| (this._Quotation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quotation.Entity = null;
						previousValue.QuotationBlockAddons.Remove(this);
					}
					this._Quotation.Entity = value;
					if ((value != null))
					{
						value.QuotationBlockAddons.Add(this);
						this._QuotationId = value.Id;
					}
					else
					{
						this._QuotationId = default(long);
					}
					this.SendPropertyChanged("Quotation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Addon = default(EntityRef<Addon>);
			this._Quotation = default(EntityRef<Quotation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuotationFormSetting")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class QuotationFormSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _QuoteId;
		
		private System.Nullable<bool> _PriceInclude;
		
		private System.Nullable<int> _PriceSequence;
		
		private System.Nullable<bool> _QuantityInclude;
		
		private System.Nullable<int> _QuantitySequence;
		
		private System.Nullable<bool> _MixIdInclude;
		
		private System.Nullable<int> _MixIdSequence;
		
		private System.Nullable<bool> _DescriptionInclude;
		
		private System.Nullable<int> _DescriptionSequence;
		
		private System.Nullable<bool> _PsiInclude;
		
		private System.Nullable<int> _PsiSequence;
		
		private System.Nullable<bool> _PublicCommentsInclude;
		
		private System.Nullable<int> _PublicCommentsSequence;
		
		private System.Nullable<bool> _SlumpInclude;
		
		private System.Nullable<int> _SlumpSequence;
		
		private System.Nullable<bool> _AirInclude;
		
		private System.Nullable<int> _AirSequence;
		
		private System.Nullable<bool> _AshInclude;
		
		private System.Nullable<int> _AshSequence;
		
		private System.Nullable<bool> _FineAggInclude;
		
		private System.Nullable<int> _FineAggSequence;
		
		private System.Nullable<bool> _SacksInclude;
		
		private System.Nullable<int> _SacksSequence;
		
		private System.Nullable<bool> _MD1Include;
		
		private System.Nullable<int> _MD1Sequence;
		
		private System.Nullable<bool> _MD2Include;
		
		private System.Nullable<int> _MD2Sequence;
		
		private System.Nullable<bool> _MD3Include;
		
		private System.Nullable<int> _MD3Sequence;
		
		private System.Nullable<bool> _MD4Include;
		
		private System.Nullable<int> _MD4Sequence;
		
		private EntityRef<Quotation> _Quotation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnQuoteIdChanging(long value);
    partial void OnQuoteIdChanged();
    partial void OnPriceIncludeChanging(System.Nullable<bool> value);
    partial void OnPriceIncludeChanged();
    partial void OnPriceSequenceChanging(System.Nullable<int> value);
    partial void OnPriceSequenceChanged();
    partial void OnQuantityIncludeChanging(System.Nullable<bool> value);
    partial void OnQuantityIncludeChanged();
    partial void OnQuantitySequenceChanging(System.Nullable<int> value);
    partial void OnQuantitySequenceChanged();
    partial void OnMixIdIncludeChanging(System.Nullable<bool> value);
    partial void OnMixIdIncludeChanged();
    partial void OnMixIdSequenceChanging(System.Nullable<int> value);
    partial void OnMixIdSequenceChanged();
    partial void OnDescriptionIncludeChanging(System.Nullable<bool> value);
    partial void OnDescriptionIncludeChanged();
    partial void OnDescriptionSequenceChanging(System.Nullable<int> value);
    partial void OnDescriptionSequenceChanged();
    partial void OnPsiIncludeChanging(System.Nullable<bool> value);
    partial void OnPsiIncludeChanged();
    partial void OnPsiSequenceChanging(System.Nullable<int> value);
    partial void OnPsiSequenceChanged();
    partial void OnPublicCommentsIncludeChanging(System.Nullable<bool> value);
    partial void OnPublicCommentsIncludeChanged();
    partial void OnPublicCommentsSequenceChanging(System.Nullable<int> value);
    partial void OnPublicCommentsSequenceChanged();
    partial void OnSlumpIncludeChanging(System.Nullable<bool> value);
    partial void OnSlumpIncludeChanged();
    partial void OnSlumpSequenceChanging(System.Nullable<int> value);
    partial void OnSlumpSequenceChanged();
    partial void OnAirIncludeChanging(System.Nullable<bool> value);
    partial void OnAirIncludeChanged();
    partial void OnAirSequenceChanging(System.Nullable<int> value);
    partial void OnAirSequenceChanged();
    partial void OnAshIncludeChanging(System.Nullable<bool> value);
    partial void OnAshIncludeChanged();
    partial void OnAshSequenceChanging(System.Nullable<int> value);
    partial void OnAshSequenceChanged();
    partial void OnFineAggIncludeChanging(System.Nullable<bool> value);
    partial void OnFineAggIncludeChanged();
    partial void OnFineAggSequenceChanging(System.Nullable<int> value);
    partial void OnFineAggSequenceChanged();
    partial void OnSacksIncludeChanging(System.Nullable<bool> value);
    partial void OnSacksIncludeChanged();
    partial void OnSacksSequenceChanging(System.Nullable<int> value);
    partial void OnSacksSequenceChanged();
    partial void OnMD1IncludeChanging(System.Nullable<bool> value);
    partial void OnMD1IncludeChanged();
    partial void OnMD1SequenceChanging(System.Nullable<int> value);
    partial void OnMD1SequenceChanged();
    partial void OnMD2IncludeChanging(System.Nullable<bool> value);
    partial void OnMD2IncludeChanged();
    partial void OnMD2SequenceChanging(System.Nullable<int> value);
    partial void OnMD2SequenceChanged();
    partial void OnMD3IncludeChanging(System.Nullable<bool> value);
    partial void OnMD3IncludeChanged();
    partial void OnMD3SequenceChanging(System.Nullable<int> value);
    partial void OnMD3SequenceChanged();
    partial void OnMD4IncludeChanging(System.Nullable<bool> value);
    partial void OnMD4IncludeChanged();
    partial void OnMD4SequenceChanging(System.Nullable<int> value);
    partial void OnMD4SequenceChanged();
    #endregion
		
		public QuotationFormSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long QuoteId
		{
			get
			{
				return this._QuoteId;
			}
			set
			{
				if ((this._QuoteId != value))
				{
					if (this._Quotation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteIdChanging(value);
					this.SendPropertyChanging();
					this._QuoteId = value;
					this.SendPropertyChanged("QuoteId");
					this.OnQuoteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> PriceInclude
		{
			get
			{
				return this._PriceInclude;
			}
			set
			{
				if ((this._PriceInclude != value))
				{
					this.OnPriceIncludeChanging(value);
					this.SendPropertyChanging();
					this._PriceInclude = value;
					this.SendPropertyChanged("PriceInclude");
					this.OnPriceIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> PriceSequence
		{
			get
			{
				return this._PriceSequence;
			}
			set
			{
				if ((this._PriceSequence != value))
				{
					this.OnPriceSequenceChanging(value);
					this.SendPropertyChanging();
					this._PriceSequence = value;
					this.SendPropertyChanged("PriceSequence");
					this.OnPriceSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> QuantityInclude
		{
			get
			{
				return this._QuantityInclude;
			}
			set
			{
				if ((this._QuantityInclude != value))
				{
					this.OnQuantityIncludeChanging(value);
					this.SendPropertyChanging();
					this._QuantityInclude = value;
					this.SendPropertyChanged("QuantityInclude");
					this.OnQuantityIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantitySequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> QuantitySequence
		{
			get
			{
				return this._QuantitySequence;
			}
			set
			{
				if ((this._QuantitySequence != value))
				{
					this.OnQuantitySequenceChanging(value);
					this.SendPropertyChanging();
					this._QuantitySequence = value;
					this.SendPropertyChanged("QuantitySequence");
					this.OnQuantitySequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixIdInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> MixIdInclude
		{
			get
			{
				return this._MixIdInclude;
			}
			set
			{
				if ((this._MixIdInclude != value))
				{
					this.OnMixIdIncludeChanging(value);
					this.SendPropertyChanging();
					this._MixIdInclude = value;
					this.SendPropertyChanged("MixIdInclude");
					this.OnMixIdIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixIdSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> MixIdSequence
		{
			get
			{
				return this._MixIdSequence;
			}
			set
			{
				if ((this._MixIdSequence != value))
				{
					this.OnMixIdSequenceChanging(value);
					this.SendPropertyChanging();
					this._MixIdSequence = value;
					this.SendPropertyChanged("MixIdSequence");
					this.OnMixIdSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> DescriptionInclude
		{
			get
			{
				return this._DescriptionInclude;
			}
			set
			{
				if ((this._DescriptionInclude != value))
				{
					this.OnDescriptionIncludeChanging(value);
					this.SendPropertyChanging();
					this._DescriptionInclude = value;
					this.SendPropertyChanged("DescriptionInclude");
					this.OnDescriptionIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> DescriptionSequence
		{
			get
			{
				return this._DescriptionSequence;
			}
			set
			{
				if ((this._DescriptionSequence != value))
				{
					this.OnDescriptionSequenceChanging(value);
					this.SendPropertyChanging();
					this._DescriptionSequence = value;
					this.SendPropertyChanged("DescriptionSequence");
					this.OnDescriptionSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsiInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> PsiInclude
		{
			get
			{
				return this._PsiInclude;
			}
			set
			{
				if ((this._PsiInclude != value))
				{
					this.OnPsiIncludeChanging(value);
					this.SendPropertyChanging();
					this._PsiInclude = value;
					this.SendPropertyChanged("PsiInclude");
					this.OnPsiIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsiSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> PsiSequence
		{
			get
			{
				return this._PsiSequence;
			}
			set
			{
				if ((this._PsiSequence != value))
				{
					this.OnPsiSequenceChanging(value);
					this.SendPropertyChanging();
					this._PsiSequence = value;
					this.SendPropertyChanged("PsiSequence");
					this.OnPsiSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicCommentsInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> PublicCommentsInclude
		{
			get
			{
				return this._PublicCommentsInclude;
			}
			set
			{
				if ((this._PublicCommentsInclude != value))
				{
					this.OnPublicCommentsIncludeChanging(value);
					this.SendPropertyChanging();
					this._PublicCommentsInclude = value;
					this.SendPropertyChanged("PublicCommentsInclude");
					this.OnPublicCommentsIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicCommentsSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<int> PublicCommentsSequence
		{
			get
			{
				return this._PublicCommentsSequence;
			}
			set
			{
				if ((this._PublicCommentsSequence != value))
				{
					this.OnPublicCommentsSequenceChanging(value);
					this.SendPropertyChanging();
					this._PublicCommentsSequence = value;
					this.SendPropertyChanged("PublicCommentsSequence");
					this.OnPublicCommentsSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlumpInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> SlumpInclude
		{
			get
			{
				return this._SlumpInclude;
			}
			set
			{
				if ((this._SlumpInclude != value))
				{
					this.OnSlumpIncludeChanging(value);
					this.SendPropertyChanging();
					this._SlumpInclude = value;
					this.SendPropertyChanged("SlumpInclude");
					this.OnSlumpIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlumpSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<int> SlumpSequence
		{
			get
			{
				return this._SlumpSequence;
			}
			set
			{
				if ((this._SlumpSequence != value))
				{
					this.OnSlumpSequenceChanging(value);
					this.SendPropertyChanging();
					this._SlumpSequence = value;
					this.SendPropertyChanged("SlumpSequence");
					this.OnSlumpSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<bool> AirInclude
		{
			get
			{
				return this._AirInclude;
			}
			set
			{
				if ((this._AirInclude != value))
				{
					this.OnAirIncludeChanging(value);
					this.SendPropertyChanging();
					this._AirInclude = value;
					this.SendPropertyChanged("AirInclude");
					this.OnAirIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> AirSequence
		{
			get
			{
				return this._AirSequence;
			}
			set
			{
				if ((this._AirSequence != value))
				{
					this.OnAirSequenceChanging(value);
					this.SendPropertyChanging();
					this._AirSequence = value;
					this.SendPropertyChanged("AirSequence");
					this.OnAirSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AshInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<bool> AshInclude
		{
			get
			{
				return this._AshInclude;
			}
			set
			{
				if ((this._AshInclude != value))
				{
					this.OnAshIncludeChanging(value);
					this.SendPropertyChanging();
					this._AshInclude = value;
					this.SendPropertyChanged("AshInclude");
					this.OnAshIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AshSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> AshSequence
		{
			get
			{
				return this._AshSequence;
			}
			set
			{
				if ((this._AshSequence != value))
				{
					this.OnAshSequenceChanging(value);
					this.SendPropertyChanging();
					this._AshSequence = value;
					this.SendPropertyChanged("AshSequence");
					this.OnAshSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineAggInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<bool> FineAggInclude
		{
			get
			{
				return this._FineAggInclude;
			}
			set
			{
				if ((this._FineAggInclude != value))
				{
					this.OnFineAggIncludeChanging(value);
					this.SendPropertyChanging();
					this._FineAggInclude = value;
					this.SendPropertyChanged("FineAggInclude");
					this.OnFineAggIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineAggSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<int> FineAggSequence
		{
			get
			{
				return this._FineAggSequence;
			}
			set
			{
				if ((this._FineAggSequence != value))
				{
					this.OnFineAggSequenceChanging(value);
					this.SendPropertyChanging();
					this._FineAggSequence = value;
					this.SendPropertyChanged("FineAggSequence");
					this.OnFineAggSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SacksInclude", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<bool> SacksInclude
		{
			get
			{
				return this._SacksInclude;
			}
			set
			{
				if ((this._SacksInclude != value))
				{
					this.OnSacksIncludeChanging(value);
					this.SendPropertyChanging();
					this._SacksInclude = value;
					this.SendPropertyChanged("SacksInclude");
					this.OnSacksIncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SacksSequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public System.Nullable<int> SacksSequence
		{
			get
			{
				return this._SacksSequence;
			}
			set
			{
				if ((this._SacksSequence != value))
				{
					this.OnSacksSequenceChanging(value);
					this.SendPropertyChanging();
					this._SacksSequence = value;
					this.SendPropertyChanged("SacksSequence");
					this.OnSacksSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD1Include", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<bool> MD1Include
		{
			get
			{
				return this._MD1Include;
			}
			set
			{
				if ((this._MD1Include != value))
				{
					this.OnMD1IncludeChanging(value);
					this.SendPropertyChanging();
					this._MD1Include = value;
					this.SendPropertyChanged("MD1Include");
					this.OnMD1IncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD1Sequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<int> MD1Sequence
		{
			get
			{
				return this._MD1Sequence;
			}
			set
			{
				if ((this._MD1Sequence != value))
				{
					this.OnMD1SequenceChanging(value);
					this.SendPropertyChanging();
					this._MD1Sequence = value;
					this.SendPropertyChanged("MD1Sequence");
					this.OnMD1SequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD2Include", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<bool> MD2Include
		{
			get
			{
				return this._MD2Include;
			}
			set
			{
				if ((this._MD2Include != value))
				{
					this.OnMD2IncludeChanging(value);
					this.SendPropertyChanging();
					this._MD2Include = value;
					this.SendPropertyChanged("MD2Include");
					this.OnMD2IncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD2Sequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<int> MD2Sequence
		{
			get
			{
				return this._MD2Sequence;
			}
			set
			{
				if ((this._MD2Sequence != value))
				{
					this.OnMD2SequenceChanging(value);
					this.SendPropertyChanging();
					this._MD2Sequence = value;
					this.SendPropertyChanged("MD2Sequence");
					this.OnMD2SequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD3Include", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public System.Nullable<bool> MD3Include
		{
			get
			{
				return this._MD3Include;
			}
			set
			{
				if ((this._MD3Include != value))
				{
					this.OnMD3IncludeChanging(value);
					this.SendPropertyChanging();
					this._MD3Include = value;
					this.SendPropertyChanged("MD3Include");
					this.OnMD3IncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD3Sequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<int> MD3Sequence
		{
			get
			{
				return this._MD3Sequence;
			}
			set
			{
				if ((this._MD3Sequence != value))
				{
					this.OnMD3SequenceChanging(value);
					this.SendPropertyChanging();
					this._MD3Sequence = value;
					this.SendPropertyChanged("MD3Sequence");
					this.OnMD3SequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD4Include", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public System.Nullable<bool> MD4Include
		{
			get
			{
				return this._MD4Include;
			}
			set
			{
				if ((this._MD4Include != value))
				{
					this.OnMD4IncludeChanging(value);
					this.SendPropertyChanging();
					this._MD4Include = value;
					this.SendPropertyChanged("MD4Include");
					this.OnMD4IncludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD4Sequence", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public System.Nullable<int> MD4Sequence
		{
			get
			{
				return this._MD4Sequence;
			}
			set
			{
				if ((this._MD4Sequence != value))
				{
					this.OnMD4SequenceChanging(value);
					this.SendPropertyChanging();
					this._MD4Sequence = value;
					this.SendPropertyChanged("MD4Sequence");
					this.OnMD4SequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationFormSetting", Storage="_Quotation", ThisKey="QuoteId", OtherKey="Id", IsForeignKey=true)]
		public Quotation Quotation
		{
			get
			{
				return this._Quotation.Entity;
			}
			set
			{
				Quotation previousValue = this._Quotation.Entity;
				if (((previousValue != value) 
							|| (this._Quotation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quotation.Entity = null;
						previousValue.QuotationFormSettings.Remove(this);
					}
					this._Quotation.Entity = value;
					if ((value != null))
					{
						value.QuotationFormSettings.Add(this);
						this._QuoteId = value.Id;
					}
					else
					{
						this._QuoteId = default(long);
					}
					this.SendPropertyChanged("Quotation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Quotation = default(EntityRef<Quotation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuotationMix")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class QuotationMix : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _QuotationId;
		
		private System.Nullable<int> _Position;
		
		private System.Nullable<long> _StandardMixId;
		
		private string _CustomMixId;
		
		private string _QuotedDescription;
		
		private System.Nullable<double> _Volume;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<double> _AvgLoad;
		
		private System.Nullable<decimal> _AddonCost;
		
		private System.Nullable<decimal> _MixCost;
		
		private System.Nullable<int> _Unload;
		
		private System.Nullable<decimal> _Spread;
		
		private System.Nullable<decimal> _Contribution;
		
		private System.Nullable<decimal> _Profit;
		
		private string _PrivateNotes;
		
		private string _PublicNotes;
		
		private System.Nullable<double> _CydHour;
		
		private EntitySet<CustomMixConstituent> _CustomMixConstituents;
		
		private EntitySet<MixLevelAddon> _MixLevelAddons;
		
		private EntityRef<Quotation> _Quotation;
		
		private EntityRef<StandardMix> _StandardMix;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnQuotationIdChanging(System.Nullable<long> value);
    partial void OnQuotationIdChanged();
    partial void OnPositionChanging(System.Nullable<int> value);
    partial void OnPositionChanged();
    partial void OnStandardMixIdChanging(System.Nullable<long> value);
    partial void OnStandardMixIdChanged();
    partial void OnCustomMixIdChanging(string value);
    partial void OnCustomMixIdChanged();
    partial void OnQuotedDescriptionChanging(string value);
    partial void OnQuotedDescriptionChanged();
    partial void OnVolumeChanging(System.Nullable<double> value);
    partial void OnVolumeChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnAvgLoadChanging(System.Nullable<double> value);
    partial void OnAvgLoadChanged();
    partial void OnAddonCostChanging(System.Nullable<decimal> value);
    partial void OnAddonCostChanged();
    partial void OnMixCostChanging(System.Nullable<decimal> value);
    partial void OnMixCostChanged();
    partial void OnUnloadChanging(System.Nullable<int> value);
    partial void OnUnloadChanged();
    partial void OnSpreadChanging(System.Nullable<decimal> value);
    partial void OnSpreadChanged();
    partial void OnContributionChanging(System.Nullable<decimal> value);
    partial void OnContributionChanged();
    partial void OnProfitChanging(System.Nullable<decimal> value);
    partial void OnProfitChanged();
    partial void OnPrivateNotesChanging(string value);
    partial void OnPrivateNotesChanged();
    partial void OnPublicNotesChanging(string value);
    partial void OnPublicNotesChanged();
    partial void OnCydHourChanging(System.Nullable<double> value);
    partial void OnCydHourChanged();
    #endregion
		
		public QuotationMix()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<long> QuotationId
		{
			get
			{
				return this._QuotationId;
			}
			set
			{
				if ((this._QuotationId != value))
				{
					if (this._Quotation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationIdChanging(value);
					this.SendPropertyChanging();
					this._QuotationId = value;
					this.SendPropertyChanged("QuotationId");
					this.OnQuotationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardMixId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<long> StandardMixId
		{
			get
			{
				return this._StandardMixId;
			}
			set
			{
				if ((this._StandardMixId != value))
				{
					if (this._StandardMix.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStandardMixIdChanging(value);
					this.SendPropertyChanging();
					this._StandardMixId = value;
					this.SendPropertyChanged("StandardMixId");
					this.OnStandardMixIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomMixId", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CustomMixId
		{
			get
			{
				return this._CustomMixId;
			}
			set
			{
				if ((this._CustomMixId != value))
				{
					this.OnCustomMixIdChanging(value);
					this.SendPropertyChanging();
					this._CustomMixId = value;
					this.SendPropertyChanged("CustomMixId");
					this.OnCustomMixIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotedDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string QuotedDescription
		{
			get
			{
				return this._QuotedDescription;
			}
			set
			{
				if ((this._QuotedDescription != value))
				{
					this.OnQuotedDescriptionChanging(value);
					this.SendPropertyChanging();
					this._QuotedDescription = value;
					this.SendPropertyChanged("QuotedDescription");
					this.OnQuotedDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<double> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgLoad", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<double> AvgLoad
		{
			get
			{
				return this._AvgLoad;
			}
			set
			{
				if ((this._AvgLoad != value))
				{
					this.OnAvgLoadChanging(value);
					this.SendPropertyChanging();
					this._AvgLoad = value;
					this.SendPropertyChanged("AvgLoad");
					this.OnAvgLoadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonCost", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<decimal> AddonCost
		{
			get
			{
				return this._AddonCost;
			}
			set
			{
				if ((this._AddonCost != value))
				{
					this.OnAddonCostChanging(value);
					this.SendPropertyChanging();
					this._AddonCost = value;
					this.SendPropertyChanged("AddonCost");
					this.OnAddonCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixCost", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> MixCost
		{
			get
			{
				return this._MixCost;
			}
			set
			{
				if ((this._MixCost != value))
				{
					this.OnMixCostChanging(value);
					this.SendPropertyChanging();
					this._MixCost = value;
					this.SendPropertyChanged("MixCost");
					this.OnMixCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unload", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> Unload
		{
			get
			{
				return this._Unload;
			}
			set
			{
				if ((this._Unload != value))
				{
					this.OnUnloadChanging(value);
					this.SendPropertyChanging();
					this._Unload = value;
					this.SendPropertyChanged("Unload");
					this.OnUnloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spread", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<decimal> Spread
		{
			get
			{
				return this._Spread;
			}
			set
			{
				if ((this._Spread != value))
				{
					this.OnSpreadChanging(value);
					this.SendPropertyChanging();
					this._Spread = value;
					this.SendPropertyChanged("Spread");
					this.OnSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contribution", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<decimal> Contribution
		{
			get
			{
				return this._Contribution;
			}
			set
			{
				if ((this._Contribution != value))
				{
					this.OnContributionChanging(value);
					this.SendPropertyChanging();
					this._Contribution = value;
					this.SendPropertyChanged("Contribution");
					this.OnContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Money")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<decimal> Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivateNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string PrivateNotes
		{
			get
			{
				return this._PrivateNotes;
			}
			set
			{
				if ((this._PrivateNotes != value))
				{
					this.OnPrivateNotesChanging(value);
					this.SendPropertyChanging();
					this._PrivateNotes = value;
					this.SendPropertyChanged("PrivateNotes");
					this.OnPrivateNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string PublicNotes
		{
			get
			{
				return this._PublicNotes;
			}
			set
			{
				if ((this._PublicNotes != value))
				{
					this.OnPublicNotesChanging(value);
					this.SendPropertyChanging();
					this._PublicNotes = value;
					this.SendPropertyChanged("PublicNotes");
					this.OnPublicNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CydHour", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<double> CydHour
		{
			get
			{
				return this._CydHour;
			}
			set
			{
				if ((this._CydHour != value))
				{
					this.OnCydHourChanging(value);
					this.SendPropertyChanging();
					this._CydHour = value;
					this.SendPropertyChanged("CydHour");
					this.OnCydHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuotationMix_CustomMixConstituent", Storage="_CustomMixConstituents", ThisKey="Id", OtherKey="QuotationMixId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<CustomMixConstituent> CustomMixConstituents
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomMixConstituents.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomMixConstituents;
			}
			set
			{
				this._CustomMixConstituents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuotationMix_MixLevelAddon", Storage="_MixLevelAddons", ThisKey="Id", OtherKey="QuotationMixId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<MixLevelAddon> MixLevelAddons
		{
			get
			{
				if ((this.serializing 
							&& (this._MixLevelAddons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MixLevelAddons;
			}
			set
			{
				this._MixLevelAddons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuotationMix", Storage="_Quotation", ThisKey="QuotationId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Quotation Quotation
		{
			get
			{
				return this._Quotation.Entity;
			}
			set
			{
				Quotation previousValue = this._Quotation.Entity;
				if (((previousValue != value) 
							|| (this._Quotation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quotation.Entity = null;
						previousValue.QuotationMixes.Remove(this);
					}
					this._Quotation.Entity = value;
					if ((value != null))
					{
						value.QuotationMixes.Add(this);
						this._QuotationId = value.Id;
					}
					else
					{
						this._QuotationId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Quotation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardMix_QuotationMix", Storage="_StandardMix", ThisKey="StandardMixId", OtherKey="Id", IsForeignKey=true)]
		public StandardMix StandardMix
		{
			get
			{
				return this._StandardMix.Entity;
			}
			set
			{
				StandardMix previousValue = this._StandardMix.Entity;
				if (((previousValue != value) 
							|| (this._StandardMix.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardMix.Entity = null;
						previousValue.QuotationMixes.Remove(this);
					}
					this._StandardMix.Entity = value;
					if ((value != null))
					{
						value.QuotationMixes.Add(this);
						this._StandardMixId = value.Id;
					}
					else
					{
						this._StandardMixId = default(Nullable<long>);
					}
					this.SendPropertyChanged("StandardMix");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomMixConstituents(CustomMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.QuotationMix = this;
		}
		
		private void detach_CustomMixConstituents(CustomMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.QuotationMix = null;
		}
		
		private void attach_MixLevelAddons(MixLevelAddon entity)
		{
			this.SendPropertyChanging();
			entity.QuotationMix = this;
		}
		
		private void detach_MixLevelAddons(MixLevelAddon entity)
		{
			this.SendPropertyChanging();
			entity.QuotationMix = null;
		}
		
		private void Initialize()
		{
			this._CustomMixConstituents = new EntitySet<CustomMixConstituent>(new Action<CustomMixConstituent>(this.attach_CustomMixConstituents), new Action<CustomMixConstituent>(this.detach_CustomMixConstituents));
			this._MixLevelAddons = new EntitySet<MixLevelAddon>(new Action<MixLevelAddon>(this.attach_MixLevelAddons), new Action<MixLevelAddon>(this.detach_MixLevelAddons));
			this._Quotation = default(EntityRef<Quotation>);
			this._StandardMix = default(EntityRef<StandardMix>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuotationRecipent")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class QuotationRecipent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Guid _UserId;
		
		private System.Nullable<bool> _QuotationAccess;
		
		private System.Nullable<double> _QuotationLimit;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnQuotationAccessChanging(System.Nullable<bool> value);
    partial void OnQuotationAccessChanged();
    partial void OnQuotationLimitChanging(System.Nullable<double> value);
    partial void OnQuotationLimitChanged();
    #endregion
		
		public QuotationRecipent()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationAccess", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> QuotationAccess
		{
			get
			{
				return this._QuotationAccess;
			}
			set
			{
				if ((this._QuotationAccess != value))
				{
					this.OnQuotationAccessChanging(value);
					this.SendPropertyChanging();
					this._QuotationAccess = value;
					this.SendPropertyChanged("QuotationAccess");
					this.OnQuotationAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationLimit", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<double> QuotationLimit
		{
			get
			{
				return this._QuotationLimit;
			}
			set
			{
				if ((this._QuotationLimit != value))
				{
					this.OnQuotationLimitChanging(value);
					this.SendPropertyChanging();
					this._QuotationLimit = value;
					this.SendPropertyChanged("QuotationLimit");
					this.OnQuotationLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_QuotationRecipent", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.QuotationRecipents.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.QuotationRecipents.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuoteAuditLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class QuoteAuditLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _QuotationId;
		
		private string _Text;
		
		private string _Username;
		
		private System.DateTime _CreatedOn;
		
		private string _ReferenceLink;
		
		private EntityRef<Quotation> _Quotation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnQuotationIdChanging(long value);
    partial void OnQuotationIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnReferenceLinkChanging(string value);
    partial void OnReferenceLinkChanged();
    #endregion
		
		public QuoteAuditLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long QuotationId
		{
			get
			{
				return this._QuotationId;
			}
			set
			{
				if ((this._QuotationId != value))
				{
					if (this._Quotation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationIdChanging(value);
					this.SendPropertyChanging();
					this._QuotationId = value;
					this.SendPropertyChanged("QuotationId");
					this.OnQuotationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceLink", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ReferenceLink
		{
			get
			{
				return this._ReferenceLink;
			}
			set
			{
				if ((this._ReferenceLink != value))
				{
					this.OnReferenceLinkChanging(value);
					this.SendPropertyChanging();
					this._ReferenceLink = value;
					this.SendPropertyChanged("ReferenceLink");
					this.OnReferenceLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_QuoteAuditLog", Storage="_Quotation", ThisKey="QuotationId", OtherKey="Id", IsForeignKey=true)]
		public Quotation Quotation
		{
			get
			{
				return this._Quotation.Entity;
			}
			set
			{
				Quotation previousValue = this._Quotation.Entity;
				if (((previousValue != value) 
							|| (this._Quotation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quotation.Entity = null;
						previousValue.QuoteAuditLogs.Remove(this);
					}
					this._Quotation.Entity = value;
					if ((value != null))
					{
						value.QuoteAuditLogs.Add(this);
						this._QuotationId = value.Id;
					}
					else
					{
						this._QuotationId = default(long);
					}
					this.SendPropertyChanged("Quotation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Quotation = default(EntityRef<Quotation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RawMaterial")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RawMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _MaterialCode;
		
		private string _Description;
		
		private long _RawMaterialTypeId;
		
		private bool _Active;
		
		private string _MeasurementType;
		
		private System.Nullable<double> _FSKMarkup;
		
		private string _FSKCode;
		
		private string _DispatchId;
		
		private System.Nullable<bool> _Synced;
		
		private EntitySet<CustomMixConstituent> _CustomMixConstituents;
		
		private EntitySet<RawMaterialCostProjection> _RawMaterialCostProjections;
		
		private EntitySet<StandardMixConstituent> _StandardMixConstituents;
		
		private EntityRef<RawMaterialType> _RawMaterialType;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnMaterialCodeChanging(string value);
    partial void OnMaterialCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRawMaterialTypeIdChanging(long value);
    partial void OnRawMaterialTypeIdChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnMeasurementTypeChanging(string value);
    partial void OnMeasurementTypeChanged();
    partial void OnFSKMarkupChanging(System.Nullable<double> value);
    partial void OnFSKMarkupChanged();
    partial void OnFSKCodeChanging(string value);
    partial void OnFSKCodeChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnSyncedChanging(System.Nullable<bool> value);
    partial void OnSyncedChanged();
    #endregion
		
		public RawMaterial()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCode", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MaterialCode
		{
			get
			{
				return this._MaterialCode;
			}
			set
			{
				if ((this._MaterialCode != value))
				{
					this.OnMaterialCodeChanging(value);
					this.SendPropertyChanging();
					this._MaterialCode = value;
					this.SendPropertyChanged("MaterialCode");
					this.OnMaterialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawMaterialTypeId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long RawMaterialTypeId
		{
			get
			{
				return this._RawMaterialTypeId;
			}
			set
			{
				if ((this._RawMaterialTypeId != value))
				{
					if (this._RawMaterialType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRawMaterialTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RawMaterialTypeId = value;
					this.SendPropertyChanged("RawMaterialTypeId");
					this.OnRawMaterialTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasurementType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string MeasurementType
		{
			get
			{
				return this._MeasurementType;
			}
			set
			{
				if ((this._MeasurementType != value))
				{
					this.OnMeasurementTypeChanging(value);
					this.SendPropertyChanging();
					this._MeasurementType = value;
					this.SendPropertyChanged("MeasurementType");
					this.OnMeasurementTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FSKMarkup", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<double> FSKMarkup
		{
			get
			{
				return this._FSKMarkup;
			}
			set
			{
				if ((this._FSKMarkup != value))
				{
					this.OnFSKMarkupChanging(value);
					this.SendPropertyChanging();
					this._FSKMarkup = value;
					this.SendPropertyChanged("FSKMarkup");
					this.OnFSKMarkupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FSKCode", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string FSKCode
		{
			get
			{
				return this._FSKCode;
			}
			set
			{
				if ((this._FSKCode != value))
				{
					this.OnFSKCodeChanging(value);
					this.SendPropertyChanging();
					this._FSKCode = value;
					this.SendPropertyChanged("FSKCode");
					this.OnFSKCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synced", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> Synced
		{
			get
			{
				return this._Synced;
			}
			set
			{
				if ((this._Synced != value))
				{
					this.OnSyncedChanging(value);
					this.SendPropertyChanging();
					this._Synced = value;
					this.SendPropertyChanged("Synced");
					this.OnSyncedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RawMaterial_CustomMixConstituent", Storage="_CustomMixConstituents", ThisKey="Id", OtherKey="RawMaterialId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<CustomMixConstituent> CustomMixConstituents
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomMixConstituents.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomMixConstituents;
			}
			set
			{
				this._CustomMixConstituents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RawMaterial_RawMaterialCostProjection", Storage="_RawMaterialCostProjections", ThisKey="Id", OtherKey="RawMaterialId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<RawMaterialCostProjection> RawMaterialCostProjections
		{
			get
			{
				if ((this.serializing 
							&& (this._RawMaterialCostProjections.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RawMaterialCostProjections;
			}
			set
			{
				this._RawMaterialCostProjections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RawMaterial_StandardMixConstituent", Storage="_StandardMixConstituents", ThisKey="Id", OtherKey="RawMaterialId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<StandardMixConstituent> StandardMixConstituents
		{
			get
			{
				if ((this.serializing 
							&& (this._StandardMixConstituents.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StandardMixConstituents;
			}
			set
			{
				this._StandardMixConstituents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RawMaterialType_RawMaterial", Storage="_RawMaterialType", ThisKey="RawMaterialTypeId", OtherKey="Id", IsForeignKey=true)]
		public RawMaterialType RawMaterialType
		{
			get
			{
				return this._RawMaterialType.Entity;
			}
			set
			{
				RawMaterialType previousValue = this._RawMaterialType.Entity;
				if (((previousValue != value) 
							|| (this._RawMaterialType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RawMaterialType.Entity = null;
						previousValue.RawMaterials.Remove(this);
					}
					this._RawMaterialType.Entity = value;
					if ((value != null))
					{
						value.RawMaterials.Add(this);
						this._RawMaterialTypeId = value.Id;
					}
					else
					{
						this._RawMaterialTypeId = default(long);
					}
					this.SendPropertyChanged("RawMaterialType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomMixConstituents(CustomMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.RawMaterial = this;
		}
		
		private void detach_CustomMixConstituents(CustomMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.RawMaterial = null;
		}
		
		private void attach_RawMaterialCostProjections(RawMaterialCostProjection entity)
		{
			this.SendPropertyChanging();
			entity.RawMaterial = this;
		}
		
		private void detach_RawMaterialCostProjections(RawMaterialCostProjection entity)
		{
			this.SendPropertyChanging();
			entity.RawMaterial = null;
		}
		
		private void attach_StandardMixConstituents(StandardMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.RawMaterial = this;
		}
		
		private void detach_StandardMixConstituents(StandardMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.RawMaterial = null;
		}
		
		private void Initialize()
		{
			this._CustomMixConstituents = new EntitySet<CustomMixConstituent>(new Action<CustomMixConstituent>(this.attach_CustomMixConstituents), new Action<CustomMixConstituent>(this.detach_CustomMixConstituents));
			this._RawMaterialCostProjections = new EntitySet<RawMaterialCostProjection>(new Action<RawMaterialCostProjection>(this.attach_RawMaterialCostProjections), new Action<RawMaterialCostProjection>(this.detach_RawMaterialCostProjections));
			this._StandardMixConstituents = new EntitySet<StandardMixConstituent>(new Action<StandardMixConstituent>(this.attach_StandardMixConstituents), new Action<StandardMixConstituent>(this.detach_StandardMixConstituents));
			this._RawMaterialType = default(EntityRef<RawMaterialType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RawMaterialCostProjection")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RawMaterialCostProjection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _RawMaterialId;
		
		private int _PlantId;
		
		private System.DateTime _ChangeDate;
		
		private decimal _Cost;
		
		private long _UomId;
		
		private EntityRef<Plant> _Plant;
		
		private EntityRef<RawMaterial> _RawMaterial;
		
		private EntityRef<Uom> _Uom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRawMaterialIdChanging(long value);
    partial void OnRawMaterialIdChanged();
    partial void OnPlantIdChanging(int value);
    partial void OnPlantIdChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnUomIdChanging(long value);
    partial void OnUomIdChanged();
    #endregion
		
		public RawMaterialCostProjection()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawMaterialId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long RawMaterialId
		{
			get
			{
				return this._RawMaterialId;
			}
			set
			{
				if ((this._RawMaterialId != value))
				{
					if (this._RawMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRawMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._RawMaterialId = value;
					this.SendPropertyChanged("RawMaterialId");
					this.OnRawMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					if (this._Plant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlantIdChanging(value);
					this.SendPropertyChanging();
					this._PlantId = value;
					this.SendPropertyChanged("PlantId");
					this.OnPlantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UomId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public long UomId
		{
			get
			{
				return this._UomId;
			}
			set
			{
				if ((this._UomId != value))
				{
					if (this._Uom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUomIdChanging(value);
					this.SendPropertyChanging();
					this._UomId = value;
					this.SendPropertyChanged("UomId");
					this.OnUomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plant_RawMaterialCostProjection", Storage="_Plant", ThisKey="PlantId", OtherKey="PlantId", IsForeignKey=true)]
		public Plant Plant
		{
			get
			{
				return this._Plant.Entity;
			}
			set
			{
				Plant previousValue = this._Plant.Entity;
				if (((previousValue != value) 
							|| (this._Plant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plant.Entity = null;
						previousValue.RawMaterialCostProjections.Remove(this);
					}
					this._Plant.Entity = value;
					if ((value != null))
					{
						value.RawMaterialCostProjections.Add(this);
						this._PlantId = value.PlantId;
					}
					else
					{
						this._PlantId = default(int);
					}
					this.SendPropertyChanged("Plant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RawMaterial_RawMaterialCostProjection", Storage="_RawMaterial", ThisKey="RawMaterialId", OtherKey="Id", IsForeignKey=true)]
		public RawMaterial RawMaterial
		{
			get
			{
				return this._RawMaterial.Entity;
			}
			set
			{
				RawMaterial previousValue = this._RawMaterial.Entity;
				if (((previousValue != value) 
							|| (this._RawMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RawMaterial.Entity = null;
						previousValue.RawMaterialCostProjections.Remove(this);
					}
					this._RawMaterial.Entity = value;
					if ((value != null))
					{
						value.RawMaterialCostProjections.Add(this);
						this._RawMaterialId = value.Id;
					}
					else
					{
						this._RawMaterialId = default(long);
					}
					this.SendPropertyChanged("RawMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_RawMaterialCostProjection", Storage="_Uom", ThisKey="UomId", OtherKey="Id", IsForeignKey=true)]
		public Uom Uom
		{
			get
			{
				return this._Uom.Entity;
			}
			set
			{
				Uom previousValue = this._Uom.Entity;
				if (((previousValue != value) 
							|| (this._Uom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uom.Entity = null;
						previousValue.RawMaterialCostProjections.Remove(this);
					}
					this._Uom.Entity = value;
					if ((value != null))
					{
						value.RawMaterialCostProjections.Add(this);
						this._UomId = value.Id;
					}
					else
					{
						this._UomId = default(long);
					}
					this.SendPropertyChanged("Uom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Plant = default(EntityRef<Plant>);
			this._RawMaterial = default(EntityRef<RawMaterial>);
			this._Uom = default(EntityRef<Uom>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RawMaterialType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RawMaterialType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private System.Nullable<bool> _IsCementitious;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _IncludeInFSK;
		
		private System.Nullable<bool> _IncludeInSackCalculation;
		
		private string _DispatchId;
		
		private System.Nullable<bool> _Synced;
		
		private System.Nullable<bool> _IncludeInAshCalculation;
		
		private System.Nullable<bool> _IncludeInSandCalculation;
		
		private System.Nullable<bool> _IncludeInRockCalculation;
		
		private EntitySet<RawMaterial> _RawMaterials;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsCementitiousChanging(System.Nullable<bool> value);
    partial void OnIsCementitiousChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnIncludeInFSKChanging(System.Nullable<bool> value);
    partial void OnIncludeInFSKChanged();
    partial void OnIncludeInSackCalculationChanging(System.Nullable<bool> value);
    partial void OnIncludeInSackCalculationChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnSyncedChanging(System.Nullable<bool> value);
    partial void OnSyncedChanged();
    partial void OnIncludeInAshCalculationChanging(System.Nullable<bool> value);
    partial void OnIncludeInAshCalculationChanged();
    partial void OnIncludeInSandCalculationChanging(System.Nullable<bool> value);
    partial void OnIncludeInSandCalculationChanged();
    partial void OnIncludeInRockCalculationChanging(System.Nullable<bool> value);
    partial void OnIncludeInRockCalculationChanged();
    #endregion
		
		public RawMaterialType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCementitious", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> IsCementitious
		{
			get
			{
				return this._IsCementitious;
			}
			set
			{
				if ((this._IsCementitious != value))
				{
					this.OnIsCementitiousChanging(value);
					this.SendPropertyChanging();
					this._IsCementitious = value;
					this.SendPropertyChanged("IsCementitious");
					this.OnIsCementitiousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeInFSK", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> IncludeInFSK
		{
			get
			{
				return this._IncludeInFSK;
			}
			set
			{
				if ((this._IncludeInFSK != value))
				{
					this.OnIncludeInFSKChanging(value);
					this.SendPropertyChanging();
					this._IncludeInFSK = value;
					this.SendPropertyChanged("IncludeInFSK");
					this.OnIncludeInFSKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeInSackCalculation", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IncludeInSackCalculation
		{
			get
			{
				return this._IncludeInSackCalculation;
			}
			set
			{
				if ((this._IncludeInSackCalculation != value))
				{
					this.OnIncludeInSackCalculationChanging(value);
					this.SendPropertyChanging();
					this._IncludeInSackCalculation = value;
					this.SendPropertyChanged("IncludeInSackCalculation");
					this.OnIncludeInSackCalculationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synced", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> Synced
		{
			get
			{
				return this._Synced;
			}
			set
			{
				if ((this._Synced != value))
				{
					this.OnSyncedChanging(value);
					this.SendPropertyChanging();
					this._Synced = value;
					this.SendPropertyChanged("Synced");
					this.OnSyncedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeInAshCalculation", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> IncludeInAshCalculation
		{
			get
			{
				return this._IncludeInAshCalculation;
			}
			set
			{
				if ((this._IncludeInAshCalculation != value))
				{
					this.OnIncludeInAshCalculationChanging(value);
					this.SendPropertyChanging();
					this._IncludeInAshCalculation = value;
					this.SendPropertyChanged("IncludeInAshCalculation");
					this.OnIncludeInAshCalculationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeInSandCalculation", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> IncludeInSandCalculation
		{
			get
			{
				return this._IncludeInSandCalculation;
			}
			set
			{
				if ((this._IncludeInSandCalculation != value))
				{
					this.OnIncludeInSandCalculationChanging(value);
					this.SendPropertyChanging();
					this._IncludeInSandCalculation = value;
					this.SendPropertyChanged("IncludeInSandCalculation");
					this.OnIncludeInSandCalculationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeInRockCalculation", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> IncludeInRockCalculation
		{
			get
			{
				return this._IncludeInRockCalculation;
			}
			set
			{
				if ((this._IncludeInRockCalculation != value))
				{
					this.OnIncludeInRockCalculationChanging(value);
					this.SendPropertyChanging();
					this._IncludeInRockCalculation = value;
					this.SendPropertyChanged("IncludeInRockCalculation");
					this.OnIncludeInRockCalculationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RawMaterialType_RawMaterial", Storage="_RawMaterials", ThisKey="Id", OtherKey="RawMaterialTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<RawMaterial> RawMaterials
		{
			get
			{
				if ((this.serializing 
							&& (this._RawMaterials.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RawMaterials;
			}
			set
			{
				this._RawMaterials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RawMaterials(RawMaterial entity)
		{
			this.SendPropertyChanging();
			entity.RawMaterialType = this;
		}
		
		private void detach_RawMaterials(RawMaterial entity)
		{
			this.SendPropertyChanging();
			entity.RawMaterialType = null;
		}
		
		private void Initialize()
		{
			this._RawMaterials = new EntitySet<RawMaterial>(new Action<RawMaterial>(this.attach_RawMaterials), new Action<RawMaterial>(this.detach_RawMaterials));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReasonsForLoss")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ReasonsForLoss : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReasonLostId;
		
		private int _CompanyId;
		
		private string _Reason;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Project> _Projects;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReasonLostIdChanging(int value);
    partial void OnReasonLostIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public ReasonsForLoss()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonLostId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ReasonLostId
		{
			get
			{
				return this._ReasonLostId;
			}
			set
			{
				if ((this._ReasonLostId != value))
				{
					this.OnReasonLostIdChanging(value);
					this.SendPropertyChanging();
					this._ReasonLostId = value;
					this.SendPropertyChanged("ReasonLostId");
					this.OnReasonLostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReasonsForLoss_Project", Storage="_Projects", ThisKey="ReasonLostId", OtherKey="ReasonLostId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<Project> Projects
		{
			get
			{
				if ((this.serializing 
							&& (this._Projects.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ReasonsForLoss = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ReasonsForLoss = null;
		}
		
		private void Initialize()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegionId;
		
		private int _CompanyId;
		
		private string _Name;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<District> _Districts;
		
		private EntityRef<Company> _Company;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Region()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_District", Storage="_Districts", ThisKey="RegionId", OtherKey="RegionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<District> Districts
		{
			get
			{
				if ((this.serializing 
							&& (this._Districts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Districts;
			}
			set
			{
				this._Districts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Region", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Regions.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Regions.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
		
		private void Initialize()
		{
			this._Districts = new EntitySet<District>(new Action<District>(this.attach_Districts), new Action<District>(this.detach_Districts));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportColumnConfig")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ReportColumnConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ReportId;
		
		private string _DisplayName;
		
		private string _ColumnName;
		
		private int _Position;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<int> _MetricDefinitionId;
		
		private string _EntityName;
		
		private System.Nullable<long> _EntityRefId;
		
		private System.Nullable<bool> _ColumnOrderAsc;
		
		private System.Nullable<int> _TopRowCount;
		
		private System.Nullable<bool> _IsRowCountPercentage;
		
		private EntityRef<ReportSetting> _ReportSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(long value);
    partial void OnReportIdChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnMetricDefinitionIdChanging(System.Nullable<int> value);
    partial void OnMetricDefinitionIdChanged();
    partial void OnEntityNameChanging(string value);
    partial void OnEntityNameChanged();
    partial void OnEntityRefIdChanging(System.Nullable<long> value);
    partial void OnEntityRefIdChanged();
    partial void OnColumnOrderAscChanging(System.Nullable<bool> value);
    partial void OnColumnOrderAscChanged();
    partial void OnTopRowCountChanging(System.Nullable<int> value);
    partial void OnTopRowCountChanged();
    partial void OnIsRowCountPercentageChanging(System.Nullable<bool> value);
    partial void OnIsRowCountPercentageChanged();
    #endregion
		
		public ReportColumnConfig()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					if (this._ReportSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetricDefinitionId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> MetricDefinitionId
		{
			get
			{
				return this._MetricDefinitionId;
			}
			set
			{
				if ((this._MetricDefinitionId != value))
				{
					this.OnMetricDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._MetricDefinitionId = value;
					this.SendPropertyChanged("MetricDefinitionId");
					this.OnMetricDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityName", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string EntityName
		{
			get
			{
				return this._EntityName;
			}
			set
			{
				if ((this._EntityName != value))
				{
					this.OnEntityNameChanging(value);
					this.SendPropertyChanging();
					this._EntityName = value;
					this.SendPropertyChanged("EntityName");
					this.OnEntityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityRefId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<long> EntityRefId
		{
			get
			{
				return this._EntityRefId;
			}
			set
			{
				if ((this._EntityRefId != value))
				{
					this.OnEntityRefIdChanging(value);
					this.SendPropertyChanging();
					this._EntityRefId = value;
					this.SendPropertyChanged("EntityRefId");
					this.OnEntityRefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnOrderAsc", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> ColumnOrderAsc
		{
			get
			{
				return this._ColumnOrderAsc;
			}
			set
			{
				if ((this._ColumnOrderAsc != value))
				{
					this.OnColumnOrderAscChanging(value);
					this.SendPropertyChanging();
					this._ColumnOrderAsc = value;
					this.SendPropertyChanged("ColumnOrderAsc");
					this.OnColumnOrderAscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopRowCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> TopRowCount
		{
			get
			{
				return this._TopRowCount;
			}
			set
			{
				if ((this._TopRowCount != value))
				{
					this.OnTopRowCountChanging(value);
					this.SendPropertyChanging();
					this._TopRowCount = value;
					this.SendPropertyChanged("TopRowCount");
					this.OnTopRowCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRowCountPercentage", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> IsRowCountPercentage
		{
			get
			{
				return this._IsRowCountPercentage;
			}
			set
			{
				if ((this._IsRowCountPercentage != value))
				{
					this.OnIsRowCountPercentageChanging(value);
					this.SendPropertyChanging();
					this._IsRowCountPercentage = value;
					this.SendPropertyChanged("IsRowCountPercentage");
					this.OnIsRowCountPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportSetting_ReportColumnConfig", Storage="_ReportSetting", ThisKey="ReportId", OtherKey="Id", IsForeignKey=true)]
		public ReportSetting ReportSetting
		{
			get
			{
				return this._ReportSetting.Entity;
			}
			set
			{
				ReportSetting previousValue = this._ReportSetting.Entity;
				if (((previousValue != value) 
							|| (this._ReportSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportSetting.Entity = null;
						previousValue.ReportColumnConfigs.Remove(this);
					}
					this._ReportSetting.Entity = value;
					if ((value != null))
					{
						value.ReportColumnConfigs.Add(this);
						this._ReportId = value.Id;
					}
					else
					{
						this._ReportId = default(long);
					}
					this.SendPropertyChanged("ReportSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ReportSetting = default(EntityRef<ReportSetting>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportFilterSetting")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ReportFilterSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ReportId;
		
		private string _EntityType;
		
		private long _EntityRefId;
		
		private System.DateTime _CreatedAt;
		
		private EntityRef<ReportSetting> _ReportSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(long value);
    partial void OnReportIdChanged();
    partial void OnEntityTypeChanging(string value);
    partial void OnEntityTypeChanged();
    partial void OnEntityRefIdChanging(long value);
    partial void OnEntityRefIdChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public ReportFilterSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					if (this._ReportSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string EntityType
		{
			get
			{
				return this._EntityType;
			}
			set
			{
				if ((this._EntityType != value))
				{
					this.OnEntityTypeChanging(value);
					this.SendPropertyChanging();
					this._EntityType = value;
					this.SendPropertyChanged("EntityType");
					this.OnEntityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityRefId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long EntityRefId
		{
			get
			{
				return this._EntityRefId;
			}
			set
			{
				if ((this._EntityRefId != value))
				{
					this.OnEntityRefIdChanging(value);
					this.SendPropertyChanging();
					this._EntityRefId = value;
					this.SendPropertyChanged("EntityRefId");
					this.OnEntityRefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportSetting_ReportFilterSetting", Storage="_ReportSetting", ThisKey="ReportId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ReportSetting ReportSetting
		{
			get
			{
				return this._ReportSetting.Entity;
			}
			set
			{
				ReportSetting previousValue = this._ReportSetting.Entity;
				if (((previousValue != value) 
							|| (this._ReportSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportSetting.Entity = null;
						previousValue.ReportFilterSettings.Remove(this);
					}
					this._ReportSetting.Entity = value;
					if ((value != null))
					{
						value.ReportFilterSettings.Add(this);
						this._ReportId = value.Id;
					}
					else
					{
						this._ReportId = default(long);
					}
					this.SendPropertyChanged("ReportSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ReportSetting = default(EntityRef<ReportSetting>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportRowConfig")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ReportRowConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ReportId;
		
		private string _DisplayName;
		
		private System.Nullable<int> _MetricDefinitionId;
		
		private string _RowType;
		
		private int _Position;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<bool> _IsHorizontalSeperator;
		
		private System.Nullable<decimal> _OkLimit;
		
		private System.Nullable<decimal> _CautionLimit;
		
		private System.Nullable<decimal> _WarningLimit;
		
		private System.Nullable<bool> _ShowActionIcons;
		
		private System.Nullable<int> _ComparisonMetricId;
		
		private System.Nullable<bool> _IsVarianceColumn;
		
		private EntityRef<MetricDefinition> _MetricDefinition;
		
		private EntityRef<ReportSetting> _ReportSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(long value);
    partial void OnReportIdChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnMetricDefinitionIdChanging(System.Nullable<int> value);
    partial void OnMetricDefinitionIdChanged();
    partial void OnRowTypeChanging(string value);
    partial void OnRowTypeChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnIsHorizontalSeperatorChanging(System.Nullable<bool> value);
    partial void OnIsHorizontalSeperatorChanged();
    partial void OnOkLimitChanging(System.Nullable<decimal> value);
    partial void OnOkLimitChanged();
    partial void OnCautionLimitChanging(System.Nullable<decimal> value);
    partial void OnCautionLimitChanged();
    partial void OnWarningLimitChanging(System.Nullable<decimal> value);
    partial void OnWarningLimitChanged();
    partial void OnShowActionIconsChanging(System.Nullable<bool> value);
    partial void OnShowActionIconsChanged();
    partial void OnComparisonMetricIdChanging(System.Nullable<int> value);
    partial void OnComparisonMetricIdChanged();
    partial void OnIsVarianceColumnChanging(System.Nullable<bool> value);
    partial void OnIsVarianceColumnChanged();
    #endregion
		
		public ReportRowConfig()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					if (this._ReportSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetricDefinitionId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> MetricDefinitionId
		{
			get
			{
				return this._MetricDefinitionId;
			}
			set
			{
				if ((this._MetricDefinitionId != value))
				{
					if (this._MetricDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMetricDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._MetricDefinitionId = value;
					this.SendPropertyChanged("MetricDefinitionId");
					this.OnMetricDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowType", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string RowType
		{
			get
			{
				return this._RowType;
			}
			set
			{
				if ((this._RowType != value))
				{
					this.OnRowTypeChanging(value);
					this.SendPropertyChanging();
					this._RowType = value;
					this.SendPropertyChanged("RowType");
					this.OnRowTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHorizontalSeperator", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> IsHorizontalSeperator
		{
			get
			{
				return this._IsHorizontalSeperator;
			}
			set
			{
				if ((this._IsHorizontalSeperator != value))
				{
					this.OnIsHorizontalSeperatorChanging(value);
					this.SendPropertyChanging();
					this._IsHorizontalSeperator = value;
					this.SendPropertyChanged("IsHorizontalSeperator");
					this.OnIsHorizontalSeperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OkLimit", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<decimal> OkLimit
		{
			get
			{
				return this._OkLimit;
			}
			set
			{
				if ((this._OkLimit != value))
				{
					this.OnOkLimitChanging(value);
					this.SendPropertyChanging();
					this._OkLimit = value;
					this.SendPropertyChanged("OkLimit");
					this.OnOkLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CautionLimit", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<decimal> CautionLimit
		{
			get
			{
				return this._CautionLimit;
			}
			set
			{
				if ((this._CautionLimit != value))
				{
					this.OnCautionLimitChanging(value);
					this.SendPropertyChanging();
					this._CautionLimit = value;
					this.SendPropertyChanged("CautionLimit");
					this.OnCautionLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningLimit", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> WarningLimit
		{
			get
			{
				return this._WarningLimit;
			}
			set
			{
				if ((this._WarningLimit != value))
				{
					this.OnWarningLimitChanging(value);
					this.SendPropertyChanging();
					this._WarningLimit = value;
					this.SendPropertyChanged("WarningLimit");
					this.OnWarningLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowActionIcons", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> ShowActionIcons
		{
			get
			{
				return this._ShowActionIcons;
			}
			set
			{
				if ((this._ShowActionIcons != value))
				{
					this.OnShowActionIconsChanging(value);
					this.SendPropertyChanging();
					this._ShowActionIcons = value;
					this.SendPropertyChanged("ShowActionIcons");
					this.OnShowActionIconsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComparisonMetricId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> ComparisonMetricId
		{
			get
			{
				return this._ComparisonMetricId;
			}
			set
			{
				if ((this._ComparisonMetricId != value))
				{
					this.OnComparisonMetricIdChanging(value);
					this.SendPropertyChanging();
					this._ComparisonMetricId = value;
					this.SendPropertyChanged("ComparisonMetricId");
					this.OnComparisonMetricIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVarianceColumn", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<bool> IsVarianceColumn
		{
			get
			{
				return this._IsVarianceColumn;
			}
			set
			{
				if ((this._IsVarianceColumn != value))
				{
					this.OnIsVarianceColumnChanging(value);
					this.SendPropertyChanging();
					this._IsVarianceColumn = value;
					this.SendPropertyChanged("IsVarianceColumn");
					this.OnIsVarianceColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetricDefinition_ReportRowConfig", Storage="_MetricDefinition", ThisKey="MetricDefinitionId", OtherKey="Id", IsForeignKey=true)]
		public MetricDefinition MetricDefinition
		{
			get
			{
				return this._MetricDefinition.Entity;
			}
			set
			{
				MetricDefinition previousValue = this._MetricDefinition.Entity;
				if (((previousValue != value) 
							|| (this._MetricDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MetricDefinition.Entity = null;
						previousValue.ReportRowConfigs.Remove(this);
					}
					this._MetricDefinition.Entity = value;
					if ((value != null))
					{
						value.ReportRowConfigs.Add(this);
						this._MetricDefinitionId = value.Id;
					}
					else
					{
						this._MetricDefinitionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MetricDefinition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportSetting_ReportRowConfig", Storage="_ReportSetting", ThisKey="ReportId", OtherKey="Id", IsForeignKey=true)]
		public ReportSetting ReportSetting
		{
			get
			{
				return this._ReportSetting.Entity;
			}
			set
			{
				ReportSetting previousValue = this._ReportSetting.Entity;
				if (((previousValue != value) 
							|| (this._ReportSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportSetting.Entity = null;
						previousValue.ReportRowConfigs.Remove(this);
					}
					this._ReportSetting.Entity = value;
					if ((value != null))
					{
						value.ReportRowConfigs.Add(this);
						this._ReportId = value.Id;
					}
					else
					{
						this._ReportId = default(long);
					}
					this.SendPropertyChanged("ReportSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._MetricDefinition = default(EntityRef<MetricDefinition>);
			this._ReportSetting = default(EntityRef<ReportSetting>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportSetting")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ReportSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _ReportName;
		
		private string _AccessType;
		
		private string _Type;
		
		private bool _IsDefault;
		
		private bool _IsFavourite;
		
		private System.Guid _UserId;
		
		private System.DateTime _CreatedAt;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntitySet<DrillinReportConfig> _DrillinReportConfigs;
		
		private EntitySet<ReportColumnConfig> _ReportColumnConfigs;
		
		private EntitySet<ReportFilterSetting> _ReportFilterSettings;
		
		private EntitySet<ReportRowConfig> _ReportRowConfigs;
		
		private EntitySet<TrendAnalysisReportConfig> _TrendAnalysisReportConfigs;
		
		private EntitySet<UserReportSetting> _UserReportSettings;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnReportNameChanging(string value);
    partial void OnReportNameChanged();
    partial void OnAccessTypeChanging(string value);
    partial void OnAccessTypeChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnIsFavouriteChanging(bool value);
    partial void OnIsFavouriteChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public ReportSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportName", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this.OnReportNameChanging(value);
					this.SendPropertyChanging();
					this._ReportName = value;
					this.SendPropertyChanged("ReportName");
					this.OnReportNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string AccessType
		{
			get
			{
				return this._AccessType;
			}
			set
			{
				if ((this._AccessType != value))
				{
					this.OnAccessTypeChanging(value);
					this.SendPropertyChanging();
					this._AccessType = value;
					this.SendPropertyChanged("AccessType");
					this.OnAccessTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFavourite", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsFavourite
		{
			get
			{
				return this._IsFavourite;
			}
			set
			{
				if ((this._IsFavourite != value))
				{
					this.OnIsFavouriteChanging(value);
					this.SendPropertyChanging();
					this._IsFavourite = value;
					this.SendPropertyChanged("IsFavourite");
					this.OnIsFavouriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportSetting_DrillinReportConfig", Storage="_DrillinReportConfigs", ThisKey="Id", OtherKey="ReportId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<DrillinReportConfig> DrillinReportConfigs
		{
			get
			{
				if ((this.serializing 
							&& (this._DrillinReportConfigs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DrillinReportConfigs;
			}
			set
			{
				this._DrillinReportConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportSetting_ReportColumnConfig", Storage="_ReportColumnConfigs", ThisKey="Id", OtherKey="ReportId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<ReportColumnConfig> ReportColumnConfigs
		{
			get
			{
				if ((this.serializing 
							&& (this._ReportColumnConfigs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ReportColumnConfigs;
			}
			set
			{
				this._ReportColumnConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportSetting_ReportFilterSetting", Storage="_ReportFilterSettings", ThisKey="Id", OtherKey="ReportId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<ReportFilterSetting> ReportFilterSettings
		{
			get
			{
				if ((this.serializing 
							&& (this._ReportFilterSettings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ReportFilterSettings;
			}
			set
			{
				this._ReportFilterSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportSetting_ReportRowConfig", Storage="_ReportRowConfigs", ThisKey="Id", OtherKey="ReportId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<ReportRowConfig> ReportRowConfigs
		{
			get
			{
				if ((this.serializing 
							&& (this._ReportRowConfigs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ReportRowConfigs;
			}
			set
			{
				this._ReportRowConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportSetting_TrendAnalysisReportConfig", Storage="_TrendAnalysisReportConfigs", ThisKey="Id", OtherKey="ReportSettingId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<TrendAnalysisReportConfig> TrendAnalysisReportConfigs
		{
			get
			{
				if ((this.serializing 
							&& (this._TrendAnalysisReportConfigs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TrendAnalysisReportConfigs;
			}
			set
			{
				this._TrendAnalysisReportConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportSetting_UserReportSetting", Storage="_UserReportSettings", ThisKey="Id", OtherKey="ReportId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<UserReportSetting> UserReportSettings
		{
			get
			{
				if ((this.serializing 
							&& (this._UserReportSettings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserReportSettings;
			}
			set
			{
				this._UserReportSettings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DrillinReportConfigs(DrillinReportConfig entity)
		{
			this.SendPropertyChanging();
			entity.ReportSetting = this;
		}
		
		private void detach_DrillinReportConfigs(DrillinReportConfig entity)
		{
			this.SendPropertyChanging();
			entity.ReportSetting = null;
		}
		
		private void attach_ReportColumnConfigs(ReportColumnConfig entity)
		{
			this.SendPropertyChanging();
			entity.ReportSetting = this;
		}
		
		private void detach_ReportColumnConfigs(ReportColumnConfig entity)
		{
			this.SendPropertyChanging();
			entity.ReportSetting = null;
		}
		
		private void attach_ReportFilterSettings(ReportFilterSetting entity)
		{
			this.SendPropertyChanging();
			entity.ReportSetting = this;
		}
		
		private void detach_ReportFilterSettings(ReportFilterSetting entity)
		{
			this.SendPropertyChanging();
			entity.ReportSetting = null;
		}
		
		private void attach_ReportRowConfigs(ReportRowConfig entity)
		{
			this.SendPropertyChanging();
			entity.ReportSetting = this;
		}
		
		private void detach_ReportRowConfigs(ReportRowConfig entity)
		{
			this.SendPropertyChanging();
			entity.ReportSetting = null;
		}
		
		private void attach_TrendAnalysisReportConfigs(TrendAnalysisReportConfig entity)
		{
			this.SendPropertyChanging();
			entity.ReportSetting = this;
		}
		
		private void detach_TrendAnalysisReportConfigs(TrendAnalysisReportConfig entity)
		{
			this.SendPropertyChanging();
			entity.ReportSetting = null;
		}
		
		private void attach_UserReportSettings(UserReportSetting entity)
		{
			this.SendPropertyChanging();
			entity.ReportSetting = this;
		}
		
		private void detach_UserReportSettings(UserReportSetting entity)
		{
			this.SendPropertyChanging();
			entity.ReportSetting = null;
		}
		
		private void Initialize()
		{
			this._DrillinReportConfigs = new EntitySet<DrillinReportConfig>(new Action<DrillinReportConfig>(this.attach_DrillinReportConfigs), new Action<DrillinReportConfig>(this.detach_DrillinReportConfigs));
			this._ReportColumnConfigs = new EntitySet<ReportColumnConfig>(new Action<ReportColumnConfig>(this.attach_ReportColumnConfigs), new Action<ReportColumnConfig>(this.detach_ReportColumnConfigs));
			this._ReportFilterSettings = new EntitySet<ReportFilterSetting>(new Action<ReportFilterSetting>(this.attach_ReportFilterSettings), new Action<ReportFilterSetting>(this.detach_ReportFilterSettings));
			this._ReportRowConfigs = new EntitySet<ReportRowConfig>(new Action<ReportRowConfig>(this.attach_ReportRowConfigs), new Action<ReportRowConfig>(this.detach_ReportRowConfigs));
			this._TrendAnalysisReportConfigs = new EntitySet<TrendAnalysisReportConfig>(new Action<TrendAnalysisReportConfig>(this.attach_TrendAnalysisReportConfigs), new Action<TrendAnalysisReportConfig>(this.detach_TrendAnalysisReportConfigs));
			this._UserReportSettings = new EntitySet<UserReportSetting>(new Action<UserReportSetting>(this.attach_UserReportSettings), new Action<UserReportSetting>(this.detach_UserReportSettings));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleAccess")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RoleAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleAccessId;
		
		private string _RoleName;
		
		private string _PipelineAccess;
		
		private string _ForecastAccess;
		
		private string _TargetsAccess;
		
		private string _ReportsAccess;
		
		private string _UsersAccess;
		
		private string _RolesAccess;
		
		private bool _EditNonFutureProjectionAccess;
		
		private bool _EditActual;
		
		private System.Nullable<bool> _EnablePrinting;
		
		private System.Nullable<bool> _ExcludeCustomMix;
		
		private System.Nullable<bool> _Enable5skPricing;
		
		private System.Nullable<bool> _HideSpread;
		
		private System.Nullable<bool> _HideContribution;
		
		private System.Nullable<bool> _HideProfit;
		
		private System.Nullable<decimal> _MinSpread;
		
		private System.Nullable<decimal> _MaxSpread;
		
		private System.Nullable<decimal> _MinContribution;
		
		private System.Nullable<decimal> _MaxContribution;
		
		private System.Nullable<decimal> _MinProfit;
		
		private System.Nullable<decimal> _MaxProfit;
		
		private System.Nullable<bool> _MergeCustomers;
		
		private string _AddonsAccess;
		
		private string _CompetitorsAccess;
		
		private string _CustomersAccess;
		
		private string _GCAccess;
		
		private string _MarketSegmentsAccess;
		
		private string _MiscellaneousAccess;
		
		private string _MixDesignsAccess;
		
		private string _QuotationAccess;
		
		private string _RawMaterialsAccess;
		
		private string _ReportSettingsAccess;
		
		private string _SackPricingAccess;
		
		private string _SalesStaffAccess;
		
		private string _StatusesReasonsLostAccess;
		
		private string _StructureAccess;
		
		private System.Nullable<bool> _EnableUploadAddonPricesCosts;
		
		private System.Nullable<bool> _EnableUploadMixesFormulations;
		
		private System.Nullable<bool> _EnableUploadRawMaterialCost;
		
		private System.Nullable<bool> _RequireProjectLocation;
		
		private System.Nullable<bool> _HidePrice;
		
		private string _DashboardAccess;
		
		private string _GoalAnalysisAccess;
		
		private string _BenchmarkAnalysisAccess;
		
		private string _TrendAnalysisAccess;
		
		private string _DrillInAccess;
		
		private string _AlertsManagementAccess;
		
		private string _CustomWebDataFormAccess;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleAccessIdChanging(int value);
    partial void OnRoleAccessIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnPipelineAccessChanging(string value);
    partial void OnPipelineAccessChanged();
    partial void OnForecastAccessChanging(string value);
    partial void OnForecastAccessChanged();
    partial void OnTargetsAccessChanging(string value);
    partial void OnTargetsAccessChanged();
    partial void OnReportsAccessChanging(string value);
    partial void OnReportsAccessChanged();
    partial void OnUsersAccessChanging(string value);
    partial void OnUsersAccessChanged();
    partial void OnRolesAccessChanging(string value);
    partial void OnRolesAccessChanged();
    partial void OnEditNonFutureProjectionAccessChanging(bool value);
    partial void OnEditNonFutureProjectionAccessChanged();
    partial void OnEditActualChanging(bool value);
    partial void OnEditActualChanged();
    partial void OnEnablePrintingChanging(System.Nullable<bool> value);
    partial void OnEnablePrintingChanged();
    partial void OnExcludeCustomMixChanging(System.Nullable<bool> value);
    partial void OnExcludeCustomMixChanged();
    partial void OnEnable5skPricingChanging(System.Nullable<bool> value);
    partial void OnEnable5skPricingChanged();
    partial void OnHideSpreadChanging(System.Nullable<bool> value);
    partial void OnHideSpreadChanged();
    partial void OnHideContributionChanging(System.Nullable<bool> value);
    partial void OnHideContributionChanged();
    partial void OnHideProfitChanging(System.Nullable<bool> value);
    partial void OnHideProfitChanged();
    partial void OnMinSpreadChanging(System.Nullable<decimal> value);
    partial void OnMinSpreadChanged();
    partial void OnMaxSpreadChanging(System.Nullable<decimal> value);
    partial void OnMaxSpreadChanged();
    partial void OnMinContributionChanging(System.Nullable<decimal> value);
    partial void OnMinContributionChanged();
    partial void OnMaxContributionChanging(System.Nullable<decimal> value);
    partial void OnMaxContributionChanged();
    partial void OnMinProfitChanging(System.Nullable<decimal> value);
    partial void OnMinProfitChanged();
    partial void OnMaxProfitChanging(System.Nullable<decimal> value);
    partial void OnMaxProfitChanged();
    partial void OnMergeCustomersChanging(System.Nullable<bool> value);
    partial void OnMergeCustomersChanged();
    partial void OnAddonsAccessChanging(string value);
    partial void OnAddonsAccessChanged();
    partial void OnCompetitorsAccessChanging(string value);
    partial void OnCompetitorsAccessChanged();
    partial void OnCustomersAccessChanging(string value);
    partial void OnCustomersAccessChanged();
    partial void OnGCAccessChanging(string value);
    partial void OnGCAccessChanged();
    partial void OnMarketSegmentsAccessChanging(string value);
    partial void OnMarketSegmentsAccessChanged();
    partial void OnMiscellaneousAccessChanging(string value);
    partial void OnMiscellaneousAccessChanged();
    partial void OnMixDesignsAccessChanging(string value);
    partial void OnMixDesignsAccessChanged();
    partial void OnQuotationAccessChanging(string value);
    partial void OnQuotationAccessChanged();
    partial void OnRawMaterialsAccessChanging(string value);
    partial void OnRawMaterialsAccessChanged();
    partial void OnReportSettingsAccessChanging(string value);
    partial void OnReportSettingsAccessChanged();
    partial void OnSackPricingAccessChanging(string value);
    partial void OnSackPricingAccessChanged();
    partial void OnSalesStaffAccessChanging(string value);
    partial void OnSalesStaffAccessChanged();
    partial void OnStatusesReasonsLostAccessChanging(string value);
    partial void OnStatusesReasonsLostAccessChanged();
    partial void OnStructureAccessChanging(string value);
    partial void OnStructureAccessChanged();
    partial void OnEnableUploadAddonPricesCostsChanging(System.Nullable<bool> value);
    partial void OnEnableUploadAddonPricesCostsChanged();
    partial void OnEnableUploadMixesFormulationsChanging(System.Nullable<bool> value);
    partial void OnEnableUploadMixesFormulationsChanged();
    partial void OnEnableUploadRawMaterialCostChanging(System.Nullable<bool> value);
    partial void OnEnableUploadRawMaterialCostChanged();
    partial void OnRequireProjectLocationChanging(System.Nullable<bool> value);
    partial void OnRequireProjectLocationChanged();
    partial void OnHidePriceChanging(System.Nullable<bool> value);
    partial void OnHidePriceChanged();
    partial void OnDashboardAccessChanging(string value);
    partial void OnDashboardAccessChanged();
    partial void OnGoalAnalysisAccessChanging(string value);
    partial void OnGoalAnalysisAccessChanged();
    partial void OnBenchmarkAnalysisAccessChanging(string value);
    partial void OnBenchmarkAnalysisAccessChanged();
    partial void OnTrendAnalysisAccessChanging(string value);
    partial void OnTrendAnalysisAccessChanged();
    partial void OnDrillInAccessChanging(string value);
    partial void OnDrillInAccessChanged();
    partial void OnAlertsManagementAccessChanging(string value);
    partial void OnAlertsManagementAccessChanged();
    partial void OnCustomWebDataFormAccessChanging(string value);
    partial void OnCustomWebDataFormAccessChanged();
    #endregion
		
		public RoleAccess()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleAccessId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RoleAccessId
		{
			get
			{
				return this._RoleAccessId;
			}
			set
			{
				if ((this._RoleAccessId != value))
				{
					this.OnRoleAccessIdChanging(value);
					this.SendPropertyChanging();
					this._RoleAccessId = value;
					this.SendPropertyChanged("RoleAccessId");
					this.OnRoleAccessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PipelineAccess
		{
			get
			{
				return this._PipelineAccess;
			}
			set
			{
				if ((this._PipelineAccess != value))
				{
					this.OnPipelineAccessChanging(value);
					this.SendPropertyChanging();
					this._PipelineAccess = value;
					this.SendPropertyChanged("PipelineAccess");
					this.OnPipelineAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForecastAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ForecastAccess
		{
			get
			{
				return this._ForecastAccess;
			}
			set
			{
				if ((this._ForecastAccess != value))
				{
					this.OnForecastAccessChanging(value);
					this.SendPropertyChanging();
					this._ForecastAccess = value;
					this.SendPropertyChanged("ForecastAccess");
					this.OnForecastAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetsAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string TargetsAccess
		{
			get
			{
				return this._TargetsAccess;
			}
			set
			{
				if ((this._TargetsAccess != value))
				{
					this.OnTargetsAccessChanging(value);
					this.SendPropertyChanging();
					this._TargetsAccess = value;
					this.SendPropertyChanged("TargetsAccess");
					this.OnTargetsAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportsAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ReportsAccess
		{
			get
			{
				return this._ReportsAccess;
			}
			set
			{
				if ((this._ReportsAccess != value))
				{
					this.OnReportsAccessChanging(value);
					this.SendPropertyChanging();
					this._ReportsAccess = value;
					this.SendPropertyChanged("ReportsAccess");
					this.OnReportsAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string UsersAccess
		{
			get
			{
				return this._UsersAccess;
			}
			set
			{
				if ((this._UsersAccess != value))
				{
					this.OnUsersAccessChanging(value);
					this.SendPropertyChanging();
					this._UsersAccess = value;
					this.SendPropertyChanged("UsersAccess");
					this.OnUsersAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RolesAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string RolesAccess
		{
			get
			{
				return this._RolesAccess;
			}
			set
			{
				if ((this._RolesAccess != value))
				{
					this.OnRolesAccessChanging(value);
					this.SendPropertyChanging();
					this._RolesAccess = value;
					this.SendPropertyChanged("RolesAccess");
					this.OnRolesAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditNonFutureProjectionAccess", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool EditNonFutureProjectionAccess
		{
			get
			{
				return this._EditNonFutureProjectionAccess;
			}
			set
			{
				if ((this._EditNonFutureProjectionAccess != value))
				{
					this.OnEditNonFutureProjectionAccessChanging(value);
					this.SendPropertyChanging();
					this._EditNonFutureProjectionAccess = value;
					this.SendPropertyChanged("EditNonFutureProjectionAccess");
					this.OnEditNonFutureProjectionAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditActual", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool EditActual
		{
			get
			{
				return this._EditActual;
			}
			set
			{
				if ((this._EditActual != value))
				{
					this.OnEditActualChanging(value);
					this.SendPropertyChanging();
					this._EditActual = value;
					this.SendPropertyChanged("EditActual");
					this.OnEditActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnablePrinting", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> EnablePrinting
		{
			get
			{
				return this._EnablePrinting;
			}
			set
			{
				if ((this._EnablePrinting != value))
				{
					this.OnEnablePrintingChanging(value);
					this.SendPropertyChanging();
					this._EnablePrinting = value;
					this.SendPropertyChanged("EnablePrinting");
					this.OnEnablePrintingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludeCustomMix", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> ExcludeCustomMix
		{
			get
			{
				return this._ExcludeCustomMix;
			}
			set
			{
				if ((this._ExcludeCustomMix != value))
				{
					this.OnExcludeCustomMixChanging(value);
					this.SendPropertyChanging();
					this._ExcludeCustomMix = value;
					this.SendPropertyChanged("ExcludeCustomMix");
					this.OnExcludeCustomMixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable5skPricing", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> Enable5skPricing
		{
			get
			{
				return this._Enable5skPricing;
			}
			set
			{
				if ((this._Enable5skPricing != value))
				{
					this.OnEnable5skPricingChanging(value);
					this.SendPropertyChanging();
					this._Enable5skPricing = value;
					this.SendPropertyChanged("Enable5skPricing");
					this.OnEnable5skPricingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HideSpread", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<bool> HideSpread
		{
			get
			{
				return this._HideSpread;
			}
			set
			{
				if ((this._HideSpread != value))
				{
					this.OnHideSpreadChanging(value);
					this.SendPropertyChanging();
					this._HideSpread = value;
					this.SendPropertyChanged("HideSpread");
					this.OnHideSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HideContribution", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> HideContribution
		{
			get
			{
				return this._HideContribution;
			}
			set
			{
				if ((this._HideContribution != value))
				{
					this.OnHideContributionChanging(value);
					this.SendPropertyChanging();
					this._HideContribution = value;
					this.SendPropertyChanged("HideContribution");
					this.OnHideContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HideProfit", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<bool> HideProfit
		{
			get
			{
				return this._HideProfit;
			}
			set
			{
				if ((this._HideProfit != value))
				{
					this.OnHideProfitChanging(value);
					this.SendPropertyChanging();
					this._HideProfit = value;
					this.SendPropertyChanged("HideProfit");
					this.OnHideProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinSpread", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<decimal> MinSpread
		{
			get
			{
				return this._MinSpread;
			}
			set
			{
				if ((this._MinSpread != value))
				{
					this.OnMinSpreadChanging(value);
					this.SendPropertyChanging();
					this._MinSpread = value;
					this.SendPropertyChanged("MinSpread");
					this.OnMinSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSpread", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<decimal> MaxSpread
		{
			get
			{
				return this._MaxSpread;
			}
			set
			{
				if ((this._MaxSpread != value))
				{
					this.OnMaxSpreadChanging(value);
					this.SendPropertyChanging();
					this._MaxSpread = value;
					this.SendPropertyChanged("MaxSpread");
					this.OnMaxSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinContribution", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<decimal> MinContribution
		{
			get
			{
				return this._MinContribution;
			}
			set
			{
				if ((this._MinContribution != value))
				{
					this.OnMinContributionChanging(value);
					this.SendPropertyChanging();
					this._MinContribution = value;
					this.SendPropertyChanged("MinContribution");
					this.OnMinContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxContribution", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<decimal> MaxContribution
		{
			get
			{
				return this._MaxContribution;
			}
			set
			{
				if ((this._MaxContribution != value))
				{
					this.OnMaxContributionChanging(value);
					this.SendPropertyChanging();
					this._MaxContribution = value;
					this.SendPropertyChanged("MaxContribution");
					this.OnMaxContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinProfit", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<decimal> MinProfit
		{
			get
			{
				return this._MinProfit;
			}
			set
			{
				if ((this._MinProfit != value))
				{
					this.OnMinProfitChanging(value);
					this.SendPropertyChanging();
					this._MinProfit = value;
					this.SendPropertyChanged("MinProfit");
					this.OnMinProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxProfit", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<decimal> MaxProfit
		{
			get
			{
				return this._MaxProfit;
			}
			set
			{
				if ((this._MaxProfit != value))
				{
					this.OnMaxProfitChanging(value);
					this.SendPropertyChanging();
					this._MaxProfit = value;
					this.SendPropertyChanged("MaxProfit");
					this.OnMaxProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MergeCustomers", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<bool> MergeCustomers
		{
			get
			{
				return this._MergeCustomers;
			}
			set
			{
				if ((this._MergeCustomers != value))
				{
					this.OnMergeCustomersChanging(value);
					this.SendPropertyChanging();
					this._MergeCustomers = value;
					this.SendPropertyChanged("MergeCustomers");
					this.OnMergeCustomersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonsAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string AddonsAccess
		{
			get
			{
				return this._AddonsAccess;
			}
			set
			{
				if ((this._AddonsAccess != value))
				{
					this.OnAddonsAccessChanging(value);
					this.SendPropertyChanging();
					this._AddonsAccess = value;
					this.SendPropertyChanged("AddonsAccess");
					this.OnAddonsAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitorsAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public string CompetitorsAccess
		{
			get
			{
				return this._CompetitorsAccess;
			}
			set
			{
				if ((this._CompetitorsAccess != value))
				{
					this.OnCompetitorsAccessChanging(value);
					this.SendPropertyChanging();
					this._CompetitorsAccess = value;
					this.SendPropertyChanged("CompetitorsAccess");
					this.OnCompetitorsAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomersAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string CustomersAccess
		{
			get
			{
				return this._CustomersAccess;
			}
			set
			{
				if ((this._CustomersAccess != value))
				{
					this.OnCustomersAccessChanging(value);
					this.SendPropertyChanging();
					this._CustomersAccess = value;
					this.SendPropertyChanged("CustomersAccess");
					this.OnCustomersAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public string GCAccess
		{
			get
			{
				return this._GCAccess;
			}
			set
			{
				if ((this._GCAccess != value))
				{
					this.OnGCAccessChanging(value);
					this.SendPropertyChanging();
					this._GCAccess = value;
					this.SendPropertyChanged("GCAccess");
					this.OnGCAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketSegmentsAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public string MarketSegmentsAccess
		{
			get
			{
				return this._MarketSegmentsAccess;
			}
			set
			{
				if ((this._MarketSegmentsAccess != value))
				{
					this.OnMarketSegmentsAccessChanging(value);
					this.SendPropertyChanging();
					this._MarketSegmentsAccess = value;
					this.SendPropertyChanged("MarketSegmentsAccess");
					this.OnMarketSegmentsAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiscellaneousAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public string MiscellaneousAccess
		{
			get
			{
				return this._MiscellaneousAccess;
			}
			set
			{
				if ((this._MiscellaneousAccess != value))
				{
					this.OnMiscellaneousAccessChanging(value);
					this.SendPropertyChanging();
					this._MiscellaneousAccess = value;
					this.SendPropertyChanged("MiscellaneousAccess");
					this.OnMiscellaneousAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixDesignsAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public string MixDesignsAccess
		{
			get
			{
				return this._MixDesignsAccess;
			}
			set
			{
				if ((this._MixDesignsAccess != value))
				{
					this.OnMixDesignsAccessChanging(value);
					this.SendPropertyChanging();
					this._MixDesignsAccess = value;
					this.SendPropertyChanged("MixDesignsAccess");
					this.OnMixDesignsAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public string QuotationAccess
		{
			get
			{
				return this._QuotationAccess;
			}
			set
			{
				if ((this._QuotationAccess != value))
				{
					this.OnQuotationAccessChanging(value);
					this.SendPropertyChanging();
					this._QuotationAccess = value;
					this.SendPropertyChanged("QuotationAccess");
					this.OnQuotationAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawMaterialsAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public string RawMaterialsAccess
		{
			get
			{
				return this._RawMaterialsAccess;
			}
			set
			{
				if ((this._RawMaterialsAccess != value))
				{
					this.OnRawMaterialsAccessChanging(value);
					this.SendPropertyChanging();
					this._RawMaterialsAccess = value;
					this.SendPropertyChanged("RawMaterialsAccess");
					this.OnRawMaterialsAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportSettingsAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public string ReportSettingsAccess
		{
			get
			{
				return this._ReportSettingsAccess;
			}
			set
			{
				if ((this._ReportSettingsAccess != value))
				{
					this.OnReportSettingsAccessChanging(value);
					this.SendPropertyChanging();
					this._ReportSettingsAccess = value;
					this.SendPropertyChanged("ReportSettingsAccess");
					this.OnReportSettingsAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SackPricingAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public string SackPricingAccess
		{
			get
			{
				return this._SackPricingAccess;
			}
			set
			{
				if ((this._SackPricingAccess != value))
				{
					this.OnSackPricingAccessChanging(value);
					this.SendPropertyChanging();
					this._SackPricingAccess = value;
					this.SendPropertyChanged("SackPricingAccess");
					this.OnSackPricingAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesStaffAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public string SalesStaffAccess
		{
			get
			{
				return this._SalesStaffAccess;
			}
			set
			{
				if ((this._SalesStaffAccess != value))
				{
					this.OnSalesStaffAccessChanging(value);
					this.SendPropertyChanging();
					this._SalesStaffAccess = value;
					this.SendPropertyChanged("SalesStaffAccess");
					this.OnSalesStaffAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusesReasonsLostAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36)]
		public string StatusesReasonsLostAccess
		{
			get
			{
				return this._StatusesReasonsLostAccess;
			}
			set
			{
				if ((this._StatusesReasonsLostAccess != value))
				{
					this.OnStatusesReasonsLostAccessChanging(value);
					this.SendPropertyChanging();
					this._StatusesReasonsLostAccess = value;
					this.SendPropertyChanged("StatusesReasonsLostAccess");
					this.OnStatusesReasonsLostAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37)]
		public string StructureAccess
		{
			get
			{
				return this._StructureAccess;
			}
			set
			{
				if ((this._StructureAccess != value))
				{
					this.OnStructureAccessChanging(value);
					this.SendPropertyChanging();
					this._StructureAccess = value;
					this.SendPropertyChanged("StructureAccess");
					this.OnStructureAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableUploadAddonPricesCosts", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38)]
		public System.Nullable<bool> EnableUploadAddonPricesCosts
		{
			get
			{
				return this._EnableUploadAddonPricesCosts;
			}
			set
			{
				if ((this._EnableUploadAddonPricesCosts != value))
				{
					this.OnEnableUploadAddonPricesCostsChanging(value);
					this.SendPropertyChanging();
					this._EnableUploadAddonPricesCosts = value;
					this.SendPropertyChanged("EnableUploadAddonPricesCosts");
					this.OnEnableUploadAddonPricesCostsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableUploadMixesFormulations", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39)]
		public System.Nullable<bool> EnableUploadMixesFormulations
		{
			get
			{
				return this._EnableUploadMixesFormulations;
			}
			set
			{
				if ((this._EnableUploadMixesFormulations != value))
				{
					this.OnEnableUploadMixesFormulationsChanging(value);
					this.SendPropertyChanging();
					this._EnableUploadMixesFormulations = value;
					this.SendPropertyChanged("EnableUploadMixesFormulations");
					this.OnEnableUploadMixesFormulationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableUploadRawMaterialCost", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40)]
		public System.Nullable<bool> EnableUploadRawMaterialCost
		{
			get
			{
				return this._EnableUploadRawMaterialCost;
			}
			set
			{
				if ((this._EnableUploadRawMaterialCost != value))
				{
					this.OnEnableUploadRawMaterialCostChanging(value);
					this.SendPropertyChanging();
					this._EnableUploadRawMaterialCost = value;
					this.SendPropertyChanged("EnableUploadRawMaterialCost");
					this.OnEnableUploadRawMaterialCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireProjectLocation", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41)]
		public System.Nullable<bool> RequireProjectLocation
		{
			get
			{
				return this._RequireProjectLocation;
			}
			set
			{
				if ((this._RequireProjectLocation != value))
				{
					this.OnRequireProjectLocationChanging(value);
					this.SendPropertyChanging();
					this._RequireProjectLocation = value;
					this.SendPropertyChanged("RequireProjectLocation");
					this.OnRequireProjectLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HidePrice", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=42)]
		public System.Nullable<bool> HidePrice
		{
			get
			{
				return this._HidePrice;
			}
			set
			{
				if ((this._HidePrice != value))
				{
					this.OnHidePriceChanging(value);
					this.SendPropertyChanging();
					this._HidePrice = value;
					this.SendPropertyChanged("HidePrice");
					this.OnHidePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=43)]
		public string DashboardAccess
		{
			get
			{
				return this._DashboardAccess;
			}
			set
			{
				if ((this._DashboardAccess != value))
				{
					this.OnDashboardAccessChanging(value);
					this.SendPropertyChanging();
					this._DashboardAccess = value;
					this.SendPropertyChanged("DashboardAccess");
					this.OnDashboardAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalAnalysisAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=44)]
		public string GoalAnalysisAccess
		{
			get
			{
				return this._GoalAnalysisAccess;
			}
			set
			{
				if ((this._GoalAnalysisAccess != value))
				{
					this.OnGoalAnalysisAccessChanging(value);
					this.SendPropertyChanging();
					this._GoalAnalysisAccess = value;
					this.SendPropertyChanged("GoalAnalysisAccess");
					this.OnGoalAnalysisAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenchmarkAnalysisAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=45)]
		public string BenchmarkAnalysisAccess
		{
			get
			{
				return this._BenchmarkAnalysisAccess;
			}
			set
			{
				if ((this._BenchmarkAnalysisAccess != value))
				{
					this.OnBenchmarkAnalysisAccessChanging(value);
					this.SendPropertyChanging();
					this._BenchmarkAnalysisAccess = value;
					this.SendPropertyChanged("BenchmarkAnalysisAccess");
					this.OnBenchmarkAnalysisAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrendAnalysisAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=46)]
		public string TrendAnalysisAccess
		{
			get
			{
				return this._TrendAnalysisAccess;
			}
			set
			{
				if ((this._TrendAnalysisAccess != value))
				{
					this.OnTrendAnalysisAccessChanging(value);
					this.SendPropertyChanging();
					this._TrendAnalysisAccess = value;
					this.SendPropertyChanged("TrendAnalysisAccess");
					this.OnTrendAnalysisAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrillInAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=47)]
		public string DrillInAccess
		{
			get
			{
				return this._DrillInAccess;
			}
			set
			{
				if ((this._DrillInAccess != value))
				{
					this.OnDrillInAccessChanging(value);
					this.SendPropertyChanging();
					this._DrillInAccess = value;
					this.SendPropertyChanged("DrillInAccess");
					this.OnDrillInAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertsManagementAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=48)]
		public string AlertsManagementAccess
		{
			get
			{
				return this._AlertsManagementAccess;
			}
			set
			{
				if ((this._AlertsManagementAccess != value))
				{
					this.OnAlertsManagementAccessChanging(value);
					this.SendPropertyChanging();
					this._AlertsManagementAccess = value;
					this.SendPropertyChanged("AlertsManagementAccess");
					this.OnAlertsManagementAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomWebDataFormAccess", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=49)]
		public string CustomWebDataFormAccess
		{
			get
			{
				return this._CustomWebDataFormAccess;
			}
			set
			{
				if ((this._CustomWebDataFormAccess != value))
				{
					this.OnCustomWebDataFormAccessChanging(value);
					this.SendPropertyChanging();
					this._CustomWebDataFormAccess = value;
					this.SendPropertyChanged("CustomWebDataFormAccess");
					this.OnCustomWebDataFormAccessChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesStaff")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SalesStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalesStaffId;
		
		private System.Nullable<int> _CompanyId;
		
		private string _Name;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private System.Nullable<bool> _Active;
		
		private string _DispatchId;
		
		private System.Nullable<bool> _Synced;
		
		private EntitySet<DistrictSalesStaff> _DistrictSalesStaffs;
		
		private EntitySet<PlantBudgetSalesStaff> _PlantBudgetSalesStaffs;
		
		private EntitySet<ProjectSalesStaff> _ProjectSalesStaffs;
		
		private EntitySet<Quotation> _Quotations;
		
		private EntityRef<Company> _Company;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesStaffIdChanging(int value);
    partial void OnSalesStaffIdChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnSyncedChanging(System.Nullable<bool> value);
    partial void OnSyncedChanged();
    #endregion
		
		public SalesStaff()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesStaffId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SalesStaffId
		{
			get
			{
				return this._SalesStaffId;
			}
			set
			{
				if ((this._SalesStaffId != value))
				{
					this.OnSalesStaffIdChanging(value);
					this.SendPropertyChanging();
					this._SalesStaffId = value;
					this.SendPropertyChanged("SalesStaffId");
					this.OnSalesStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synced", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> Synced
		{
			get
			{
				return this._Synced;
			}
			set
			{
				if ((this._Synced != value))
				{
					this.OnSyncedChanging(value);
					this.SendPropertyChanging();
					this._Synced = value;
					this.SendPropertyChanged("Synced");
					this.OnSyncedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesStaff_DistrictSalesStaff", Storage="_DistrictSalesStaffs", ThisKey="SalesStaffId", OtherKey="SalesStaffId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<DistrictSalesStaff> DistrictSalesStaffs
		{
			get
			{
				if ((this.serializing 
							&& (this._DistrictSalesStaffs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DistrictSalesStaffs;
			}
			set
			{
				this._DistrictSalesStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesStaff_PlantBudgetSalesStaff", Storage="_PlantBudgetSalesStaffs", ThisKey="SalesStaffId", OtherKey="SalesStaffId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<PlantBudgetSalesStaff> PlantBudgetSalesStaffs
		{
			get
			{
				if ((this.serializing 
							&& (this._PlantBudgetSalesStaffs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlantBudgetSalesStaffs;
			}
			set
			{
				this._PlantBudgetSalesStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesStaff_ProjectSalesStaff", Storage="_ProjectSalesStaffs", ThisKey="SalesStaffId", OtherKey="SalesStaffId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<ProjectSalesStaff> ProjectSalesStaffs
		{
			get
			{
				if ((this.serializing 
							&& (this._ProjectSalesStaffs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProjectSalesStaffs;
			}
			set
			{
				this._ProjectSalesStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesStaff_Quotation", Storage="_Quotations", ThisKey="SalesStaffId", OtherKey="SalesStaffId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<Quotation> Quotations
		{
			get
			{
				if ((this.serializing 
							&& (this._Quotations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Quotations;
			}
			set
			{
				this._Quotations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_SalesStaff", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.SalesStaffs.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.SalesStaffs.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DistrictSalesStaffs(DistrictSalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.SalesStaff = this;
		}
		
		private void detach_DistrictSalesStaffs(DistrictSalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.SalesStaff = null;
		}
		
		private void attach_PlantBudgetSalesStaffs(PlantBudgetSalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.SalesStaff = this;
		}
		
		private void detach_PlantBudgetSalesStaffs(PlantBudgetSalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.SalesStaff = null;
		}
		
		private void attach_ProjectSalesStaffs(ProjectSalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.SalesStaff = this;
		}
		
		private void detach_ProjectSalesStaffs(ProjectSalesStaff entity)
		{
			this.SendPropertyChanging();
			entity.SalesStaff = null;
		}
		
		private void attach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.SalesStaff = this;
		}
		
		private void detach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.SalesStaff = null;
		}
		
		private void Initialize()
		{
			this._DistrictSalesStaffs = new EntitySet<DistrictSalesStaff>(new Action<DistrictSalesStaff>(this.attach_DistrictSalesStaffs), new Action<DistrictSalesStaff>(this.detach_DistrictSalesStaffs));
			this._PlantBudgetSalesStaffs = new EntitySet<PlantBudgetSalesStaff>(new Action<PlantBudgetSalesStaff>(this.attach_PlantBudgetSalesStaffs), new Action<PlantBudgetSalesStaff>(this.detach_PlantBudgetSalesStaffs));
			this._ProjectSalesStaffs = new EntitySet<ProjectSalesStaff>(new Action<ProjectSalesStaff>(this.attach_ProjectSalesStaffs), new Action<ProjectSalesStaff>(this.detach_ProjectSalesStaffs));
			this._Quotations = new EntitySet<Quotation>(new Action<Quotation>(this.attach_Quotations), new Action<Quotation>(this.detach_Quotations));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialReportConfig")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SpecialReportConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ReportId;
		
		private string _CustomFilterDimension;
		
		private string _SortDirection;
		
		private string _SortType;
		
		private int _SortCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(long value);
    partial void OnReportIdChanged();
    partial void OnCustomFilterDimensionChanging(string value);
    partial void OnCustomFilterDimensionChanged();
    partial void OnSortDirectionChanging(string value);
    partial void OnSortDirectionChanged();
    partial void OnSortTypeChanging(string value);
    partial void OnSortTypeChanged();
    partial void OnSortCountChanging(int value);
    partial void OnSortCountChanged();
    #endregion
		
		public SpecialReportConfig()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomFilterDimension", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CustomFilterDimension
		{
			get
			{
				return this._CustomFilterDimension;
			}
			set
			{
				if ((this._CustomFilterDimension != value))
				{
					this.OnCustomFilterDimensionChanging(value);
					this.SendPropertyChanging();
					this._CustomFilterDimension = value;
					this.SendPropertyChanged("CustomFilterDimension");
					this.OnCustomFilterDimensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortDirection", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string SortDirection
		{
			get
			{
				return this._SortDirection;
			}
			set
			{
				if ((this._SortDirection != value))
				{
					this.OnSortDirectionChanging(value);
					this.SendPropertyChanging();
					this._SortDirection = value;
					this.SendPropertyChanged("SortDirection");
					this.OnSortDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortType", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string SortType
		{
			get
			{
				return this._SortType;
			}
			set
			{
				if ((this._SortType != value))
				{
					this.OnSortTypeChanging(value);
					this.SendPropertyChanging();
					this._SortType = value;
					this.SendPropertyChanged("SortType");
					this.OnSortTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int SortCount
		{
			get
			{
				return this._SortCount;
			}
			set
			{
				if ((this._SortCount != value))
				{
					this.OnSortCountChanging(value);
					this.SendPropertyChanging();
					this._SortCount = value;
					this.SendPropertyChanged("SortCount");
					this.OnSortCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StandardMix")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StandardMix : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Number;
		
		private string _Description;
		
		private string _SalesDesc;
		
		private System.Nullable<int> _PSI;
		
		private string _Slump;
		
		private string _Air;
		
		private string _MD1;
		
		private string _MD2;
		
		private string _MD3;
		
		private string _MD4;
		
		private System.Nullable<bool> _Active;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private string _DispatchId;
		
		private System.Nullable<bool> _Synced;
		
		private EntitySet<MixFormulation> _MixFormulations;
		
		private EntitySet<QuotationMix> _QuotationMixes;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSalesDescChanging(string value);
    partial void OnSalesDescChanged();
    partial void OnPSIChanging(System.Nullable<int> value);
    partial void OnPSIChanged();
    partial void OnSlumpChanging(string value);
    partial void OnSlumpChanged();
    partial void OnAirChanging(string value);
    partial void OnAirChanged();
    partial void OnMD1Changing(string value);
    partial void OnMD1Changed();
    partial void OnMD2Changing(string value);
    partial void OnMD2Changed();
    partial void OnMD3Changing(string value);
    partial void OnMD3Changed();
    partial void OnMD4Changing(string value);
    partial void OnMD4Changed();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnSyncedChanging(System.Nullable<bool> value);
    partial void OnSyncedChanged();
    #endregion
		
		public StandardMix()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDesc", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string SalesDesc
		{
			get
			{
				return this._SalesDesc;
			}
			set
			{
				if ((this._SalesDesc != value))
				{
					this.OnSalesDescChanging(value);
					this.SendPropertyChanging();
					this._SalesDesc = value;
					this.SendPropertyChanged("SalesDesc");
					this.OnSalesDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSI", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> PSI
		{
			get
			{
				return this._PSI;
			}
			set
			{
				if ((this._PSI != value))
				{
					this.OnPSIChanging(value);
					this.SendPropertyChanging();
					this._PSI = value;
					this.SendPropertyChanged("PSI");
					this.OnPSIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slump", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Slump
		{
			get
			{
				return this._Slump;
			}
			set
			{
				if ((this._Slump != value))
				{
					this.OnSlumpChanging(value);
					this.SendPropertyChanging();
					this._Slump = value;
					this.SendPropertyChanged("Slump");
					this.OnSlumpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Air", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Air
		{
			get
			{
				return this._Air;
			}
			set
			{
				if ((this._Air != value))
				{
					this.OnAirChanging(value);
					this.SendPropertyChanging();
					this._Air = value;
					this.SendPropertyChanged("Air");
					this.OnAirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD1", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string MD1
		{
			get
			{
				return this._MD1;
			}
			set
			{
				if ((this._MD1 != value))
				{
					this.OnMD1Changing(value);
					this.SendPropertyChanging();
					this._MD1 = value;
					this.SendPropertyChanged("MD1");
					this.OnMD1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD2", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string MD2
		{
			get
			{
				return this._MD2;
			}
			set
			{
				if ((this._MD2 != value))
				{
					this.OnMD2Changing(value);
					this.SendPropertyChanging();
					this._MD2 = value;
					this.SendPropertyChanged("MD2");
					this.OnMD2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD3", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string MD3
		{
			get
			{
				return this._MD3;
			}
			set
			{
				if ((this._MD3 != value))
				{
					this.OnMD3Changing(value);
					this.SendPropertyChanging();
					this._MD3 = value;
					this.SendPropertyChanged("MD3");
					this.OnMD3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD4", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string MD4
		{
			get
			{
				return this._MD4;
			}
			set
			{
				if ((this._MD4 != value))
				{
					this.OnMD4Changing(value);
					this.SendPropertyChanging();
					this._MD4 = value;
					this.SendPropertyChanged("MD4");
					this.OnMD4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synced", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<bool> Synced
		{
			get
			{
				return this._Synced;
			}
			set
			{
				if ((this._Synced != value))
				{
					this.OnSyncedChanging(value);
					this.SendPropertyChanging();
					this._Synced = value;
					this.SendPropertyChanged("Synced");
					this.OnSyncedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardMix_MixFormulation", Storage="_MixFormulations", ThisKey="Id", OtherKey="StandardMixId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<MixFormulation> MixFormulations
		{
			get
			{
				if ((this.serializing 
							&& (this._MixFormulations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MixFormulations;
			}
			set
			{
				this._MixFormulations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardMix_QuotationMix", Storage="_QuotationMixes", ThisKey="Id", OtherKey="StandardMixId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<QuotationMix> QuotationMixes
		{
			get
			{
				if ((this.serializing 
							&& (this._QuotationMixes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuotationMixes;
			}
			set
			{
				this._QuotationMixes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MixFormulations(MixFormulation entity)
		{
			this.SendPropertyChanging();
			entity.StandardMix = this;
		}
		
		private void detach_MixFormulations(MixFormulation entity)
		{
			this.SendPropertyChanging();
			entity.StandardMix = null;
		}
		
		private void attach_QuotationMixes(QuotationMix entity)
		{
			this.SendPropertyChanging();
			entity.StandardMix = this;
		}
		
		private void detach_QuotationMixes(QuotationMix entity)
		{
			this.SendPropertyChanging();
			entity.StandardMix = null;
		}
		
		private void Initialize()
		{
			this._MixFormulations = new EntitySet<MixFormulation>(new Action<MixFormulation>(this.attach_MixFormulations), new Action<MixFormulation>(this.detach_MixFormulations));
			this._QuotationMixes = new EntitySet<QuotationMix>(new Action<QuotationMix>(this.attach_QuotationMixes), new Action<QuotationMix>(this.detach_QuotationMixes));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StandardMixConstituents")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StandardMixConstituent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _MixFormulationId;
		
		private long _RawMaterialId;
		
		private long _UomId;
		
		private double _Quantity;
		
		private System.Nullable<bool> _PerCementWeight;
		
		private EntityRef<MixFormulation> _MixFormulation;
		
		private EntityRef<RawMaterial> _RawMaterial;
		
		private EntityRef<Uom> _Uom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnMixFormulationIdChanging(long value);
    partial void OnMixFormulationIdChanged();
    partial void OnRawMaterialIdChanging(long value);
    partial void OnRawMaterialIdChanged();
    partial void OnUomIdChanging(long value);
    partial void OnUomIdChanged();
    partial void OnQuantityChanging(double value);
    partial void OnQuantityChanged();
    partial void OnPerCementWeightChanging(System.Nullable<bool> value);
    partial void OnPerCementWeightChanged();
    #endregion
		
		public StandardMixConstituent()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixFormulationId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long MixFormulationId
		{
			get
			{
				return this._MixFormulationId;
			}
			set
			{
				if ((this._MixFormulationId != value))
				{
					if (this._MixFormulation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMixFormulationIdChanging(value);
					this.SendPropertyChanging();
					this._MixFormulationId = value;
					this.SendPropertyChanged("MixFormulationId");
					this.OnMixFormulationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawMaterialId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long RawMaterialId
		{
			get
			{
				return this._RawMaterialId;
			}
			set
			{
				if ((this._RawMaterialId != value))
				{
					if (this._RawMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRawMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._RawMaterialId = value;
					this.SendPropertyChanged("RawMaterialId");
					this.OnRawMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UomId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long UomId
		{
			get
			{
				return this._UomId;
			}
			set
			{
				if ((this._UomId != value))
				{
					if (this._Uom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUomIdChanging(value);
					this.SendPropertyChanging();
					this._UomId = value;
					this.SendPropertyChanged("UomId");
					this.OnUomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public double Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerCementWeight", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> PerCementWeight
		{
			get
			{
				return this._PerCementWeight;
			}
			set
			{
				if ((this._PerCementWeight != value))
				{
					this.OnPerCementWeightChanging(value);
					this.SendPropertyChanging();
					this._PerCementWeight = value;
					this.SendPropertyChanged("PerCementWeight");
					this.OnPerCementWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MixFormulation_StandardMixConstituent", Storage="_MixFormulation", ThisKey="MixFormulationId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MixFormulation MixFormulation
		{
			get
			{
				return this._MixFormulation.Entity;
			}
			set
			{
				MixFormulation previousValue = this._MixFormulation.Entity;
				if (((previousValue != value) 
							|| (this._MixFormulation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MixFormulation.Entity = null;
						previousValue.StandardMixConstituents.Remove(this);
					}
					this._MixFormulation.Entity = value;
					if ((value != null))
					{
						value.StandardMixConstituents.Add(this);
						this._MixFormulationId = value.Id;
					}
					else
					{
						this._MixFormulationId = default(long);
					}
					this.SendPropertyChanged("MixFormulation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RawMaterial_StandardMixConstituent", Storage="_RawMaterial", ThisKey="RawMaterialId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RawMaterial RawMaterial
		{
			get
			{
				return this._RawMaterial.Entity;
			}
			set
			{
				RawMaterial previousValue = this._RawMaterial.Entity;
				if (((previousValue != value) 
							|| (this._RawMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RawMaterial.Entity = null;
						previousValue.StandardMixConstituents.Remove(this);
					}
					this._RawMaterial.Entity = value;
					if ((value != null))
					{
						value.StandardMixConstituents.Add(this);
						this._RawMaterialId = value.Id;
					}
					else
					{
						this._RawMaterialId = default(long);
					}
					this.SendPropertyChanged("RawMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_StandardMixConstituent", Storage="_Uom", ThisKey="UomId", OtherKey="Id", IsForeignKey=true)]
		public Uom Uom
		{
			get
			{
				return this._Uom.Entity;
			}
			set
			{
				Uom previousValue = this._Uom.Entity;
				if (((previousValue != value) 
							|| (this._Uom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uom.Entity = null;
						previousValue.StandardMixConstituents.Remove(this);
					}
					this._Uom.Entity = value;
					if ((value != null))
					{
						value.StandardMixConstituents.Add(this);
						this._UomId = value.Id;
					}
					else
					{
						this._UomId = default(long);
					}
					this.SendPropertyChanged("Uom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._MixFormulation = default(EntityRef<MixFormulation>);
			this._RawMaterial = default(EntityRef<RawMaterial>);
			this._Uom = default(EntityRef<Uom>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupportCategory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SupportCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntitySet<SupportRequest> _SupportRequests;
		
		private EntitySet<SupportRequestRouting> _SupportRequestRoutings;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public SupportCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupportCategory_SupportRequest", Storage="_SupportRequests", ThisKey="Id", OtherKey="CategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<SupportRequest> SupportRequests
		{
			get
			{
				if ((this.serializing 
							&& (this._SupportRequests.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SupportRequests;
			}
			set
			{
				this._SupportRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupportCategory_SupportRequestRouting", Storage="_SupportRequestRoutings", ThisKey="Id", OtherKey="SupportCategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<SupportRequestRouting> SupportRequestRoutings
		{
			get
			{
				if ((this.serializing 
							&& (this._SupportRequestRoutings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SupportRequestRoutings;
			}
			set
			{
				this._SupportRequestRoutings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SupportRequests(SupportRequest entity)
		{
			this.SendPropertyChanging();
			entity.SupportCategory = this;
		}
		
		private void detach_SupportRequests(SupportRequest entity)
		{
			this.SendPropertyChanging();
			entity.SupportCategory = null;
		}
		
		private void attach_SupportRequestRoutings(SupportRequestRouting entity)
		{
			this.SendPropertyChanging();
			entity.SupportCategory = this;
		}
		
		private void detach_SupportRequestRoutings(SupportRequestRouting entity)
		{
			this.SendPropertyChanging();
			entity.SupportCategory = null;
		}
		
		private void Initialize()
		{
			this._SupportRequests = new EntitySet<SupportRequest>(new Action<SupportRequest>(this.attach_SupportRequests), new Action<SupportRequest>(this.detach_SupportRequests));
			this._SupportRequestRoutings = new EntitySet<SupportRequestRouting>(new Action<SupportRequestRouting>(this.attach_SupportRequestRoutings), new Action<SupportRequestRouting>(this.detach_SupportRequestRoutings));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupportRecipients")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SupportRecipient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Email;
		
		private string _Name;
		
		private System.Nullable<bool> _IsDefault;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntitySet<SupportRequestRouting> _SupportRequestRoutings;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsDefaultChanging(System.Nullable<bool> value);
    partial void OnIsDefaultChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public SupportRecipient()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupportRecipient_SupportRequestRouting", Storage="_SupportRequestRoutings", ThisKey="Id", OtherKey="SupportRecipientId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<SupportRequestRouting> SupportRequestRoutings
		{
			get
			{
				if ((this.serializing 
							&& (this._SupportRequestRoutings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SupportRequestRoutings;
			}
			set
			{
				this._SupportRequestRoutings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SupportRequestRoutings(SupportRequestRouting entity)
		{
			this.SendPropertyChanging();
			entity.SupportRecipient = this;
		}
		
		private void detach_SupportRequestRoutings(SupportRequestRouting entity)
		{
			this.SendPropertyChanging();
			entity.SupportRecipient = null;
		}
		
		private void Initialize()
		{
			this._SupportRequestRoutings = new EntitySet<SupportRequestRouting>(new Action<SupportRequestRouting>(this.attach_SupportRequestRoutings), new Action<SupportRequestRouting>(this.detach_SupportRequestRoutings));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupportRequest")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SupportRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _RequestId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _BrowserSpecs;
		
		private string _ScreenResolution;
		
		private string _Email;
		
		private string _Phone;
		
		private string _UrgencyLevel;
		
		private string _ContactMedium;
		
		private System.Nullable<int> _CategoryId;
		
		private string _Description;
		
		private string _Resolution;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntitySet<SupportRequestAttachment> _SupportRequestAttachments;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<SupportCategory> _SupportCategory;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRequestIdChanging(string value);
    partial void OnRequestIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnBrowserSpecsChanging(string value);
    partial void OnBrowserSpecsChanged();
    partial void OnScreenResolutionChanging(string value);
    partial void OnScreenResolutionChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnUrgencyLevelChanging(string value);
    partial void OnUrgencyLevelChanged();
    partial void OnContactMediumChanging(string value);
    partial void OnContactMediumChanged();
    partial void OnCategoryIdChanging(System.Nullable<int> value);
    partial void OnCategoryIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnResolutionChanging(string value);
    partial void OnResolutionChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public SupportRequest()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="NVarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrowserSpecs", DbType="NVarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string BrowserSpecs
		{
			get
			{
				return this._BrowserSpecs;
			}
			set
			{
				if ((this._BrowserSpecs != value))
				{
					this.OnBrowserSpecsChanging(value);
					this.SendPropertyChanging();
					this._BrowserSpecs = value;
					this.SendPropertyChanged("BrowserSpecs");
					this.OnBrowserSpecsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenResolution", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ScreenResolution
		{
			get
			{
				return this._ScreenResolution;
			}
			set
			{
				if ((this._ScreenResolution != value))
				{
					this.OnScreenResolutionChanging(value);
					this.SendPropertyChanging();
					this._ScreenResolution = value;
					this.SendPropertyChanged("ScreenResolution");
					this.OnScreenResolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgencyLevel", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string UrgencyLevel
		{
			get
			{
				return this._UrgencyLevel;
			}
			set
			{
				if ((this._UrgencyLevel != value))
				{
					this.OnUrgencyLevelChanging(value);
					this.SendPropertyChanging();
					this._UrgencyLevel = value;
					this.SendPropertyChanged("UrgencyLevel");
					this.OnUrgencyLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMedium", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ContactMedium
		{
			get
			{
				return this._ContactMedium;
			}
			set
			{
				if ((this._ContactMedium != value))
				{
					this.OnContactMediumChanging(value);
					this.SendPropertyChanging();
					this._ContactMedium = value;
					this.SendPropertyChanged("ContactMedium");
					this.OnContactMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._SupportCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Resolution
		{
			get
			{
				return this._Resolution;
			}
			set
			{
				if ((this._Resolution != value))
				{
					this.OnResolutionChanging(value);
					this.SendPropertyChanging();
					this._Resolution = value;
					this.SendPropertyChanged("Resolution");
					this.OnResolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupportRequest_SupportRequestAttachment", Storage="_SupportRequestAttachments", ThisKey="Id", OtherKey="SupportRequestId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<SupportRequestAttachment> SupportRequestAttachments
		{
			get
			{
				if ((this.serializing 
							&& (this._SupportRequestAttachments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SupportRequestAttachments;
			}
			set
			{
				this._SupportRequestAttachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SupportRequest", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.SupportRequests.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.SupportRequests.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupportCategory_SupportRequest", Storage="_SupportCategory", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public SupportCategory SupportCategory
		{
			get
			{
				return this._SupportCategory.Entity;
			}
			set
			{
				SupportCategory previousValue = this._SupportCategory.Entity;
				if (((previousValue != value) 
							|| (this._SupportCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupportCategory.Entity = null;
						previousValue.SupportRequests.Remove(this);
					}
					this._SupportCategory.Entity = value;
					if ((value != null))
					{
						value.SupportRequests.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SupportCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SupportRequestAttachments(SupportRequestAttachment entity)
		{
			this.SendPropertyChanging();
			entity.SupportRequest = this;
		}
		
		private void detach_SupportRequestAttachments(SupportRequestAttachment entity)
		{
			this.SendPropertyChanging();
			entity.SupportRequest = null;
		}
		
		private void Initialize()
		{
			this._SupportRequestAttachments = new EntitySet<SupportRequestAttachment>(new Action<SupportRequestAttachment>(this.attach_SupportRequestAttachments), new Action<SupportRequestAttachment>(this.detach_SupportRequestAttachments));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._SupportCategory = default(EntityRef<SupportCategory>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupportRequestAttachment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SupportRequestAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _SupportRequestId;
		
		private string _Title;
		
		private string _AttachmentLink;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntityRef<SupportRequest> _SupportRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnSupportRequestIdChanging(System.Nullable<System.Guid> value);
    partial void OnSupportRequestIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAttachmentLinkChanging(string value);
    partial void OnAttachmentLinkChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public SupportRequestAttachment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportRequestId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> SupportRequestId
		{
			get
			{
				return this._SupportRequestId;
			}
			set
			{
				if ((this._SupportRequestId != value))
				{
					if (this._SupportRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupportRequestIdChanging(value);
					this.SendPropertyChanging();
					this._SupportRequestId = value;
					this.SendPropertyChanged("SupportRequestId");
					this.OnSupportRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentLink", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string AttachmentLink
		{
			get
			{
				return this._AttachmentLink;
			}
			set
			{
				if ((this._AttachmentLink != value))
				{
					this.OnAttachmentLinkChanging(value);
					this.SendPropertyChanging();
					this._AttachmentLink = value;
					this.SendPropertyChanged("AttachmentLink");
					this.OnAttachmentLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupportRequest_SupportRequestAttachment", Storage="_SupportRequest", ThisKey="SupportRequestId", OtherKey="Id", IsForeignKey=true)]
		public SupportRequest SupportRequest
		{
			get
			{
				return this._SupportRequest.Entity;
			}
			set
			{
				SupportRequest previousValue = this._SupportRequest.Entity;
				if (((previousValue != value) 
							|| (this._SupportRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupportRequest.Entity = null;
						previousValue.SupportRequestAttachments.Remove(this);
					}
					this._SupportRequest.Entity = value;
					if ((value != null))
					{
						value.SupportRequestAttachments.Add(this);
						this._SupportRequestId = value.Id;
					}
					else
					{
						this._SupportRequestId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SupportRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SupportRequest = default(EntityRef<SupportRequest>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupportRequestRouting")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SupportRequestRouting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _SupportCategoryId;
		
		private long _SupportRecipientId;
		
		private EntityRef<SupportCategory> _SupportCategory;
		
		private EntityRef<SupportRecipient> _SupportRecipient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSupportCategoryIdChanging(int value);
    partial void OnSupportCategoryIdChanged();
    partial void OnSupportRecipientIdChanging(long value);
    partial void OnSupportRecipientIdChanged();
    #endregion
		
		public SupportRequestRouting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportCategoryId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SupportCategoryId
		{
			get
			{
				return this._SupportCategoryId;
			}
			set
			{
				if ((this._SupportCategoryId != value))
				{
					if (this._SupportCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupportCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._SupportCategoryId = value;
					this.SendPropertyChanged("SupportCategoryId");
					this.OnSupportCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportRecipientId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public long SupportRecipientId
		{
			get
			{
				return this._SupportRecipientId;
			}
			set
			{
				if ((this._SupportRecipientId != value))
				{
					if (this._SupportRecipient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupportRecipientIdChanging(value);
					this.SendPropertyChanging();
					this._SupportRecipientId = value;
					this.SendPropertyChanged("SupportRecipientId");
					this.OnSupportRecipientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupportCategory_SupportRequestRouting", Storage="_SupportCategory", ThisKey="SupportCategoryId", OtherKey="Id", IsForeignKey=true)]
		public SupportCategory SupportCategory
		{
			get
			{
				return this._SupportCategory.Entity;
			}
			set
			{
				SupportCategory previousValue = this._SupportCategory.Entity;
				if (((previousValue != value) 
							|| (this._SupportCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupportCategory.Entity = null;
						previousValue.SupportRequestRoutings.Remove(this);
					}
					this._SupportCategory.Entity = value;
					if ((value != null))
					{
						value.SupportRequestRoutings.Add(this);
						this._SupportCategoryId = value.Id;
					}
					else
					{
						this._SupportCategoryId = default(int);
					}
					this.SendPropertyChanged("SupportCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupportRecipient_SupportRequestRouting", Storage="_SupportRecipient", ThisKey="SupportRecipientId", OtherKey="Id", IsForeignKey=true)]
		public SupportRecipient SupportRecipient
		{
			get
			{
				return this._SupportRecipient.Entity;
			}
			set
			{
				SupportRecipient previousValue = this._SupportRecipient.Entity;
				if (((previousValue != value) 
							|| (this._SupportRecipient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupportRecipient.Entity = null;
						previousValue.SupportRequestRoutings.Remove(this);
					}
					this._SupportRecipient.Entity = value;
					if ((value != null))
					{
						value.SupportRequestRoutings.Add(this);
						this._SupportRecipientId = value.Id;
					}
					else
					{
						this._SupportRecipientId = default(long);
					}
					this.SendPropertyChanged("SupportRecipient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SupportCategory = default(EntityRef<SupportCategory>);
			this._SupportRecipient = default(EntityRef<SupportRecipient>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TargetIndicatorAllowances")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TargetIndicatorAllowance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Metric;
		
		private double _Target;
		
		private double _Ok;
		
		private double _Caution;
		
		private System.Nullable<bool> _LessIsBetter;
		
		private string _DisplayName;
		
		private string _NumFormat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMetricChanging(string value);
    partial void OnMetricChanged();
    partial void OnTargetChanging(double value);
    partial void OnTargetChanged();
    partial void OnOkChanging(double value);
    partial void OnOkChanged();
    partial void OnCautionChanging(double value);
    partial void OnCautionChanged();
    partial void OnLessIsBetterChanging(System.Nullable<bool> value);
    partial void OnLessIsBetterChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnNumFormatChanging(string value);
    partial void OnNumFormatChanged();
    #endregion
		
		public TargetIndicatorAllowance()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metric", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Metric
		{
			get
			{
				return this._Metric;
			}
			set
			{
				if ((this._Metric != value))
				{
					this.OnMetricChanging(value);
					this.SendPropertyChanging();
					this._Metric = value;
					this.SendPropertyChanged("Metric");
					this.OnMetricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public double Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ok", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public double Ok
		{
			get
			{
				return this._Ok;
			}
			set
			{
				if ((this._Ok != value))
				{
					this.OnOkChanging(value);
					this.SendPropertyChanging();
					this._Ok = value;
					this.SendPropertyChanged("Ok");
					this.OnOkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caution", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public double Caution
		{
			get
			{
				return this._Caution;
			}
			set
			{
				if ((this._Caution != value))
				{
					this.OnCautionChanging(value);
					this.SendPropertyChanging();
					this._Caution = value;
					this.SendPropertyChanged("Caution");
					this.OnCautionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessIsBetter", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> LessIsBetter
		{
			get
			{
				return this._LessIsBetter;
			}
			set
			{
				if ((this._LessIsBetter != value))
				{
					this.OnLessIsBetterChanging(value);
					this.SendPropertyChanging();
					this._LessIsBetter = value;
					this.SendPropertyChanged("LessIsBetter");
					this.OnLessIsBetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumFormat", DbType="VarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string NumFormat
		{
			get
			{
				return this._NumFormat;
			}
			set
			{
				if ((this._NumFormat != value))
				{
					this.OnNumFormatChanging(value);
					this.SendPropertyChanging();
					this._NumFormat = value;
					this.SendPropertyChanged("NumFormat");
					this.OnNumFormatChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaxCode")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TaxCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Code;
		
		private string _Description;
		
		private string _DispatchId;
		
		private System.Nullable<bool> _Synced;
		
		private EntitySet<Quotation> _Quotations;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnSyncedChanging(System.Nullable<bool> value);
    partial void OnSyncedChanged();
    #endregion
		
		public TaxCode()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synced", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> Synced
		{
			get
			{
				return this._Synced;
			}
			set
			{
				if ((this._Synced != value))
				{
					this.OnSyncedChanging(value);
					this.SendPropertyChanging();
					this._Synced = value;
					this.SendPropertyChanged("Synced");
					this.OnSyncedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaxCode_Quotation", Storage="_Quotations", ThisKey="Id", OtherKey="TaxCodeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<Quotation> Quotations
		{
			get
			{
				if ((this.serializing 
							&& (this._Quotations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Quotations;
			}
			set
			{
				this._Quotations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.TaxCode = this;
		}
		
		private void detach_Quotations(Quotation entity)
		{
			this.SendPropertyChanging();
			entity.TaxCode = null;
		}
		
		private void Initialize()
		{
			this._Quotations = new EntitySet<Quotation>(new Action<Quotation>(this.attach_Quotations), new Action<Quotation>(this.detach_Quotations));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TicketDetails")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TicketDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _TicketId;
		
		private string _TicketNumber;
		
		private System.Nullable<System.DateTime> _TicketDate;
		
		private bool _VoidStatus;
		
		private System.Nullable<System.DateTime> _TimeDueOnJob;
		
		private System.Nullable<System.DateTime> _TimeTicketed;
		
		private System.Nullable<System.DateTime> _TimeBeginLoad;
		
		private System.Nullable<System.DateTime> _TimeEndLoad;
		
		private System.Nullable<System.DateTime> _TimeLeavePlant;
		
		private System.Nullable<System.DateTime> _TimeArriveJob;
		
		private System.Nullable<System.DateTime> _TimeBeginUnload;
		
		private System.Nullable<System.DateTime> _TimeEndUnload;
		
		private System.Nullable<System.DateTime> _TimeLeaveJob;
		
		private System.Nullable<System.DateTime> _TimeArrivePlant;
		
		private string _PlantNumber;
		
		private string _PlantDescription;
		
		private System.Nullable<bool> _FOB;
		
		private string _DriverNumber;
		
		private string _DriverDescription;
		
		private string _DriverType;
		
		private string _DriveHomePlantNumber;
		
		private string _TruckNumber;
		
		private string _TruckType;
		
		private string _TruckHomePlantNumber;
		
		private string _CustomerNumber;
		
		private string _CustomerDescription;
		
		private string _CustomerSegmentNumber;
		
		private string _CustomerSegmentDesc;
		
		private string _CustomerCity;
		
		private string _CustomerZip;
		
		private string _JobNumber;
		
		private string _JobDescription;
		
		private string _JobSegmentNumber;
		
		private string _JobSegmentDescription;
		
		private string _DeliveryAddress;
		
		private string _SalesPersonNumber;
		
		private string _SalesPersonDescription;
		
		private string _BatchmanNumber;
		
		private string _BatchmanDescription;
		
		private System.Nullable<double> _DeliveredVolume;
		
		private System.Nullable<decimal> _TotalRevenue;
		
		private System.Nullable<decimal> _MaterialCost;
		
		private bool _IsMongoUpdated;
		
		private bool _IsScrubbed;
		
		private bool _IsProcessed;
		
		private bool _HasInvalidData;
		
		private System.Nullable<long> _DriverLoginTimeId;
		
		private System.Nullable<double> _StartupTime;
		
		private System.Nullable<double> _ShutdownTime;
		
		private System.Nullable<double> _InYardTime;
		
		private System.Nullable<double> _EstimatedClockHours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTicketIdChanging(string value);
    partial void OnTicketIdChanged();
    partial void OnTicketNumberChanging(string value);
    partial void OnTicketNumberChanged();
    partial void OnTicketDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTicketDateChanged();
    partial void OnVoidStatusChanging(bool value);
    partial void OnVoidStatusChanged();
    partial void OnTimeDueOnJobChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeDueOnJobChanged();
    partial void OnTimeTicketedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeTicketedChanged();
    partial void OnTimeBeginLoadChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeBeginLoadChanged();
    partial void OnTimeEndLoadChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeEndLoadChanged();
    partial void OnTimeLeavePlantChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeLeavePlantChanged();
    partial void OnTimeArriveJobChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeArriveJobChanged();
    partial void OnTimeBeginUnloadChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeBeginUnloadChanged();
    partial void OnTimeEndUnloadChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeEndUnloadChanged();
    partial void OnTimeLeaveJobChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeLeaveJobChanged();
    partial void OnTimeArrivePlantChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeArrivePlantChanged();
    partial void OnPlantNumberChanging(string value);
    partial void OnPlantNumberChanged();
    partial void OnPlantDescriptionChanging(string value);
    partial void OnPlantDescriptionChanged();
    partial void OnFOBChanging(System.Nullable<bool> value);
    partial void OnFOBChanged();
    partial void OnDriverNumberChanging(string value);
    partial void OnDriverNumberChanged();
    partial void OnDriverDescriptionChanging(string value);
    partial void OnDriverDescriptionChanged();
    partial void OnDriverTypeChanging(string value);
    partial void OnDriverTypeChanged();
    partial void OnDriveHomePlantNumberChanging(string value);
    partial void OnDriveHomePlantNumberChanged();
    partial void OnTruckNumberChanging(string value);
    partial void OnTruckNumberChanged();
    partial void OnTruckTypeChanging(string value);
    partial void OnTruckTypeChanged();
    partial void OnTruckHomePlantNumberChanging(string value);
    partial void OnTruckHomePlantNumberChanged();
    partial void OnCustomerNumberChanging(string value);
    partial void OnCustomerNumberChanged();
    partial void OnCustomerDescriptionChanging(string value);
    partial void OnCustomerDescriptionChanged();
    partial void OnCustomerSegmentNumberChanging(string value);
    partial void OnCustomerSegmentNumberChanged();
    partial void OnCustomerSegmentDescChanging(string value);
    partial void OnCustomerSegmentDescChanged();
    partial void OnCustomerCityChanging(string value);
    partial void OnCustomerCityChanged();
    partial void OnCustomerZipChanging(string value);
    partial void OnCustomerZipChanged();
    partial void OnJobNumberChanging(string value);
    partial void OnJobNumberChanged();
    partial void OnJobDescriptionChanging(string value);
    partial void OnJobDescriptionChanged();
    partial void OnJobSegmentNumberChanging(string value);
    partial void OnJobSegmentNumberChanged();
    partial void OnJobSegmentDescriptionChanging(string value);
    partial void OnJobSegmentDescriptionChanged();
    partial void OnDeliveryAddressChanging(string value);
    partial void OnDeliveryAddressChanged();
    partial void OnSalesPersonNumberChanging(string value);
    partial void OnSalesPersonNumberChanged();
    partial void OnSalesPersonDescriptionChanging(string value);
    partial void OnSalesPersonDescriptionChanged();
    partial void OnBatchmanNumberChanging(string value);
    partial void OnBatchmanNumberChanged();
    partial void OnBatchmanDescriptionChanging(string value);
    partial void OnBatchmanDescriptionChanged();
    partial void OnDeliveredVolumeChanging(System.Nullable<double> value);
    partial void OnDeliveredVolumeChanged();
    partial void OnTotalRevenueChanging(System.Nullable<decimal> value);
    partial void OnTotalRevenueChanged();
    partial void OnMaterialCostChanging(System.Nullable<decimal> value);
    partial void OnMaterialCostChanged();
    partial void OnIsMongoUpdatedChanging(bool value);
    partial void OnIsMongoUpdatedChanged();
    partial void OnIsScrubbedChanging(bool value);
    partial void OnIsScrubbedChanged();
    partial void OnIsProcessedChanging(bool value);
    partial void OnIsProcessedChanged();
    partial void OnHasInvalidDataChanging(bool value);
    partial void OnHasInvalidDataChanged();
    partial void OnDriverLoginTimeIdChanging(System.Nullable<long> value);
    partial void OnDriverLoginTimeIdChanged();
    partial void OnStartupTimeChanging(System.Nullable<double> value);
    partial void OnStartupTimeChanged();
    partial void OnShutdownTimeChanging(System.Nullable<double> value);
    partial void OnShutdownTimeChanged();
    partial void OnInYardTimeChanging(System.Nullable<double> value);
    partial void OnInYardTimeChanged();
    partial void OnEstimatedClockHoursChanging(System.Nullable<double> value);
    partial void OnEstimatedClockHoursChanged();
    #endregion
		
		public TicketDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TicketId
		{
			get
			{
				return this._TicketId;
			}
			set
			{
				if ((this._TicketId != value))
				{
					this.OnTicketIdChanging(value);
					this.SendPropertyChanging();
					this._TicketId = value;
					this.SendPropertyChanged("TicketId");
					this.OnTicketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TicketNumber
		{
			get
			{
				return this._TicketNumber;
			}
			set
			{
				if ((this._TicketNumber != value))
				{
					this.OnTicketNumberChanging(value);
					this.SendPropertyChanging();
					this._TicketNumber = value;
					this.SendPropertyChanged("TicketNumber");
					this.OnTicketNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketDate", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> TicketDate
		{
			get
			{
				return this._TicketDate;
			}
			set
			{
				if ((this._TicketDate != value))
				{
					this.OnTicketDateChanging(value);
					this.SendPropertyChanging();
					this._TicketDate = value;
					this.SendPropertyChanged("TicketDate");
					this.OnTicketDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidStatus", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool VoidStatus
		{
			get
			{
				return this._VoidStatus;
			}
			set
			{
				if ((this._VoidStatus != value))
				{
					this.OnVoidStatusChanging(value);
					this.SendPropertyChanging();
					this._VoidStatus = value;
					this.SendPropertyChanged("VoidStatus");
					this.OnVoidStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeDueOnJob", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> TimeDueOnJob
		{
			get
			{
				return this._TimeDueOnJob;
			}
			set
			{
				if ((this._TimeDueOnJob != value))
				{
					this.OnTimeDueOnJobChanging(value);
					this.SendPropertyChanging();
					this._TimeDueOnJob = value;
					this.SendPropertyChanged("TimeDueOnJob");
					this.OnTimeDueOnJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeTicketed", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> TimeTicketed
		{
			get
			{
				return this._TimeTicketed;
			}
			set
			{
				if ((this._TimeTicketed != value))
				{
					this.OnTimeTicketedChanging(value);
					this.SendPropertyChanging();
					this._TimeTicketed = value;
					this.SendPropertyChanged("TimeTicketed");
					this.OnTimeTicketedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeBeginLoad", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> TimeBeginLoad
		{
			get
			{
				return this._TimeBeginLoad;
			}
			set
			{
				if ((this._TimeBeginLoad != value))
				{
					this.OnTimeBeginLoadChanging(value);
					this.SendPropertyChanging();
					this._TimeBeginLoad = value;
					this.SendPropertyChanged("TimeBeginLoad");
					this.OnTimeBeginLoadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEndLoad", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> TimeEndLoad
		{
			get
			{
				return this._TimeEndLoad;
			}
			set
			{
				if ((this._TimeEndLoad != value))
				{
					this.OnTimeEndLoadChanging(value);
					this.SendPropertyChanging();
					this._TimeEndLoad = value;
					this.SendPropertyChanged("TimeEndLoad");
					this.OnTimeEndLoadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLeavePlant", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> TimeLeavePlant
		{
			get
			{
				return this._TimeLeavePlant;
			}
			set
			{
				if ((this._TimeLeavePlant != value))
				{
					this.OnTimeLeavePlantChanging(value);
					this.SendPropertyChanging();
					this._TimeLeavePlant = value;
					this.SendPropertyChanged("TimeLeavePlant");
					this.OnTimeLeavePlantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeArriveJob", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.DateTime> TimeArriveJob
		{
			get
			{
				return this._TimeArriveJob;
			}
			set
			{
				if ((this._TimeArriveJob != value))
				{
					this.OnTimeArriveJobChanging(value);
					this.SendPropertyChanging();
					this._TimeArriveJob = value;
					this.SendPropertyChanged("TimeArriveJob");
					this.OnTimeArriveJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeBeginUnload", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.DateTime> TimeBeginUnload
		{
			get
			{
				return this._TimeBeginUnload;
			}
			set
			{
				if ((this._TimeBeginUnload != value))
				{
					this.OnTimeBeginUnloadChanging(value);
					this.SendPropertyChanging();
					this._TimeBeginUnload = value;
					this.SendPropertyChanged("TimeBeginUnload");
					this.OnTimeBeginUnloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEndUnload", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<System.DateTime> TimeEndUnload
		{
			get
			{
				return this._TimeEndUnload;
			}
			set
			{
				if ((this._TimeEndUnload != value))
				{
					this.OnTimeEndUnloadChanging(value);
					this.SendPropertyChanging();
					this._TimeEndUnload = value;
					this.SendPropertyChanged("TimeEndUnload");
					this.OnTimeEndUnloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLeaveJob", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<System.DateTime> TimeLeaveJob
		{
			get
			{
				return this._TimeLeaveJob;
			}
			set
			{
				if ((this._TimeLeaveJob != value))
				{
					this.OnTimeLeaveJobChanging(value);
					this.SendPropertyChanging();
					this._TimeLeaveJob = value;
					this.SendPropertyChanged("TimeLeaveJob");
					this.OnTimeLeaveJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeArrivePlant", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<System.DateTime> TimeArrivePlant
		{
			get
			{
				return this._TimeArrivePlant;
			}
			set
			{
				if ((this._TimeArrivePlant != value))
				{
					this.OnTimeArrivePlantChanging(value);
					this.SendPropertyChanging();
					this._TimeArrivePlant = value;
					this.SendPropertyChanged("TimeArrivePlant");
					this.OnTimeArrivePlantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string PlantNumber
		{
			get
			{
				return this._PlantNumber;
			}
			set
			{
				if ((this._PlantNumber != value))
				{
					this.OnPlantNumberChanging(value);
					this.SendPropertyChanging();
					this._PlantNumber = value;
					this.SendPropertyChanged("PlantNumber");
					this.OnPlantNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantDescription", DbType="VarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string PlantDescription
		{
			get
			{
				return this._PlantDescription;
			}
			set
			{
				if ((this._PlantDescription != value))
				{
					this.OnPlantDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PlantDescription = value;
					this.SendPropertyChanged("PlantDescription");
					this.OnPlantDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOB", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<bool> FOB
		{
			get
			{
				return this._FOB;
			}
			set
			{
				if ((this._FOB != value))
				{
					this.OnFOBChanging(value);
					this.SendPropertyChanging();
					this._FOB = value;
					this.SendPropertyChanged("FOB");
					this.OnFOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverNumber", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string DriverNumber
		{
			get
			{
				return this._DriverNumber;
			}
			set
			{
				if ((this._DriverNumber != value))
				{
					this.OnDriverNumberChanging(value);
					this.SendPropertyChanging();
					this._DriverNumber = value;
					this.SendPropertyChanged("DriverNumber");
					this.OnDriverNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverDescription", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string DriverDescription
		{
			get
			{
				return this._DriverDescription;
			}
			set
			{
				if ((this._DriverDescription != value))
				{
					this.OnDriverDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DriverDescription = value;
					this.SendPropertyChanged("DriverDescription");
					this.OnDriverDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverType", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string DriverType
		{
			get
			{
				return this._DriverType;
			}
			set
			{
				if ((this._DriverType != value))
				{
					this.OnDriverTypeChanging(value);
					this.SendPropertyChanging();
					this._DriverType = value;
					this.SendPropertyChanged("DriverType");
					this.OnDriverTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriveHomePlantNumber", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string DriveHomePlantNumber
		{
			get
			{
				return this._DriveHomePlantNumber;
			}
			set
			{
				if ((this._DriveHomePlantNumber != value))
				{
					this.OnDriveHomePlantNumberChanging(value);
					this.SendPropertyChanging();
					this._DriveHomePlantNumber = value;
					this.SendPropertyChanged("DriveHomePlantNumber");
					this.OnDriveHomePlantNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckNumber", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string TruckNumber
		{
			get
			{
				return this._TruckNumber;
			}
			set
			{
				if ((this._TruckNumber != value))
				{
					this.OnTruckNumberChanging(value);
					this.SendPropertyChanging();
					this._TruckNumber = value;
					this.SendPropertyChanged("TruckNumber");
					this.OnTruckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckType", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string TruckType
		{
			get
			{
				return this._TruckType;
			}
			set
			{
				if ((this._TruckType != value))
				{
					this.OnTruckTypeChanging(value);
					this.SendPropertyChanging();
					this._TruckType = value;
					this.SendPropertyChanged("TruckType");
					this.OnTruckTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckHomePlantNumber", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public string TruckHomePlantNumber
		{
			get
			{
				return this._TruckHomePlantNumber;
			}
			set
			{
				if ((this._TruckHomePlantNumber != value))
				{
					this.OnTruckHomePlantNumberChanging(value);
					this.SendPropertyChanging();
					this._TruckHomePlantNumber = value;
					this.SendPropertyChanged("TruckHomePlantNumber");
					this.OnTruckHomePlantNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDescription", DbType="VarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public string CustomerDescription
		{
			get
			{
				return this._CustomerDescription;
			}
			set
			{
				if ((this._CustomerDescription != value))
				{
					this.OnCustomerDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CustomerDescription = value;
					this.SendPropertyChanged("CustomerDescription");
					this.OnCustomerDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerSegmentNumber", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public string CustomerSegmentNumber
		{
			get
			{
				return this._CustomerSegmentNumber;
			}
			set
			{
				if ((this._CustomerSegmentNumber != value))
				{
					this.OnCustomerSegmentNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerSegmentNumber = value;
					this.SendPropertyChanged("CustomerSegmentNumber");
					this.OnCustomerSegmentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerSegmentDesc", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public string CustomerSegmentDesc
		{
			get
			{
				return this._CustomerSegmentDesc;
			}
			set
			{
				if ((this._CustomerSegmentDesc != value))
				{
					this.OnCustomerSegmentDescChanging(value);
					this.SendPropertyChanging();
					this._CustomerSegmentDesc = value;
					this.SendPropertyChanged("CustomerSegmentDesc");
					this.OnCustomerSegmentDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCity", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public string CustomerCity
		{
			get
			{
				return this._CustomerCity;
			}
			set
			{
				if ((this._CustomerCity != value))
				{
					this.OnCustomerCityChanging(value);
					this.SendPropertyChanging();
					this._CustomerCity = value;
					this.SendPropertyChanged("CustomerCity");
					this.OnCustomerCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerZip", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public string CustomerZip
		{
			get
			{
				return this._CustomerZip;
			}
			set
			{
				if ((this._CustomerZip != value))
				{
					this.OnCustomerZipChanging(value);
					this.SendPropertyChanging();
					this._CustomerZip = value;
					this.SendPropertyChanged("CustomerZip");
					this.OnCustomerZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobNumber", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public string JobNumber
		{
			get
			{
				return this._JobNumber;
			}
			set
			{
				if ((this._JobNumber != value))
				{
					this.OnJobNumberChanging(value);
					this.SendPropertyChanging();
					this._JobNumber = value;
					this.SendPropertyChanged("JobNumber");
					this.OnJobNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDescription", DbType="VarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public string JobDescription
		{
			get
			{
				return this._JobDescription;
			}
			set
			{
				if ((this._JobDescription != value))
				{
					this.OnJobDescriptionChanging(value);
					this.SendPropertyChanging();
					this._JobDescription = value;
					this.SendPropertyChanged("JobDescription");
					this.OnJobDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobSegmentNumber", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public string JobSegmentNumber
		{
			get
			{
				return this._JobSegmentNumber;
			}
			set
			{
				if ((this._JobSegmentNumber != value))
				{
					this.OnJobSegmentNumberChanging(value);
					this.SendPropertyChanging();
					this._JobSegmentNumber = value;
					this.SendPropertyChanged("JobSegmentNumber");
					this.OnJobSegmentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobSegmentDescription", DbType="VarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public string JobSegmentDescription
		{
			get
			{
				return this._JobSegmentDescription;
			}
			set
			{
				if ((this._JobSegmentDescription != value))
				{
					this.OnJobSegmentDescriptionChanging(value);
					this.SendPropertyChanging();
					this._JobSegmentDescription = value;
					this.SendPropertyChanged("JobSegmentDescription");
					this.OnJobSegmentDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryAddress", DbType="VarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36)]
		public string DeliveryAddress
		{
			get
			{
				return this._DeliveryAddress;
			}
			set
			{
				if ((this._DeliveryAddress != value))
				{
					this.OnDeliveryAddressChanging(value);
					this.SendPropertyChanging();
					this._DeliveryAddress = value;
					this.SendPropertyChanged("DeliveryAddress");
					this.OnDeliveryAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPersonNumber", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37)]
		public string SalesPersonNumber
		{
			get
			{
				return this._SalesPersonNumber;
			}
			set
			{
				if ((this._SalesPersonNumber != value))
				{
					this.OnSalesPersonNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesPersonNumber = value;
					this.SendPropertyChanged("SalesPersonNumber");
					this.OnSalesPersonNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPersonDescription", DbType="VarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38)]
		public string SalesPersonDescription
		{
			get
			{
				return this._SalesPersonDescription;
			}
			set
			{
				if ((this._SalesPersonDescription != value))
				{
					this.OnSalesPersonDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SalesPersonDescription = value;
					this.SendPropertyChanged("SalesPersonDescription");
					this.OnSalesPersonDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchmanNumber", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39)]
		public string BatchmanNumber
		{
			get
			{
				return this._BatchmanNumber;
			}
			set
			{
				if ((this._BatchmanNumber != value))
				{
					this.OnBatchmanNumberChanging(value);
					this.SendPropertyChanging();
					this._BatchmanNumber = value;
					this.SendPropertyChanged("BatchmanNumber");
					this.OnBatchmanNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchmanDescription", DbType="VarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40)]
		public string BatchmanDescription
		{
			get
			{
				return this._BatchmanDescription;
			}
			set
			{
				if ((this._BatchmanDescription != value))
				{
					this.OnBatchmanDescriptionChanging(value);
					this.SendPropertyChanging();
					this._BatchmanDescription = value;
					this.SendPropertyChanged("BatchmanDescription");
					this.OnBatchmanDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveredVolume", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41)]
		public System.Nullable<double> DeliveredVolume
		{
			get
			{
				return this._DeliveredVolume;
			}
			set
			{
				if ((this._DeliveredVolume != value))
				{
					this.OnDeliveredVolumeChanging(value);
					this.SendPropertyChanging();
					this._DeliveredVolume = value;
					this.SendPropertyChanged("DeliveredVolume");
					this.OnDeliveredVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRevenue", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=42)]
		public System.Nullable<decimal> TotalRevenue
		{
			get
			{
				return this._TotalRevenue;
			}
			set
			{
				if ((this._TotalRevenue != value))
				{
					this.OnTotalRevenueChanging(value);
					this.SendPropertyChanging();
					this._TotalRevenue = value;
					this.SendPropertyChanged("TotalRevenue");
					this.OnTotalRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCost", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=43)]
		public System.Nullable<decimal> MaterialCost
		{
			get
			{
				return this._MaterialCost;
			}
			set
			{
				if ((this._MaterialCost != value))
				{
					this.OnMaterialCostChanging(value);
					this.SendPropertyChanging();
					this._MaterialCost = value;
					this.SendPropertyChanged("MaterialCost");
					this.OnMaterialCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMongoUpdated", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=44)]
		public bool IsMongoUpdated
		{
			get
			{
				return this._IsMongoUpdated;
			}
			set
			{
				if ((this._IsMongoUpdated != value))
				{
					this.OnIsMongoUpdatedChanging(value);
					this.SendPropertyChanging();
					this._IsMongoUpdated = value;
					this.SendPropertyChanged("IsMongoUpdated");
					this.OnIsMongoUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScrubbed", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=45)]
		public bool IsScrubbed
		{
			get
			{
				return this._IsScrubbed;
			}
			set
			{
				if ((this._IsScrubbed != value))
				{
					this.OnIsScrubbedChanging(value);
					this.SendPropertyChanging();
					this._IsScrubbed = value;
					this.SendPropertyChanged("IsScrubbed");
					this.OnIsScrubbedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcessed", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=46)]
		public bool IsProcessed
		{
			get
			{
				return this._IsProcessed;
			}
			set
			{
				if ((this._IsProcessed != value))
				{
					this.OnIsProcessedChanging(value);
					this.SendPropertyChanging();
					this._IsProcessed = value;
					this.SendPropertyChanged("IsProcessed");
					this.OnIsProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasInvalidData", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=47)]
		public bool HasInvalidData
		{
			get
			{
				return this._HasInvalidData;
			}
			set
			{
				if ((this._HasInvalidData != value))
				{
					this.OnHasInvalidDataChanging(value);
					this.SendPropertyChanging();
					this._HasInvalidData = value;
					this.SendPropertyChanged("HasInvalidData");
					this.OnHasInvalidDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverLoginTimeId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=48)]
		public System.Nullable<long> DriverLoginTimeId
		{
			get
			{
				return this._DriverLoginTimeId;
			}
			set
			{
				if ((this._DriverLoginTimeId != value))
				{
					this.OnDriverLoginTimeIdChanging(value);
					this.SendPropertyChanging();
					this._DriverLoginTimeId = value;
					this.SendPropertyChanged("DriverLoginTimeId");
					this.OnDriverLoginTimeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartupTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=49)]
		public System.Nullable<double> StartupTime
		{
			get
			{
				return this._StartupTime;
			}
			set
			{
				if ((this._StartupTime != value))
				{
					this.OnStartupTimeChanging(value);
					this.SendPropertyChanging();
					this._StartupTime = value;
					this.SendPropertyChanged("StartupTime");
					this.OnStartupTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShutdownTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=50)]
		public System.Nullable<double> ShutdownTime
		{
			get
			{
				return this._ShutdownTime;
			}
			set
			{
				if ((this._ShutdownTime != value))
				{
					this.OnShutdownTimeChanging(value);
					this.SendPropertyChanging();
					this._ShutdownTime = value;
					this.SendPropertyChanged("ShutdownTime");
					this.OnShutdownTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InYardTime", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=51)]
		public System.Nullable<double> InYardTime
		{
			get
			{
				return this._InYardTime;
			}
			set
			{
				if ((this._InYardTime != value))
				{
					this.OnInYardTimeChanging(value);
					this.SendPropertyChanging();
					this._InYardTime = value;
					this.SendPropertyChanged("InYardTime");
					this.OnInYardTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedClockHours", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=52)]
		public System.Nullable<double> EstimatedClockHours
		{
			get
			{
				return this._EstimatedClockHours;
			}
			set
			{
				if ((this._EstimatedClockHours != value))
				{
					this.OnEstimatedClockHoursChanging(value);
					this.SendPropertyChanging();
					this._EstimatedClockHours = value;
					this.SendPropertyChanged("EstimatedClockHours");
					this.OnEstimatedClockHoursChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrendAnalysisReportConfig")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TrendAnalysisReportConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ReportSettingId;
		
		private int _MetricDefinitionId;
		
		private System.Nullable<int> _TargetMetricDefinitionId;
		
		private System.Nullable<double> _UpperControlLimit;
		
		private System.Nullable<double> _LowerControlLimit;
		
		private System.Nullable<bool> _OmitPeriodsWithNoData;
		
		private System.Nullable<double> _ScalingMin;
		
		private System.Nullable<double> _ScalingMax;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<bool> _IsScallingAutoFit;
		
		private EntityRef<MetricDefinition> _MetricDefinition;
		
		private EntityRef<ReportSetting> _ReportSetting;
		
		private EntityRef<MetricDefinition> _MetricDefinition1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnReportSettingIdChanging(long value);
    partial void OnReportSettingIdChanged();
    partial void OnMetricDefinitionIdChanging(int value);
    partial void OnMetricDefinitionIdChanged();
    partial void OnTargetMetricDefinitionIdChanging(System.Nullable<int> value);
    partial void OnTargetMetricDefinitionIdChanged();
    partial void OnUpperControlLimitChanging(System.Nullable<double> value);
    partial void OnUpperControlLimitChanged();
    partial void OnLowerControlLimitChanging(System.Nullable<double> value);
    partial void OnLowerControlLimitChanged();
    partial void OnOmitPeriodsWithNoDataChanging(System.Nullable<bool> value);
    partial void OnOmitPeriodsWithNoDataChanged();
    partial void OnScalingMinChanging(System.Nullable<double> value);
    partial void OnScalingMinChanged();
    partial void OnScalingMaxChanging(System.Nullable<double> value);
    partial void OnScalingMaxChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnIsScallingAutoFitChanging(System.Nullable<bool> value);
    partial void OnIsScallingAutoFitChanged();
    #endregion
		
		public TrendAnalysisReportConfig()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportSettingId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long ReportSettingId
		{
			get
			{
				return this._ReportSettingId;
			}
			set
			{
				if ((this._ReportSettingId != value))
				{
					if (this._ReportSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportSettingIdChanging(value);
					this.SendPropertyChanging();
					this._ReportSettingId = value;
					this.SendPropertyChanged("ReportSettingId");
					this.OnReportSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetricDefinitionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int MetricDefinitionId
		{
			get
			{
				return this._MetricDefinitionId;
			}
			set
			{
				if ((this._MetricDefinitionId != value))
				{
					if (this._MetricDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMetricDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._MetricDefinitionId = value;
					this.SendPropertyChanged("MetricDefinitionId");
					this.OnMetricDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetMetricDefinitionId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> TargetMetricDefinitionId
		{
			get
			{
				return this._TargetMetricDefinitionId;
			}
			set
			{
				if ((this._TargetMetricDefinitionId != value))
				{
					if (this._MetricDefinition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetMetricDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._TargetMetricDefinitionId = value;
					this.SendPropertyChanged("TargetMetricDefinitionId");
					this.OnTargetMetricDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpperControlLimit", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<double> UpperControlLimit
		{
			get
			{
				return this._UpperControlLimit;
			}
			set
			{
				if ((this._UpperControlLimit != value))
				{
					this.OnUpperControlLimitChanging(value);
					this.SendPropertyChanging();
					this._UpperControlLimit = value;
					this.SendPropertyChanged("UpperControlLimit");
					this.OnUpperControlLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowerControlLimit", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<double> LowerControlLimit
		{
			get
			{
				return this._LowerControlLimit;
			}
			set
			{
				if ((this._LowerControlLimit != value))
				{
					this.OnLowerControlLimitChanging(value);
					this.SendPropertyChanging();
					this._LowerControlLimit = value;
					this.SendPropertyChanged("LowerControlLimit");
					this.OnLowerControlLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OmitPeriodsWithNoData", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> OmitPeriodsWithNoData
		{
			get
			{
				return this._OmitPeriodsWithNoData;
			}
			set
			{
				if ((this._OmitPeriodsWithNoData != value))
				{
					this.OnOmitPeriodsWithNoDataChanging(value);
					this.SendPropertyChanging();
					this._OmitPeriodsWithNoData = value;
					this.SendPropertyChanged("OmitPeriodsWithNoData");
					this.OnOmitPeriodsWithNoDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScalingMin", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<double> ScalingMin
		{
			get
			{
				return this._ScalingMin;
			}
			set
			{
				if ((this._ScalingMin != value))
				{
					this.OnScalingMinChanging(value);
					this.SendPropertyChanging();
					this._ScalingMin = value;
					this.SendPropertyChanged("ScalingMin");
					this.OnScalingMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScalingMax", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<double> ScalingMax
		{
			get
			{
				return this._ScalingMax;
			}
			set
			{
				if ((this._ScalingMax != value))
				{
					this.OnScalingMaxChanging(value);
					this.SendPropertyChanging();
					this._ScalingMax = value;
					this.SendPropertyChanged("ScalingMax");
					this.OnScalingMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScallingAutoFit", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> IsScallingAutoFit
		{
			get
			{
				return this._IsScallingAutoFit;
			}
			set
			{
				if ((this._IsScallingAutoFit != value))
				{
					this.OnIsScallingAutoFitChanging(value);
					this.SendPropertyChanging();
					this._IsScallingAutoFit = value;
					this.SendPropertyChanged("IsScallingAutoFit");
					this.OnIsScallingAutoFitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetricDefinition_TrendAnalysisReportConfig", Storage="_MetricDefinition", ThisKey="MetricDefinitionId", OtherKey="Id", IsForeignKey=true)]
		public MetricDefinition MetricDefinition
		{
			get
			{
				return this._MetricDefinition.Entity;
			}
			set
			{
				MetricDefinition previousValue = this._MetricDefinition.Entity;
				if (((previousValue != value) 
							|| (this._MetricDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MetricDefinition.Entity = null;
						previousValue.TrendAnalysisReportConfigs.Remove(this);
					}
					this._MetricDefinition.Entity = value;
					if ((value != null))
					{
						value.TrendAnalysisReportConfigs.Add(this);
						this._MetricDefinitionId = value.Id;
					}
					else
					{
						this._MetricDefinitionId = default(int);
					}
					this.SendPropertyChanged("MetricDefinition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportSetting_TrendAnalysisReportConfig", Storage="_ReportSetting", ThisKey="ReportSettingId", OtherKey="Id", IsForeignKey=true)]
		public ReportSetting ReportSetting
		{
			get
			{
				return this._ReportSetting.Entity;
			}
			set
			{
				ReportSetting previousValue = this._ReportSetting.Entity;
				if (((previousValue != value) 
							|| (this._ReportSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportSetting.Entity = null;
						previousValue.TrendAnalysisReportConfigs.Remove(this);
					}
					this._ReportSetting.Entity = value;
					if ((value != null))
					{
						value.TrendAnalysisReportConfigs.Add(this);
						this._ReportSettingId = value.Id;
					}
					else
					{
						this._ReportSettingId = default(long);
					}
					this.SendPropertyChanged("ReportSetting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetricDefinition_TrendAnalysisReportConfig1", Storage="_MetricDefinition1", ThisKey="TargetMetricDefinitionId", OtherKey="Id", IsForeignKey=true)]
		public MetricDefinition MetricDefinition1
		{
			get
			{
				return this._MetricDefinition1.Entity;
			}
			set
			{
				MetricDefinition previousValue = this._MetricDefinition1.Entity;
				if (((previousValue != value) 
							|| (this._MetricDefinition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MetricDefinition1.Entity = null;
						previousValue.TrendAnalysisReportConfigs1.Remove(this);
					}
					this._MetricDefinition1.Entity = value;
					if ((value != null))
					{
						value.TrendAnalysisReportConfigs1.Add(this);
						this._TargetMetricDefinitionId = value.Id;
					}
					else
					{
						this._TargetMetricDefinitionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MetricDefinition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._MetricDefinition = default(EntityRef<MetricDefinition>);
			this._ReportSetting = default(EntityRef<ReportSetting>);
			this._MetricDefinition1 = default(EntityRef<MetricDefinition>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitOfMeasure")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UnitOfMeasure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CompanyId;
		
		private string _Code;
		
		private string _Description;
		
		private EntitySet<AdditionalProduct> _AdditionalProducts;
		
		private EntityRef<Company> _Company;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public UnitOfMeasure()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasure_AdditionalProduct", Storage="_AdditionalProducts", ThisKey="Id", OtherKey="UnitOfMeasureId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<AdditionalProduct> AdditionalProducts
		{
			get
			{
				if ((this.serializing 
							&& (this._AdditionalProducts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AdditionalProducts;
			}
			set
			{
				this._AdditionalProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_UnitOfMeasure", Storage="_Company", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.UnitOfMeasures.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.UnitOfMeasures.Add(this);
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdditionalProducts(AdditionalProduct entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasure = this;
		}
		
		private void detach_AdditionalProducts(AdditionalProduct entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasure = null;
		}
		
		private void Initialize()
		{
			this._AdditionalProducts = new EntitySet<AdditionalProduct>(new Action<AdditionalProduct>(this.attach_AdditionalProducts), new Action<AdditionalProduct>(this.detach_AdditionalProducts));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uom")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Uom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Category;
		
		private double _BaseConversion;
		
		private bool _Active;
		
		private short _Priority;
		
		private System.Nullable<bool> _MixAddonProduct;
		
		private System.Nullable<bool> _MixAddonService;
		
		private System.Nullable<bool> _MixAddonFee;
		
		private System.Nullable<bool> _QuoteAddonProduct;
		
		private System.Nullable<bool> _QuoteAddonService;
		
		private System.Nullable<bool> _QuoteAddonFee;
		
		private System.Nullable<bool> _RawMaterial;
		
		private string _DispatchId;
		
		private System.Nullable<bool> _Synced;
		
		private short _Priority2;
		
		private EntitySet<Addon> _Addons;
		
		private EntitySet<Addon> _Addons1;
		
		private EntitySet<AddonPriceProjection> _AddonPriceProjections;
		
		private EntitySet<AggregateProduct> _AggregateProducts;
		
		private EntitySet<BlockProduct> _BlockProducts;
		
		private EntitySet<CustomMixConstituent> _CustomMixConstituents;
		
		private EntitySet<CustomMixConstituent> _CustomMixConstituents1;
		
		private EntitySet<RawMaterialCostProjection> _RawMaterialCostProjections;
		
		private EntitySet<StandardMixConstituent> _StandardMixConstituents;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnBaseConversionChanging(double value);
    partial void OnBaseConversionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnPriorityChanging(short value);
    partial void OnPriorityChanged();
    partial void OnMixAddonProductChanging(System.Nullable<bool> value);
    partial void OnMixAddonProductChanged();
    partial void OnMixAddonServiceChanging(System.Nullable<bool> value);
    partial void OnMixAddonServiceChanged();
    partial void OnMixAddonFeeChanging(System.Nullable<bool> value);
    partial void OnMixAddonFeeChanged();
    partial void OnQuoteAddonProductChanging(System.Nullable<bool> value);
    partial void OnQuoteAddonProductChanged();
    partial void OnQuoteAddonServiceChanging(System.Nullable<bool> value);
    partial void OnQuoteAddonServiceChanged();
    partial void OnQuoteAddonFeeChanging(System.Nullable<bool> value);
    partial void OnQuoteAddonFeeChanged();
    partial void OnRawMaterialChanging(System.Nullable<bool> value);
    partial void OnRawMaterialChanged();
    partial void OnDispatchIdChanging(string value);
    partial void OnDispatchIdChanged();
    partial void OnSyncedChanging(System.Nullable<bool> value);
    partial void OnSyncedChanged();
    partial void OnPriority2Changing(short value);
    partial void OnPriority2Changed();
    #endregion
		
		public Uom()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseConversion", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public double BaseConversion
		{
			get
			{
				return this._BaseConversion;
			}
			set
			{
				if ((this._BaseConversion != value))
				{
					this.OnBaseConversionChanging(value);
					this.SendPropertyChanging();
					this._BaseConversion = value;
					this.SendPropertyChanged("BaseConversion");
					this.OnBaseConversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="SmallInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public short Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixAddonProduct", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> MixAddonProduct
		{
			get
			{
				return this._MixAddonProduct;
			}
			set
			{
				if ((this._MixAddonProduct != value))
				{
					this.OnMixAddonProductChanging(value);
					this.SendPropertyChanging();
					this._MixAddonProduct = value;
					this.SendPropertyChanged("MixAddonProduct");
					this.OnMixAddonProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixAddonService", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> MixAddonService
		{
			get
			{
				return this._MixAddonService;
			}
			set
			{
				if ((this._MixAddonService != value))
				{
					this.OnMixAddonServiceChanging(value);
					this.SendPropertyChanging();
					this._MixAddonService = value;
					this.SendPropertyChanged("MixAddonService");
					this.OnMixAddonServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixAddonFee", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> MixAddonFee
		{
			get
			{
				return this._MixAddonFee;
			}
			set
			{
				if ((this._MixAddonFee != value))
				{
					this.OnMixAddonFeeChanging(value);
					this.SendPropertyChanging();
					this._MixAddonFee = value;
					this.SendPropertyChanged("MixAddonFee");
					this.OnMixAddonFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteAddonProduct", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> QuoteAddonProduct
		{
			get
			{
				return this._QuoteAddonProduct;
			}
			set
			{
				if ((this._QuoteAddonProduct != value))
				{
					this.OnQuoteAddonProductChanging(value);
					this.SendPropertyChanging();
					this._QuoteAddonProduct = value;
					this.SendPropertyChanged("QuoteAddonProduct");
					this.OnQuoteAddonProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteAddonService", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> QuoteAddonService
		{
			get
			{
				return this._QuoteAddonService;
			}
			set
			{
				if ((this._QuoteAddonService != value))
				{
					this.OnQuoteAddonServiceChanging(value);
					this.SendPropertyChanging();
					this._QuoteAddonService = value;
					this.SendPropertyChanged("QuoteAddonService");
					this.OnQuoteAddonServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteAddonFee", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> QuoteAddonFee
		{
			get
			{
				return this._QuoteAddonFee;
			}
			set
			{
				if ((this._QuoteAddonFee != value))
				{
					this.OnQuoteAddonFeeChanging(value);
					this.SendPropertyChanging();
					this._QuoteAddonFee = value;
					this.SendPropertyChanged("QuoteAddonFee");
					this.OnQuoteAddonFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawMaterial", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> RawMaterial
		{
			get
			{
				return this._RawMaterial;
			}
			set
			{
				if ((this._RawMaterial != value))
				{
					this.OnRawMaterialChanging(value);
					this.SendPropertyChanging();
					this._RawMaterial = value;
					this.SendPropertyChanged("RawMaterial");
					this.OnRawMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchId", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string DispatchId
		{
			get
			{
				return this._DispatchId;
			}
			set
			{
				if ((this._DispatchId != value))
				{
					this.OnDispatchIdChanging(value);
					this.SendPropertyChanging();
					this._DispatchId = value;
					this.SendPropertyChanged("DispatchId");
					this.OnDispatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synced", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> Synced
		{
			get
			{
				return this._Synced;
			}
			set
			{
				if ((this._Synced != value))
				{
					this.OnSyncedChanging(value);
					this.SendPropertyChanging();
					this._Synced = value;
					this.SendPropertyChanged("Synced");
					this.OnSyncedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority2", DbType="SmallInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public short Priority2
		{
			get
			{
				return this._Priority2;
			}
			set
			{
				if ((this._Priority2 != value))
				{
					this.OnPriority2Changing(value);
					this.SendPropertyChanging();
					this._Priority2 = value;
					this.SendPropertyChanged("Priority2");
					this.OnPriority2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_Addon", Storage="_Addons", ThisKey="Id", OtherKey="MixCostUomId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<Addon> Addons
		{
			get
			{
				if ((this.serializing 
							&& (this._Addons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Addons;
			}
			set
			{
				this._Addons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_Addon1", Storage="_Addons1", ThisKey="Id", OtherKey="QuoteUomId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<Addon> Addons1
		{
			get
			{
				if ((this.serializing 
							&& (this._Addons1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Addons1;
			}
			set
			{
				this._Addons1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_AddonPriceProjection", Storage="_AddonPriceProjections", ThisKey="Id", OtherKey="UomId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<AddonPriceProjection> AddonPriceProjections
		{
			get
			{
				if ((this.serializing 
							&& (this._AddonPriceProjections.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AddonPriceProjections;
			}
			set
			{
				this._AddonPriceProjections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_AggregateProduct", Storage="_AggregateProducts", ThisKey="Id", OtherKey="UomId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<AggregateProduct> AggregateProducts
		{
			get
			{
				if ((this.serializing 
							&& (this._AggregateProducts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AggregateProducts;
			}
			set
			{
				this._AggregateProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_BlockProduct", Storage="_BlockProducts", ThisKey="Id", OtherKey="UomId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<BlockProduct> BlockProducts
		{
			get
			{
				if ((this.serializing 
							&& (this._BlockProducts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BlockProducts;
			}
			set
			{
				this._BlockProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_CustomMixConstituent", Storage="_CustomMixConstituents", ThisKey="Id", OtherKey="CostUomId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<CustomMixConstituent> CustomMixConstituents
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomMixConstituents.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomMixConstituents;
			}
			set
			{
				this._CustomMixConstituents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_CustomMixConstituent1", Storage="_CustomMixConstituents1", ThisKey="Id", OtherKey="QuantityUomId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<CustomMixConstituent> CustomMixConstituents1
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomMixConstituents1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomMixConstituents1;
			}
			set
			{
				this._CustomMixConstituents1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_RawMaterialCostProjection", Storage="_RawMaterialCostProjections", ThisKey="Id", OtherKey="UomId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<RawMaterialCostProjection> RawMaterialCostProjections
		{
			get
			{
				if ((this.serializing 
							&& (this._RawMaterialCostProjections.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RawMaterialCostProjections;
			}
			set
			{
				this._RawMaterialCostProjections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uom_StandardMixConstituent", Storage="_StandardMixConstituents", ThisKey="Id", OtherKey="UomId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<StandardMixConstituent> StandardMixConstituents
		{
			get
			{
				if ((this.serializing 
							&& (this._StandardMixConstituents.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StandardMixConstituents;
			}
			set
			{
				this._StandardMixConstituents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addons(Addon entity)
		{
			this.SendPropertyChanging();
			entity.MixUom = this;
		}
		
		private void detach_Addons(Addon entity)
		{
			this.SendPropertyChanging();
			entity.MixUom = null;
		}
		
		private void attach_Addons1(Addon entity)
		{
			this.SendPropertyChanging();
			entity.QuoteUom = this;
		}
		
		private void detach_Addons1(Addon entity)
		{
			this.SendPropertyChanging();
			entity.QuoteUom = null;
		}
		
		private void attach_AddonPriceProjections(AddonPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.Uom = this;
		}
		
		private void detach_AddonPriceProjections(AddonPriceProjection entity)
		{
			this.SendPropertyChanging();
			entity.Uom = null;
		}
		
		private void attach_AggregateProducts(AggregateProduct entity)
		{
			this.SendPropertyChanging();
			entity.Uom = this;
		}
		
		private void detach_AggregateProducts(AggregateProduct entity)
		{
			this.SendPropertyChanging();
			entity.Uom = null;
		}
		
		private void attach_BlockProducts(BlockProduct entity)
		{
			this.SendPropertyChanging();
			entity.Uom = this;
		}
		
		private void detach_BlockProducts(BlockProduct entity)
		{
			this.SendPropertyChanging();
			entity.Uom = null;
		}
		
		private void attach_CustomMixConstituents(CustomMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.CostUom = this;
		}
		
		private void detach_CustomMixConstituents(CustomMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.CostUom = null;
		}
		
		private void attach_CustomMixConstituents1(CustomMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.QuantityUom = this;
		}
		
		private void detach_CustomMixConstituents1(CustomMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.QuantityUom = null;
		}
		
		private void attach_RawMaterialCostProjections(RawMaterialCostProjection entity)
		{
			this.SendPropertyChanging();
			entity.Uom = this;
		}
		
		private void detach_RawMaterialCostProjections(RawMaterialCostProjection entity)
		{
			this.SendPropertyChanging();
			entity.Uom = null;
		}
		
		private void attach_StandardMixConstituents(StandardMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.Uom = this;
		}
		
		private void detach_StandardMixConstituents(StandardMixConstituent entity)
		{
			this.SendPropertyChanging();
			entity.Uom = null;
		}
		
		private void Initialize()
		{
			this._Addons = new EntitySet<Addon>(new Action<Addon>(this.attach_Addons), new Action<Addon>(this.detach_Addons));
			this._Addons1 = new EntitySet<Addon>(new Action<Addon>(this.attach_Addons1), new Action<Addon>(this.detach_Addons1));
			this._AddonPriceProjections = new EntitySet<AddonPriceProjection>(new Action<AddonPriceProjection>(this.attach_AddonPriceProjections), new Action<AddonPriceProjection>(this.detach_AddonPriceProjections));
			this._AggregateProducts = new EntitySet<AggregateProduct>(new Action<AggregateProduct>(this.attach_AggregateProducts), new Action<AggregateProduct>(this.detach_AggregateProducts));
			this._BlockProducts = new EntitySet<BlockProduct>(new Action<BlockProduct>(this.attach_BlockProducts), new Action<BlockProduct>(this.detach_BlockProducts));
			this._CustomMixConstituents = new EntitySet<CustomMixConstituent>(new Action<CustomMixConstituent>(this.attach_CustomMixConstituents), new Action<CustomMixConstituent>(this.detach_CustomMixConstituents));
			this._CustomMixConstituents1 = new EntitySet<CustomMixConstituent>(new Action<CustomMixConstituent>(this.attach_CustomMixConstituents1), new Action<CustomMixConstituent>(this.detach_CustomMixConstituents1));
			this._RawMaterialCostProjections = new EntitySet<RawMaterialCostProjection>(new Action<RawMaterialCostProjection>(this.attach_RawMaterialCostProjections), new Action<RawMaterialCostProjection>(this.detach_RawMaterialCostProjections));
			this._StandardMixConstituents = new EntitySet<StandardMixConstituent>(new Action<StandardMixConstituent>(this.attach_StandardMixConstituents), new Action<StandardMixConstituent>(this.detach_StandardMixConstituents));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserDashboardSetting")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserDashboardSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _DashboardId;
		
		private System.Guid _UserId;
		
		private System.Nullable<bool> _IsDefault;
		
		private System.Nullable<bool> _IsFavourite;
		
		private int _MaxColumn;
		
		private EntityRef<DashboardSetting> _DashboardSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDashboardIdChanging(long value);
    partial void OnDashboardIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnIsDefaultChanging(System.Nullable<bool> value);
    partial void OnIsDefaultChanged();
    partial void OnIsFavouriteChanging(System.Nullable<bool> value);
    partial void OnIsFavouriteChanged();
    partial void OnMaxColumnChanging(int value);
    partial void OnMaxColumnChanged();
    #endregion
		
		public UserDashboardSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long DashboardId
		{
			get
			{
				return this._DashboardId;
			}
			set
			{
				if ((this._DashboardId != value))
				{
					if (this._DashboardSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDashboardIdChanging(value);
					this.SendPropertyChanging();
					this._DashboardId = value;
					this.SendPropertyChanged("DashboardId");
					this.OnDashboardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFavourite", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> IsFavourite
		{
			get
			{
				return this._IsFavourite;
			}
			set
			{
				if ((this._IsFavourite != value))
				{
					this.OnIsFavouriteChanging(value);
					this.SendPropertyChanging();
					this._IsFavourite = value;
					this.SendPropertyChanged("IsFavourite");
					this.OnIsFavouriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxColumn", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int MaxColumn
		{
			get
			{
				return this._MaxColumn;
			}
			set
			{
				if ((this._MaxColumn != value))
				{
					this.OnMaxColumnChanging(value);
					this.SendPropertyChanging();
					this._MaxColumn = value;
					this.SendPropertyChanged("MaxColumn");
					this.OnMaxColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DashboardSetting_UserDashboardSetting", Storage="_DashboardSetting", ThisKey="DashboardId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DashboardSetting DashboardSetting
		{
			get
			{
				return this._DashboardSetting.Entity;
			}
			set
			{
				DashboardSetting previousValue = this._DashboardSetting.Entity;
				if (((previousValue != value) 
							|| (this._DashboardSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DashboardSetting.Entity = null;
						previousValue.UserDashboardSettings.Remove(this);
					}
					this._DashboardSetting.Entity = value;
					if ((value != null))
					{
						value.UserDashboardSettings.Add(this);
						this._DashboardId = value.Id;
					}
					else
					{
						this._DashboardId = default(long);
					}
					this.SendPropertyChanged("DashboardSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DashboardSetting = default(EntityRef<DashboardSetting>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPasswordHistory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserPasswordHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _UserName;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public UserPasswordHistory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPasswordVerification")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserPasswordVerification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _PasswordVerificationToken;
		
		private System.Nullable<System.DateTime> _PasswordVerificationTokenExpirationDate;
		
		private System.Nullable<bool> _IsUsed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordVerificationTokenChanging(string value);
    partial void OnPasswordVerificationTokenChanged();
    partial void OnPasswordVerificationTokenExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordVerificationTokenExpirationDateChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    #endregion
		
		public UserPasswordVerification()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationToken", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PasswordVerificationToken
		{
			get
			{
				return this._PasswordVerificationToken;
			}
			set
			{
				if ((this._PasswordVerificationToken != value))
				{
					this.OnPasswordVerificationTokenChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationToken = value;
					this.SendPropertyChanged("PasswordVerificationToken");
					this.OnPasswordVerificationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationTokenExpirationDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> PasswordVerificationTokenExpirationDate
		{
			get
			{
				return this._PasswordVerificationTokenExpirationDate;
			}
			set
			{
				if ((this._PasswordVerificationTokenExpirationDate != value))
				{
					this.OnPasswordVerificationTokenExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationTokenExpirationDate = value;
					this.SendPropertyChanged("PasswordVerificationTokenExpirationDate");
					this.OnPasswordVerificationTokenExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserReportSetting")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserReportSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ReportId;
		
		private System.Guid _UserId;
		
		private string _Type;
		
		private System.Nullable<bool> _IsDefault;
		
		private System.Nullable<bool> _IsFavourite;
		
		private EntityRef<ReportSetting> _ReportSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(long value);
    partial void OnReportIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnIsDefaultChanging(System.Nullable<bool> value);
    partial void OnIsDefaultChanged();
    partial void OnIsFavouriteChanging(System.Nullable<bool> value);
    partial void OnIsFavouriteChanged();
    #endregion
		
		public UserReportSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					if (this._ReportSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFavourite", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsFavourite
		{
			get
			{
				return this._IsFavourite;
			}
			set
			{
				if ((this._IsFavourite != value))
				{
					this.OnIsFavouriteChanging(value);
					this.SendPropertyChanging();
					this._IsFavourite = value;
					this.SendPropertyChanged("IsFavourite");
					this.OnIsFavouriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportSetting_UserReportSetting", Storage="_ReportSetting", ThisKey="ReportId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ReportSetting ReportSetting
		{
			get
			{
				return this._ReportSetting.Entity;
			}
			set
			{
				ReportSetting previousValue = this._ReportSetting.Entity;
				if (((previousValue != value) 
							|| (this._ReportSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportSetting.Entity = null;
						previousValue.UserReportSettings.Remove(this);
					}
					this._ReportSetting.Entity = value;
					if ((value != null))
					{
						value.UserReportSettings.Add(this);
						this._ReportId = value.Id;
					}
					else
					{
						this._ReportId = default(long);
					}
					this.SendPropertyChanged("ReportSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ReportSetting = default(EntityRef<ReportSetting>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeekDayDistribution")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WeekDayDistribution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private double _Sunday;
		
		private double _Monday;
		
		private double _Tuesday;
		
		private double _Wednesday;
		
		private double _Thursday;
		
		private double _Friday;
		
		private double _Saturday;
		
		private int _DistrictId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSundayChanging(double value);
    partial void OnSundayChanged();
    partial void OnMondayChanging(double value);
    partial void OnMondayChanged();
    partial void OnTuesdayChanging(double value);
    partial void OnTuesdayChanged();
    partial void OnWednesdayChanging(double value);
    partial void OnWednesdayChanged();
    partial void OnThursdayChanging(double value);
    partial void OnThursdayChanged();
    partial void OnFridayChanging(double value);
    partial void OnFridayChanged();
    partial void OnSaturdayChanging(double value);
    partial void OnSaturdayChanged();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    #endregion
		
		public WeekDayDistribution()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sunday", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public double Sunday
		{
			get
			{
				return this._Sunday;
			}
			set
			{
				if ((this._Sunday != value))
				{
					this.OnSundayChanging(value);
					this.SendPropertyChanging();
					this._Sunday = value;
					this.SendPropertyChanged("Sunday");
					this.OnSundayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monday", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public double Monday
		{
			get
			{
				return this._Monday;
			}
			set
			{
				if ((this._Monday != value))
				{
					this.OnMondayChanging(value);
					this.SendPropertyChanging();
					this._Monday = value;
					this.SendPropertyChanged("Monday");
					this.OnMondayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuesday", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public double Tuesday
		{
			get
			{
				return this._Tuesday;
			}
			set
			{
				if ((this._Tuesday != value))
				{
					this.OnTuesdayChanging(value);
					this.SendPropertyChanging();
					this._Tuesday = value;
					this.SendPropertyChanged("Tuesday");
					this.OnTuesdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wednesday", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public double Wednesday
		{
			get
			{
				return this._Wednesday;
			}
			set
			{
				if ((this._Wednesday != value))
				{
					this.OnWednesdayChanging(value);
					this.SendPropertyChanging();
					this._Wednesday = value;
					this.SendPropertyChanged("Wednesday");
					this.OnWednesdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thursday", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public double Thursday
		{
			get
			{
				return this._Thursday;
			}
			set
			{
				if ((this._Thursday != value))
				{
					this.OnThursdayChanging(value);
					this.SendPropertyChanging();
					this._Thursday = value;
					this.SendPropertyChanged("Thursday");
					this.OnThursdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Friday", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public double Friday
		{
			get
			{
				return this._Friday;
			}
			set
			{
				if ((this._Friday != value))
				{
					this.OnFridayChanging(value);
					this.SendPropertyChanging();
					this._Friday = value;
					this.SendPropertyChanged("Friday");
					this.OnFridayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Saturday", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public double Saturday
		{
			get
			{
				return this._Saturday;
			}
			set
			{
				if ((this._Saturday != value))
				{
					this.OnSaturdayChanging(value);
					this.SendPropertyChanging();
					this._Saturday = value;
					this.SendPropertyChanged("Saturday");
					this.OnSaturdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WidgetSettings")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WidgetSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _WidgetId;
		
		private long _DashboardId;
		
		private string _Title;
		
		private string _MetricType;
		
		private System.Nullable<int> _DecimalPlaces;
		
		private string _BackgroundColor;
		
		private string _PrimaryMetric;
		
		private string _PrimaryMetricPeriod;
		
		private string _ComparisonMetric;
		
		private string _ComparisonMetricPeriod;
		
		private System.Nullable<bool> _ShowActionIcon;
		
		private System.Nullable<decimal> _SuccessLimitPercent;
		
		private System.Nullable<decimal> _AlertLimitPercent;
		
		private System.Nullable<bool> _HasBarGraph;
		
		private System.Nullable<int> _BarGraphDaysPerBar;
		
		private System.Nullable<bool> _HasFrequencyDistribution;
		
		private System.Nullable<bool> _HasLineGraph;
		
		private System.Nullable<int> _LineGraphRangeInDays;
		
		private System.Nullable<bool> _HasPOPSummary;
		
		private System.Nullable<bool> _HasStaticMessage;
		
		private string _StaticMessage;
		
		private System.Nullable<long> _GoalAnalysisReportId;
		
		private System.Nullable<long> _TrendAnalysisReportId;
		
		private System.Nullable<long> _BenchmarkReportId;
		
		private System.Nullable<long> _DrillInReportId;
		
		private System.Nullable<int> _PrimaryMetricDefinitionId;
		
		private System.Nullable<int> _ComparisonMetricDefinitionId;
		
		private System.Nullable<int> _Position;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntityRef<DashboardSetting> _DashboardSetting;
		
		private EntityRef<MetricDefinition> _MetricDefinition;
		
		private EntityRef<MetricDefinition> _MetricDefinition1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWidgetIdChanging(long value);
    partial void OnWidgetIdChanged();
    partial void OnDashboardIdChanging(long value);
    partial void OnDashboardIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMetricTypeChanging(string value);
    partial void OnMetricTypeChanged();
    partial void OnDecimalPlacesChanging(System.Nullable<int> value);
    partial void OnDecimalPlacesChanged();
    partial void OnBackgroundColorChanging(string value);
    partial void OnBackgroundColorChanged();
    partial void OnPrimaryMetricChanging(string value);
    partial void OnPrimaryMetricChanged();
    partial void OnPrimaryMetricPeriodChanging(string value);
    partial void OnPrimaryMetricPeriodChanged();
    partial void OnComparisonMetricChanging(string value);
    partial void OnComparisonMetricChanged();
    partial void OnComparisonMetricPeriodChanging(string value);
    partial void OnComparisonMetricPeriodChanged();
    partial void OnShowActionIconChanging(System.Nullable<bool> value);
    partial void OnShowActionIconChanged();
    partial void OnSuccessLimitPercentChanging(System.Nullable<decimal> value);
    partial void OnSuccessLimitPercentChanged();
    partial void OnAlertLimitPercentChanging(System.Nullable<decimal> value);
    partial void OnAlertLimitPercentChanged();
    partial void OnHasBarGraphChanging(System.Nullable<bool> value);
    partial void OnHasBarGraphChanged();
    partial void OnBarGraphDaysPerBarChanging(System.Nullable<int> value);
    partial void OnBarGraphDaysPerBarChanged();
    partial void OnHasFrequencyDistributionChanging(System.Nullable<bool> value);
    partial void OnHasFrequencyDistributionChanged();
    partial void OnHasLineGraphChanging(System.Nullable<bool> value);
    partial void OnHasLineGraphChanged();
    partial void OnLineGraphRangeInDaysChanging(System.Nullable<int> value);
    partial void OnLineGraphRangeInDaysChanged();
    partial void OnHasPOPSummaryChanging(System.Nullable<bool> value);
    partial void OnHasPOPSummaryChanged();
    partial void OnHasStaticMessageChanging(System.Nullable<bool> value);
    partial void OnHasStaticMessageChanged();
    partial void OnStaticMessageChanging(string value);
    partial void OnStaticMessageChanged();
    partial void OnGoalAnalysisReportIdChanging(System.Nullable<long> value);
    partial void OnGoalAnalysisReportIdChanged();
    partial void OnTrendAnalysisReportIdChanging(System.Nullable<long> value);
    partial void OnTrendAnalysisReportIdChanged();
    partial void OnBenchmarkReportIdChanging(System.Nullable<long> value);
    partial void OnBenchmarkReportIdChanged();
    partial void OnDrillInReportIdChanging(System.Nullable<long> value);
    partial void OnDrillInReportIdChanged();
    partial void OnPrimaryMetricDefinitionIdChanging(System.Nullable<int> value);
    partial void OnPrimaryMetricDefinitionIdChanged();
    partial void OnComparisonMetricDefinitionIdChanging(System.Nullable<int> value);
    partial void OnComparisonMetricDefinitionIdChanged();
    partial void OnPositionChanging(System.Nullable<int> value);
    partial void OnPositionChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public WidgetSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidgetId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long WidgetId
		{
			get
			{
				return this._WidgetId;
			}
			set
			{
				if ((this._WidgetId != value))
				{
					this.OnWidgetIdChanging(value);
					this.SendPropertyChanging();
					this._WidgetId = value;
					this.SendPropertyChanged("WidgetId");
					this.OnWidgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long DashboardId
		{
			get
			{
				return this._DashboardId;
			}
			set
			{
				if ((this._DashboardId != value))
				{
					if (this._DashboardSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDashboardIdChanging(value);
					this.SendPropertyChanging();
					this._DashboardId = value;
					this.SendPropertyChanged("DashboardId");
					this.OnDashboardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetricType", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string MetricType
		{
			get
			{
				return this._MetricType;
			}
			set
			{
				if ((this._MetricType != value))
				{
					this.OnMetricTypeChanging(value);
					this.SendPropertyChanging();
					this._MetricType = value;
					this.SendPropertyChanged("MetricType");
					this.OnMetricTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalPlaces", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> DecimalPlaces
		{
			get
			{
				return this._DecimalPlaces;
			}
			set
			{
				if ((this._DecimalPlaces != value))
				{
					this.OnDecimalPlacesChanging(value);
					this.SendPropertyChanging();
					this._DecimalPlaces = value;
					this.SendPropertyChanged("DecimalPlaces");
					this.OnDecimalPlacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundColor", DbType="NVarChar(8)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string BackgroundColor
		{
			get
			{
				return this._BackgroundColor;
			}
			set
			{
				if ((this._BackgroundColor != value))
				{
					this.OnBackgroundColorChanging(value);
					this.SendPropertyChanging();
					this._BackgroundColor = value;
					this.SendPropertyChanged("BackgroundColor");
					this.OnBackgroundColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryMetric", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string PrimaryMetric
		{
			get
			{
				return this._PrimaryMetric;
			}
			set
			{
				if ((this._PrimaryMetric != value))
				{
					this.OnPrimaryMetricChanging(value);
					this.SendPropertyChanging();
					this._PrimaryMetric = value;
					this.SendPropertyChanged("PrimaryMetric");
					this.OnPrimaryMetricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryMetricPeriod", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string PrimaryMetricPeriod
		{
			get
			{
				return this._PrimaryMetricPeriod;
			}
			set
			{
				if ((this._PrimaryMetricPeriod != value))
				{
					this.OnPrimaryMetricPeriodChanging(value);
					this.SendPropertyChanging();
					this._PrimaryMetricPeriod = value;
					this.SendPropertyChanged("PrimaryMetricPeriod");
					this.OnPrimaryMetricPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComparisonMetric", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ComparisonMetric
		{
			get
			{
				return this._ComparisonMetric;
			}
			set
			{
				if ((this._ComparisonMetric != value))
				{
					this.OnComparisonMetricChanging(value);
					this.SendPropertyChanging();
					this._ComparisonMetric = value;
					this.SendPropertyChanged("ComparisonMetric");
					this.OnComparisonMetricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComparisonMetricPeriod", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string ComparisonMetricPeriod
		{
			get
			{
				return this._ComparisonMetricPeriod;
			}
			set
			{
				if ((this._ComparisonMetricPeriod != value))
				{
					this.OnComparisonMetricPeriodChanging(value);
					this.SendPropertyChanging();
					this._ComparisonMetricPeriod = value;
					this.SendPropertyChanged("ComparisonMetricPeriod");
					this.OnComparisonMetricPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowActionIcon", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> ShowActionIcon
		{
			get
			{
				return this._ShowActionIcon;
			}
			set
			{
				if ((this._ShowActionIcon != value))
				{
					this.OnShowActionIconChanging(value);
					this.SendPropertyChanging();
					this._ShowActionIcon = value;
					this.SendPropertyChanged("ShowActionIcon");
					this.OnShowActionIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuccessLimitPercent", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<decimal> SuccessLimitPercent
		{
			get
			{
				return this._SuccessLimitPercent;
			}
			set
			{
				if ((this._SuccessLimitPercent != value))
				{
					this.OnSuccessLimitPercentChanging(value);
					this.SendPropertyChanging();
					this._SuccessLimitPercent = value;
					this.SendPropertyChanged("SuccessLimitPercent");
					this.OnSuccessLimitPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertLimitPercent", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<decimal> AlertLimitPercent
		{
			get
			{
				return this._AlertLimitPercent;
			}
			set
			{
				if ((this._AlertLimitPercent != value))
				{
					this.OnAlertLimitPercentChanging(value);
					this.SendPropertyChanging();
					this._AlertLimitPercent = value;
					this.SendPropertyChanged("AlertLimitPercent");
					this.OnAlertLimitPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBarGraph", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<bool> HasBarGraph
		{
			get
			{
				return this._HasBarGraph;
			}
			set
			{
				if ((this._HasBarGraph != value))
				{
					this.OnHasBarGraphChanging(value);
					this.SendPropertyChanging();
					this._HasBarGraph = value;
					this.SendPropertyChanged("HasBarGraph");
					this.OnHasBarGraphChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarGraphDaysPerBar", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<int> BarGraphDaysPerBar
		{
			get
			{
				return this._BarGraphDaysPerBar;
			}
			set
			{
				if ((this._BarGraphDaysPerBar != value))
				{
					this.OnBarGraphDaysPerBarChanging(value);
					this.SendPropertyChanging();
					this._BarGraphDaysPerBar = value;
					this.SendPropertyChanged("BarGraphDaysPerBar");
					this.OnBarGraphDaysPerBarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasFrequencyDistribution", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<bool> HasFrequencyDistribution
		{
			get
			{
				return this._HasFrequencyDistribution;
			}
			set
			{
				if ((this._HasFrequencyDistribution != value))
				{
					this.OnHasFrequencyDistributionChanging(value);
					this.SendPropertyChanging();
					this._HasFrequencyDistribution = value;
					this.SendPropertyChanged("HasFrequencyDistribution");
					this.OnHasFrequencyDistributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLineGraph", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<bool> HasLineGraph
		{
			get
			{
				return this._HasLineGraph;
			}
			set
			{
				if ((this._HasLineGraph != value))
				{
					this.OnHasLineGraphChanging(value);
					this.SendPropertyChanging();
					this._HasLineGraph = value;
					this.SendPropertyChanged("HasLineGraph");
					this.OnHasLineGraphChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineGraphRangeInDays", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> LineGraphRangeInDays
		{
			get
			{
				return this._LineGraphRangeInDays;
			}
			set
			{
				if ((this._LineGraphRangeInDays != value))
				{
					this.OnLineGraphRangeInDaysChanging(value);
					this.SendPropertyChanging();
					this._LineGraphRangeInDays = value;
					this.SendPropertyChanged("LineGraphRangeInDays");
					this.OnLineGraphRangeInDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPOPSummary", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<bool> HasPOPSummary
		{
			get
			{
				return this._HasPOPSummary;
			}
			set
			{
				if ((this._HasPOPSummary != value))
				{
					this.OnHasPOPSummaryChanging(value);
					this.SendPropertyChanging();
					this._HasPOPSummary = value;
					this.SendPropertyChanged("HasPOPSummary");
					this.OnHasPOPSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasStaticMessage", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<bool> HasStaticMessage
		{
			get
			{
				return this._HasStaticMessage;
			}
			set
			{
				if ((this._HasStaticMessage != value))
				{
					this.OnHasStaticMessageChanging(value);
					this.SendPropertyChanging();
					this._HasStaticMessage = value;
					this.SendPropertyChanged("HasStaticMessage");
					this.OnHasStaticMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticMessage", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string StaticMessage
		{
			get
			{
				return this._StaticMessage;
			}
			set
			{
				if ((this._StaticMessage != value))
				{
					this.OnStaticMessageChanging(value);
					this.SendPropertyChanging();
					this._StaticMessage = value;
					this.SendPropertyChanged("StaticMessage");
					this.OnStaticMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalAnalysisReportId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<long> GoalAnalysisReportId
		{
			get
			{
				return this._GoalAnalysisReportId;
			}
			set
			{
				if ((this._GoalAnalysisReportId != value))
				{
					this.OnGoalAnalysisReportIdChanging(value);
					this.SendPropertyChanging();
					this._GoalAnalysisReportId = value;
					this.SendPropertyChanged("GoalAnalysisReportId");
					this.OnGoalAnalysisReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrendAnalysisReportId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<long> TrendAnalysisReportId
		{
			get
			{
				return this._TrendAnalysisReportId;
			}
			set
			{
				if ((this._TrendAnalysisReportId != value))
				{
					this.OnTrendAnalysisReportIdChanging(value);
					this.SendPropertyChanging();
					this._TrendAnalysisReportId = value;
					this.SendPropertyChanged("TrendAnalysisReportId");
					this.OnTrendAnalysisReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenchmarkReportId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public System.Nullable<long> BenchmarkReportId
		{
			get
			{
				return this._BenchmarkReportId;
			}
			set
			{
				if ((this._BenchmarkReportId != value))
				{
					this.OnBenchmarkReportIdChanging(value);
					this.SendPropertyChanging();
					this._BenchmarkReportId = value;
					this.SendPropertyChanged("BenchmarkReportId");
					this.OnBenchmarkReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrillInReportId", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<long> DrillInReportId
		{
			get
			{
				return this._DrillInReportId;
			}
			set
			{
				if ((this._DrillInReportId != value))
				{
					this.OnDrillInReportIdChanging(value);
					this.SendPropertyChanging();
					this._DrillInReportId = value;
					this.SendPropertyChanged("DrillInReportId");
					this.OnDrillInReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryMetricDefinitionId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<int> PrimaryMetricDefinitionId
		{
			get
			{
				return this._PrimaryMetricDefinitionId;
			}
			set
			{
				if ((this._PrimaryMetricDefinitionId != value))
				{
					if (this._MetricDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimaryMetricDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._PrimaryMetricDefinitionId = value;
					this.SendPropertyChanged("PrimaryMetricDefinitionId");
					this.OnPrimaryMetricDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComparisonMetricDefinitionId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<int> ComparisonMetricDefinitionId
		{
			get
			{
				return this._ComparisonMetricDefinitionId;
			}
			set
			{
				if ((this._ComparisonMetricDefinitionId != value))
				{
					if (this._MetricDefinition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComparisonMetricDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._ComparisonMetricDefinitionId = value;
					this.SendPropertyChanged("ComparisonMetricDefinitionId");
					this.OnComparisonMetricDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<int> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DashboardSetting_WidgetSetting", Storage="_DashboardSetting", ThisKey="DashboardId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DashboardSetting DashboardSetting
		{
			get
			{
				return this._DashboardSetting.Entity;
			}
			set
			{
				DashboardSetting previousValue = this._DashboardSetting.Entity;
				if (((previousValue != value) 
							|| (this._DashboardSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DashboardSetting.Entity = null;
						previousValue.WidgetSettings.Remove(this);
					}
					this._DashboardSetting.Entity = value;
					if ((value != null))
					{
						value.WidgetSettings.Add(this);
						this._DashboardId = value.Id;
					}
					else
					{
						this._DashboardId = default(long);
					}
					this.SendPropertyChanged("DashboardSetting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetricDefinition_WidgetSetting", Storage="_MetricDefinition", ThisKey="PrimaryMetricDefinitionId", OtherKey="Id", IsForeignKey=true)]
		public MetricDefinition MetricDefinition
		{
			get
			{
				return this._MetricDefinition.Entity;
			}
			set
			{
				MetricDefinition previousValue = this._MetricDefinition.Entity;
				if (((previousValue != value) 
							|| (this._MetricDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MetricDefinition.Entity = null;
						previousValue.WidgetSettings.Remove(this);
					}
					this._MetricDefinition.Entity = value;
					if ((value != null))
					{
						value.WidgetSettings.Add(this);
						this._PrimaryMetricDefinitionId = value.Id;
					}
					else
					{
						this._PrimaryMetricDefinitionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MetricDefinition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MetricDefinition_WidgetSetting1", Storage="_MetricDefinition1", ThisKey="ComparisonMetricDefinitionId", OtherKey="Id", IsForeignKey=true)]
		public MetricDefinition MetricDefinition1
		{
			get
			{
				return this._MetricDefinition1.Entity;
			}
			set
			{
				MetricDefinition previousValue = this._MetricDefinition1.Entity;
				if (((previousValue != value) 
							|| (this._MetricDefinition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MetricDefinition1.Entity = null;
						previousValue.WidgetSettings1.Remove(this);
					}
					this._MetricDefinition1.Entity = value;
					if ((value != null))
					{
						value.WidgetSettings1.Add(this);
						this._ComparisonMetricDefinitionId = value.Id;
					}
					else
					{
						this._ComparisonMetricDefinitionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MetricDefinition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DashboardSetting = default(EntityRef<DashboardSetting>);
			this._MetricDefinition = default(EntityRef<MetricDefinition>);
			this._MetricDefinition1 = default(EntityRef<MetricDefinition>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkDayDistribution")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WorkDayDistribution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _WorkDay;
		
		private double _Distribution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnWorkDayChanging(System.DateTime value);
    partial void OnWorkDayChanged();
    partial void OnDistributionChanging(double value);
    partial void OnDistributionChanged();
    #endregion
		
		public WorkDayDistribution()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkDay", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime WorkDay
		{
			get
			{
				return this._WorkDay;
			}
			set
			{
				if ((this._WorkDay != value))
				{
					this.OnWorkDayChanging(value);
					this.SendPropertyChanging();
					this._WorkDay = value;
					this.SendPropertyChanged("WorkDay");
					this.OnWorkDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distribution", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public double Distribution
		{
			get
			{
				return this._Distribution;
			}
			set
			{
				if ((this._Distribution != value))
				{
					this.OnDistributionChanging(value);
					this.SendPropertyChanging();
					this._Distribution = value;
					this.SendPropertyChanged("Distribution");
					this.OnDistributionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChatMessage")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ChatMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ChatConversationId;
		
		private System.Nullable<int> _CompanyUserId;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntityRef<ChatConversation> _ChatConversation;
		
		private EntityRef<CompanyUser> _CompanyUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnChatConversationIdChanging(System.Nullable<System.Guid> value);
    partial void OnChatConversationIdChanged();
    partial void OnCompanyUserIdChanging(System.Nullable<int> value);
    partial void OnCompanyUserIdChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public ChatMessage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatConversationId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> ChatConversationId
		{
			get
			{
				return this._ChatConversationId;
			}
			set
			{
				if ((this._ChatConversationId != value))
				{
					if (this._ChatConversation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChatConversationIdChanging(value);
					this.SendPropertyChanging();
					this._ChatConversationId = value;
					this.SendPropertyChanged("ChatConversationId");
					this.OnChatConversationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyUserId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> CompanyUserId
		{
			get
			{
				return this._CompanyUserId;
			}
			set
			{
				if ((this._CompanyUserId != value))
				{
					if (this._CompanyUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyUserIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyUserId = value;
					this.SendPropertyChanged("CompanyUserId");
					this.OnCompanyUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatConversation_ChatMessage", Storage="_ChatConversation", ThisKey="ChatConversationId", OtherKey="Id", IsForeignKey=true)]
		public ChatConversation ChatConversation
		{
			get
			{
				return this._ChatConversation.Entity;
			}
			set
			{
				ChatConversation previousValue = this._ChatConversation.Entity;
				if (((previousValue != value) 
							|| (this._ChatConversation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChatConversation.Entity = null;
						previousValue.ChatMessages.Remove(this);
					}
					this._ChatConversation.Entity = value;
					if ((value != null))
					{
						value.ChatMessages.Add(this);
						this._ChatConversationId = value.Id;
					}
					else
					{
						this._ChatConversationId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ChatConversation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyUser_ChatMessage", Storage="_CompanyUser", ThisKey="CompanyUserId", OtherKey="CompanyUserId", IsForeignKey=true)]
		public CompanyUser CompanyUser
		{
			get
			{
				return this._CompanyUser.Entity;
			}
			set
			{
				CompanyUser previousValue = this._CompanyUser.Entity;
				if (((previousValue != value) 
							|| (this._CompanyUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompanyUser.Entity = null;
						previousValue.ChatMessages.Remove(this);
					}
					this._CompanyUser.Entity = value;
					if ((value != null))
					{
						value.ChatMessages.Add(this);
						this._CompanyUserId = value.CompanyUserId;
					}
					else
					{
						this._CompanyUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CompanyUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ChatConversation = default(EntityRef<ChatConversation>);
			this._CompanyUser = default(EntityRef<CompanyUser>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChatSubscription")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ChatSubscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Guid _ChatConversationId;
		
		private System.Guid _UserId;
		
		private System.Nullable<bool> _CanBeRemoved;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntityRef<ChatConversation> _ChatConversation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnChatConversationIdChanging(System.Guid value);
    partial void OnChatConversationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnCanBeRemovedChanging(System.Nullable<bool> value);
    partial void OnCanBeRemovedChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public ChatSubscription()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatConversationId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid ChatConversationId
		{
			get
			{
				return this._ChatConversationId;
			}
			set
			{
				if ((this._ChatConversationId != value))
				{
					if (this._ChatConversation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChatConversationIdChanging(value);
					this.SendPropertyChanging();
					this._ChatConversationId = value;
					this.SendPropertyChanged("ChatConversationId");
					this.OnChatConversationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_Membership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBeRemoved", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> CanBeRemoved
		{
			get
			{
				return this._CanBeRemoved;
			}
			set
			{
				if ((this._CanBeRemoved != value))
				{
					this.OnCanBeRemovedChanging(value);
					this.SendPropertyChanging();
					this._CanBeRemoved = value;
					this.SendPropertyChanged("CanBeRemoved");
					this.OnCanBeRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_ChatSubscription", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.ChatSubscriptions.Remove(this);
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.ChatSubscriptions.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatConversation_ChatSubscription", Storage="_ChatConversation", ThisKey="ChatConversationId", OtherKey="Id", IsForeignKey=true)]
		public ChatConversation ChatConversation
		{
			get
			{
				return this._ChatConversation.Entity;
			}
			set
			{
				ChatConversation previousValue = this._ChatConversation.Entity;
				if (((previousValue != value) 
							|| (this._ChatConversation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChatConversation.Entity = null;
						previousValue.ChatSubscriptions.Remove(this);
					}
					this._ChatConversation.Entity = value;
					if ((value != null))
					{
						value.ChatSubscriptions.Add(this);
						this._ChatConversationId = value.Id;
					}
					else
					{
						this._ChatConversationId = default(System.Guid);
					}
					this.SendPropertyChanged("ChatConversation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._ChatConversation = default(EntityRef<ChatConversation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChatNotification")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ChatNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _UserId;
		
		private System.Guid _ChatConversationId;
		
		private string _Message;
		
		private System.Nullable<System.Guid> _MessageByUserId;
		
		private System.Nullable<bool> _IsSeen;
		
		private System.Nullable<System.DateTime> _SeenAt;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntityRef<ChatConversation> _ChatConversation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnChatConversationIdChanging(System.Guid value);
    partial void OnChatConversationIdChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnMessageByUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnMessageByUserIdChanged();
    partial void OnIsSeenChanging(System.Nullable<bool> value);
    partial void OnIsSeenChanged();
    partial void OnSeenAtChanging(System.Nullable<System.DateTime> value);
    partial void OnSeenAtChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public ChatNotification()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatConversationId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid ChatConversationId
		{
			get
			{
				return this._ChatConversationId;
			}
			set
			{
				if ((this._ChatConversationId != value))
				{
					if (this._ChatConversation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChatConversationIdChanging(value);
					this.SendPropertyChanging();
					this._ChatConversationId = value;
					this.SendPropertyChanged("ChatConversationId");
					this.OnChatConversationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageByUserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.Guid> MessageByUserId
		{
			get
			{
				return this._MessageByUserId;
			}
			set
			{
				if ((this._MessageByUserId != value))
				{
					this.OnMessageByUserIdChanging(value);
					this.SendPropertyChanging();
					this._MessageByUserId = value;
					this.SendPropertyChanged("MessageByUserId");
					this.OnMessageByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSeen", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsSeen
		{
			get
			{
				return this._IsSeen;
			}
			set
			{
				if ((this._IsSeen != value))
				{
					this.OnIsSeenChanging(value);
					this.SendPropertyChanging();
					this._IsSeen = value;
					this.SendPropertyChanged("IsSeen");
					this.OnIsSeenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeenAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> SeenAt
		{
			get
			{
				return this._SeenAt;
			}
			set
			{
				if ((this._SeenAt != value))
				{
					this.OnSeenAtChanging(value);
					this.SendPropertyChanging();
					this._SeenAt = value;
					this.SendPropertyChanged("SeenAt");
					this.OnSeenAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatConversation_ChatNotification", Storage="_ChatConversation", ThisKey="ChatConversationId", OtherKey="Id", IsForeignKey=true)]
		public ChatConversation ChatConversation
		{
			get
			{
				return this._ChatConversation.Entity;
			}
			set
			{
				ChatConversation previousValue = this._ChatConversation.Entity;
				if (((previousValue != value) 
							|| (this._ChatConversation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChatConversation.Entity = null;
						previousValue.ChatNotifications.Remove(this);
					}
					this._ChatConversation.Entity = value;
					if ((value != null))
					{
						value.ChatNotifications.Add(this);
						this._ChatConversationId = value.Id;
					}
					else
					{
						this._ChatConversationId = default(System.Guid);
					}
					this.SendPropertyChanged("ChatConversation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ChatConversation = default(EntityRef<ChatConversation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuperUserSetting")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SuperUserSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _CutOffDate;
		
		private bool _RequireOneCaps;
		
		private bool _RequireOneLower;
		
		private bool _RequireOneDigit;
		
		private bool _RequireSpecialChar;
		
		private int _PasswordHistoryLimit;
		
		private int _MinimumLength;
		
		private int _MaximumPasswordAge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCutOffDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCutOffDateChanged();
    partial void OnRequireOneCapsChanging(bool value);
    partial void OnRequireOneCapsChanged();
    partial void OnRequireOneLowerChanging(bool value);
    partial void OnRequireOneLowerChanged();
    partial void OnRequireOneDigitChanging(bool value);
    partial void OnRequireOneDigitChanged();
    partial void OnRequireSpecialCharChanging(bool value);
    partial void OnRequireSpecialCharChanged();
    partial void OnPasswordHistoryLimitChanging(int value);
    partial void OnPasswordHistoryLimitChanged();
    partial void OnMinimumLengthChanging(int value);
    partial void OnMinimumLengthChanged();
    partial void OnMaximumPasswordAgeChanging(int value);
    partial void OnMaximumPasswordAgeChanged();
    #endregion
		
		public SuperUserSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutOffDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> CutOffDate
		{
			get
			{
				return this._CutOffDate;
			}
			set
			{
				if ((this._CutOffDate != value))
				{
					this.OnCutOffDateChanging(value);
					this.SendPropertyChanging();
					this._CutOffDate = value;
					this.SendPropertyChanged("CutOffDate");
					this.OnCutOffDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireOneCaps", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool RequireOneCaps
		{
			get
			{
				return this._RequireOneCaps;
			}
			set
			{
				if ((this._RequireOneCaps != value))
				{
					this.OnRequireOneCapsChanging(value);
					this.SendPropertyChanging();
					this._RequireOneCaps = value;
					this.SendPropertyChanged("RequireOneCaps");
					this.OnRequireOneCapsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireOneLower", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool RequireOneLower
		{
			get
			{
				return this._RequireOneLower;
			}
			set
			{
				if ((this._RequireOneLower != value))
				{
					this.OnRequireOneLowerChanging(value);
					this.SendPropertyChanging();
					this._RequireOneLower = value;
					this.SendPropertyChanged("RequireOneLower");
					this.OnRequireOneLowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireOneDigit", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool RequireOneDigit
		{
			get
			{
				return this._RequireOneDigit;
			}
			set
			{
				if ((this._RequireOneDigit != value))
				{
					this.OnRequireOneDigitChanging(value);
					this.SendPropertyChanging();
					this._RequireOneDigit = value;
					this.SendPropertyChanged("RequireOneDigit");
					this.OnRequireOneDigitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireSpecialChar", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool RequireSpecialChar
		{
			get
			{
				return this._RequireSpecialChar;
			}
			set
			{
				if ((this._RequireSpecialChar != value))
				{
					this.OnRequireSpecialCharChanging(value);
					this.SendPropertyChanging();
					this._RequireSpecialChar = value;
					this.SendPropertyChanged("RequireSpecialChar");
					this.OnRequireSpecialCharChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHistoryLimit", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int PasswordHistoryLimit
		{
			get
			{
				return this._PasswordHistoryLimit;
			}
			set
			{
				if ((this._PasswordHistoryLimit != value))
				{
					this.OnPasswordHistoryLimitChanging(value);
					this.SendPropertyChanging();
					this._PasswordHistoryLimit = value;
					this.SendPropertyChanged("PasswordHistoryLimit");
					this.OnPasswordHistoryLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumLength", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int MinimumLength
		{
			get
			{
				return this._MinimumLength;
			}
			set
			{
				if ((this._MinimumLength != value))
				{
					this.OnMinimumLengthChanging(value);
					this.SendPropertyChanging();
					this._MinimumLength = value;
					this.SendPropertyChanged("MinimumLength");
					this.OnMinimumLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumPasswordAge", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int MaximumPasswordAge
		{
			get
			{
				return this._MaximumPasswordAge;
			}
			set
			{
				if ((this._MaximumPasswordAge != value))
				{
					this.OnMaximumPasswordAgeChanging(value);
					this.SendPropertyChanging();
					this._MaximumPasswordAge = value;
					this.SendPropertyChanged("MaximumPasswordAge");
					this.OnMaximumPasswordAgeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SearchMixFormulationsResult
	{
		
		private long _FormulationId;
		
		private long _MixId;
		
		private int _PlantId;
		
		private string _Number;
		
		private System.Nullable<decimal> _AshPercentage;
		
		private System.Nullable<decimal> _FineAggPercentage;
		
		private System.Nullable<decimal> _Sacks;
		
		private string _Air;
		
		private System.Nullable<int> _PSI;
		
		private string _Slump;
		
		private string _MD1;
		
		private string _MD2;
		
		private string _MD3;
		
		private string _MD4;
		
		private string _Description;
		
		private string _SalesDesc;
		
		private System.Nullable<decimal> _Cost;
		
		private string _MixNumber;
		
		public SearchMixFormulationsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormulationId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long FormulationId
		{
			get
			{
				return this._FormulationId;
			}
			set
			{
				if ((this._FormulationId != value))
				{
					this._FormulationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixId", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long MixId
		{
			get
			{
				return this._MixId;
			}
			set
			{
				if ((this._MixId != value))
				{
					this._MixId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PlantId
		{
			get
			{
				return this._PlantId;
			}
			set
			{
				if ((this._PlantId != value))
				{
					this._PlantId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AshPercentage", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> AshPercentage
		{
			get
			{
				return this._AshPercentage;
			}
			set
			{
				if ((this._AshPercentage != value))
				{
					this._AshPercentage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineAggPercentage", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> FineAggPercentage
		{
			get
			{
				return this._FineAggPercentage;
			}
			set
			{
				if ((this._FineAggPercentage != value))
				{
					this._FineAggPercentage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sacks", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<decimal> Sacks
		{
			get
			{
				return this._Sacks;
			}
			set
			{
				if ((this._Sacks != value))
				{
					this._Sacks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Air", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Air
		{
			get
			{
				return this._Air;
			}
			set
			{
				if ((this._Air != value))
				{
					this._Air = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSI", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> PSI
		{
			get
			{
				return this._PSI;
			}
			set
			{
				if ((this._PSI != value))
				{
					this._PSI = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slump", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Slump
		{
			get
			{
				return this._Slump;
			}
			set
			{
				if ((this._Slump != value))
				{
					this._Slump = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD1", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string MD1
		{
			get
			{
				return this._MD1;
			}
			set
			{
				if ((this._MD1 != value))
				{
					this._MD1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD2", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string MD2
		{
			get
			{
				return this._MD2;
			}
			set
			{
				if ((this._MD2 != value))
				{
					this._MD2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD3", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string MD3
		{
			get
			{
				return this._MD3;
			}
			set
			{
				if ((this._MD3 != value))
				{
					this._MD3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD4", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string MD4
		{
			get
			{
				return this._MD4;
			}
			set
			{
				if ((this._MD4 != value))
				{
					this._MD4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDesc", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string SalesDesc
		{
			get
			{
				return this._SalesDesc;
			}
			set
			{
				if ((this._SalesDesc != value))
				{
					this._SalesDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string MixNumber
		{
			get
			{
				return this._MixNumber;
			}
			set
			{
				if ((this._MixNumber != value))
				{
					this._MixNumber = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
