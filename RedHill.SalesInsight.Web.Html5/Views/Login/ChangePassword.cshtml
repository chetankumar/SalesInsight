@using RedHill.SalesInsight.DAL.DataTypes
@model RedHill.SalesInsight.Web.Html5.Models.ChangePasswordView

@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="" class="login-container">
    <div class="middle-login">
        <div class="block-flat">
            <div class="header">
                @*<h3 class="text-center">@(Model.NewUser > 0 ? "Create Account Password" : "Change your Password")</h3>*@
            </div>
            <div>
                @using (Html.BeginForm("ChangePassword", "Login", FormMethod.Post, new { @role = "form", @class = "form-horizontal", @style = "margin-bottom: 0px!important;" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="content">
                        <h4 class="title">Change Your Password</h4>
                        @Html.Partial("_ViewBagError", "")
                        @if (ViewBag.PasswordErrors != null)
                        {
                            <div class="alert alert-danger">
                                @Html.Raw(string.Join("<br/>", ViewBag.PasswordErrors))
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-info">
                                <p>Password Requirements:</p>
                                @Html.Raw(string.Join("", RedHill.SalesInsight.DAL.SIDAL.FindSuperUserSettings().PasswordRules.Select(x => string.Format("<li>{0}</li>", x))))
                            </div>
                        }
                        @*@if (!Model.UserFound)
                        {
                            <div class="alert alert-danger">
                                <i class="fa fa-times-circle sign"></i><strong>Error!</strong> The User @Model.UserName was not found in the system.
                            </div>
                        }
                        else
                        {*@
                        <div class="form-group">
                            <div class="col-sm-12">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                                    @Html.HiddenFor(x => x.UserName)
                                    @Html.HiddenFor(x => x.UserId)
                                    @Html.HiddenFor(x => x.Token)
                                    @Html.PasswordFor(x => x.NewPassword, new { @class = "form-control", @placeholder = "Enter NEW Password", @required = "required" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                                    @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm NEW Password", @required = "required" })
                                </div>
                            </div>
                        </div>
                        @*}*@
                    </div>
                    <div class="foot">
                        <a href="/Login/Index" class="btn btn-primary pull-left"><i class="fa fa-fw fa-arrow-left"></i>Back to Login</a>
                        <input type="submit" class="btn btn-primary" value="Change" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>



